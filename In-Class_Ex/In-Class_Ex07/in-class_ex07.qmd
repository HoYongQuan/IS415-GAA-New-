---
title: "in-class_ex07"
---

Installing and Loading the R Packages

Four R Packages will be used for this in-class exercise, they are: sf, sfdep, tmap and tidyverse

```{r}
pacman::p_load(sf, tmap, sfdep, tidyverse)
```

# The Data

For the purpose of this in-class exericse, the Human data sets will be used.

There are two data sets in this use case, they are:

-   Hunan, a geospatial data set in ESRI shapefile format, and

-   Hunan_2021, an attribute data set in csv format.

## Importing geospatial data

```{r}
hunan <- st_read(dsn ="data/geospatial", 
                 layer = "Hunan")

#contiguity can use this dataset, because of geographic coordinate system.
```

## Importing attribute table

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")

#didnt load readr in pacman, because this package is part of tidyverse
```

## Combining both data frame by using left join

::: callout-important
## Important

In order to retain the geospatial properties, the left data frame must be the sf data.frame (i.e. hunan)
:::

```{r}
hunan_GDPPC <- left_join(hunan, hunan2012)%>%
  select(1:4, 7, 15)
#retain column 1 to 4, 7 and 15
```

# Plotting Choropleth Map

```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC) +
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") +
  tm_layout(main.title = "Distribution of GDP per capita by district, Hunan Province",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) + 
  tm_scale_bar() +
  tm_grid(alpha = 0.2)

#Classification: Regional Economics, Equal interval range
```

## Deriving Contiguity weights: Queen's method

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                         style = "W",),
         .before = 1)
```

Computing Global Moran's I

```{r}
moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)
```

Performing GLobal Moran's I test

```{r}
global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

reject null hypothesis that gdp per capita is spatial dependence because p value is \< 1

If moran I statistics value is negative then the alternative hypothesis is lesser than

```{r}
#needed for simulation to ensure same result
set.seed(1234)

global_moran_perm(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt,
                  nsim = 99)



```

# Computing local Moran's I

```{r}
lisa <- wm_q %>%
  mutate(local_moran = local_moran(
    GDPPC, nb, wt, nsim=99),
    .before = 1) %>%
  unnest(local_moran)
lisa
```

## Visualising local Moran's I

```{r}
tmap_mode("plot")
tm_shape(lisa) + 
  tm_fill("ii") + 
  tm_borders(alpha = 0.5) + 
  tm_view(set.zoom.limits = c(6,8))
```

```{r}
tmap_mode("plot")
tm_shape(lisa) + 
  tm_fill("p_ii_sim") + 
  tm_borders(alpha = 0.5)
```

```{r}
lisa_sig <- lisa %>%
  filter(p_ii_sim < 0.05)

tmap_mode("plot")

tm_shape(lisa) +
  tm_polygons() + 
  tm_borders(alpha = 0.5) +
tm_shape(lisa_sig) + 
  tm_fill("mean") + 
  tm_borders(alpha = 0.4)
```

## Hotspot and Cold Spot Area Analysis

```{r}
HCSA <- wm_q %>%
  mutate(local_Gi = local_gstar_perm(
    GDPPC, nb, wt, nsim=99),
    .before = 1) %>%
  unnest(local_Gi)
HCSA
```

Local g has ii=0

generally we will use g\*

## Visualising Gi\*

```{r}
tmap_mode("view")
tm_shape(HCSA) +
  tm_fill("gi_star") +
  tm_borders(alpha=0.5) +
  tm_view(set.zoom.limits = c(6,8))
```

## Visualising p-value of HCSA

```{r}
tmap_mode("plot")
tm_shape(HCSA) + 
  tm_fill("p_sim") + 
  tm_borders(alpha = 0.5)
```

# Creating a Time Series Cube

```{r}
#GDPPC <- read_csv('data/aspatial/Hunan_GDPPC.csv')
```

```{r}
#GDPPC_st <- spacetime(GDPPC, hunan, .loc_col = "County",
#                      .time_col = "Year")
```

```{r}
#GDPPC_nb <- GDPPC_st %>%
#  activate('geometry') %>%
#  mutate(
#    nb = include_self(st_contiguity(geometry)),
#    wt = st_weights(nb)
#  ) %>%
#  set_nbs("nb") %>%
#  set_wts("wt")
```

Computing Gi

```{r}
#gi_stars <- GDPPC_nb %>%
#  group_by(Year) %>%
#  mutate(gi_star = local_gstar_perm(
#    GDPPC,nb, wt, nsim=99
#  )) %>%
#  tidyr::unnest(gi_star)
```

Mann-Kendall Test

```{r}
#cbg <- gi_stars %>%
#  ungroup() %>%
#  filter(County = "Changsa") |>
#  select(County, Year, gi_star)
```
