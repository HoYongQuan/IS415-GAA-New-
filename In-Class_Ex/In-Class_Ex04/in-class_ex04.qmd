---
title: "In-class Exercise 4: 4  1st Order Spatial Point Patterns Analysis Methods"
date: "30 January 2023"
date-modified: "`r Sys.Date()`"
format: html
execute:
  eval: true
  echo: true
  warning: false
editor:  visual
---

# Getting Started

```{r}
pacman::p_load(maptools, sf, raster, spatstat, tmap)
```

Things to learn from this code chunk.

# Importing Data

```{r}
childcare_sf <- st_read("data/child-care-services-geojson.geojson") %>%
  st_transform(crs = 3414)
```

```{r}
sg_sf <- st_read(dsn = "data", layer="CostalOutline")
```

```{r}
mpsz_sf <- st_read(dsn = "data", 
                layer = "MP14_SUBZONE_WEB_PL")
```

Converting sf data frames to sp's Spatial\* class

```{r}
childcare <- as_Spatial(childcare_sf)
mpsz <- as_Spatial(mpsz_sf)
sg <- as_Spatial(sg_sf)
```

Converting the Spatial\* class into generic sp format (retain geometric only, tables dropped)

```{r}
childcare_sp <- as(childcare, "SpatialPoints")
sg_sp <- as(sg, "SpatialPolygons")
```

Converting the generic sp format into spatstat's PPP format

```{r}
childcare_ppp <- as(childcare_sp, "ppp")
childcare_ppp
```

# Visualizing the sf layers

::: callout-note
## alpha value control instensity of color

data can be sf or sp format (layer method)

set.zoom.limits: 11 is zoom out value, 14 is zoom in value
:::

```{r}
tmap_mode('view')
tm_shape(childcare_sf)+
  tm_dots(alph = 0.5, size = 0.01)
  tm_view(set.zoom.limits = c(11,14))
```

# Geospatial Data Wrangling

## Handling duplicated point events

::: callout-note
jitter: push the data points apart

ppp: required by spatstat

owin: confine the study area
:::

```{r}
childcare_ppp_jit <- rjitter(childcare_ppp, retry = TRUE, nsim=1, drop = TRUE)
```

```{r}
any(duplicated(childcare_ppp_jit))
```

## Creating owin object

```{r}

```

## Combining point events object and owin object
