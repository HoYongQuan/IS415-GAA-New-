[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, i will install and load tidyverse and sf packages.\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-a-geospatial-data-in-shapefile-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-a-geospatial-data-in-shapefile-format",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Importing a geospatial data in shapefile format",
    "text": "Importing a geospatial data in shapefile format\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer= \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-polyline-feature-data-in-shapefile-form",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-polyline-feature-data-in-shapefile-form",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Importing polyline feature data in shapefile form",
    "text": "Importing polyline feature data in shapefile form\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-gis-data-in-kml-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-gis-data-in-kml-format",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Importing GIS data in kml format",
    "text": "Importing GIS data in kml format\n\npreschool = st_read(\"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#working-with-st_geometry",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#working-with-st_geometry",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Working with st_geometry()",
    "text": "Working with st_geometry()\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#working-with-glimpse",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#working-with-glimpse",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Working with glimpse",
    "text": "Working with glimpse\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#working-with-head",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#working-with-head",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Working with head()",
    "text": "Working with head()\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Assigning EPSG code to a simple feature data frame",
    "text": "Assigning EPSG code to a simple feature data frame\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#transforming-the-projection-of-preschool-from-wgs84-to-svy21",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#transforming-the-projection-of-preschool-from-wgs84-to-svy21",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Transforming the projection of preschool from wgs84 to svy21",
    "text": "Transforming the projection of preschool from wgs84 to svy21\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-the-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#importing-the-aspatial-data",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Importing the aspatial data",
    "text": "Importing the aspatial data\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 6809 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood, room_type, license\ndbl  (11): id, host_id, latitude, longitude, price, minimum_nights, number_o...\nlgl   (1): neighbourhood_group\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlist(listings) \n\n[[1]]\n# A tibble: 6,809 × 18\n       id name     host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n    <dbl> <chr>      <dbl> <chr>   <lgl>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1 816940 Old Sou… 4290554 Joyce   NA      Zuid       52.4    4.85 Entire…   165\n 2 528022 Somewhe… 2594559 Els     NA      Wester…    52.4    4.89 Privat…   100\n 3 538723 Beautif…  356740 Dimphy  NA      Waterg…    52.4    4.94 Entire…   140\n 4 549310 Family … 2699033 Barbara NA      De Baa…    52.4    4.86 Entire…   200\n 5 553514 B&B Wes…  618589 Mirjam  NA      Wester…    52.4    4.87 Entire…    80\n 6   2818 Quiet G…    3159 Daniel  NA      Oostel…    52.4    4.94 Privat…    59\n 7  20168 Studio …   59484 Alexan… NA      Centru…    52.4    4.89 Privat…   106\n 8  27886 Romanti…   97647 Flip    NA      Centru…    52.4    4.89 Privat…   140\n 9  28871 Comfort…  124245 Edwin   NA      Centru…    52.4    4.89 Privat…    75\n10  29051 Comfort…  124245 Edwin   NA      Centru…    52.4    4.89 Privat…    55\n# … with 6,799 more rows, 8 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>,\n#   number_of_reviews_ltm <dbl>, license <chr>, and abbreviated variable names\n#   ¹​host_name, ²​neighbourhood_group, ³​neighbourhood, ⁴​latitude, ⁵​longitude,\n#   ⁶​room_type"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Creating a simple feature data frame from an aspatial data frame",
    "text": "Creating a simple feature data frame from an aspatial data frame\n\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 6,809\nColumns: 17\n$ id                             <dbl> 816940, 528022, 538723, 549310, 553514,…\n$ name                           <chr> \"Old South Lovely Garden Apartment\", \"S…\n$ host_id                        <dbl> 4290554, 2594559, 356740, 2699033, 6185…\n$ host_name                      <chr> \"Joyce\", \"Els\", \"Dimphy\", \"Barbara\", \"M…\n$ neighbourhood_group            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ neighbourhood                  <chr> \"Zuid\", \"Westerpark\", \"Watergraafsmeer\"…\n$ room_type                      <chr> \"Entire home/apt\", \"Private room\", \"Ent…\n$ price                          <dbl> 165, 100, 140, 200, 80, 59, 106, 140, 7…\n$ minimum_nights                 <dbl> 6, 2, 5, 2, 2, 3, 1, 2, 2, 2, 3, 3, 2, …\n$ number_of_reviews              <dbl> 63, 248, 57, 54, 162, 314, 339, 243, 45…\n$ last_review                    <date> 2022-11-28, 2022-11-28, 2020-01-01, 20…\n$ reviews_per_month              <dbl> 0.54, 3.30, 0.45, 0.60, 1.34, 1.88, 2.1…\n$ calculated_host_listings_count <dbl> 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, …\n$ availability_365               <dbl> 11, 212, 0, 7, 1, 27, 0, 40, 91, 142, 0…\n$ number_of_reviews_ltm          <dbl> 2, 37, 0, 7, 0, 29, 0, 17, 84, 82, 7, 3…\n$ license                        <chr> \"03632A9BE56A736890D1\", \"0363 9289 A94D…\n$ geometry                       <POINT [m]> POINT (-4434165 10654894), POINT …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#buffering",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#buffering",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Buffering",
    "text": "Buffering\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#point-in-polygon-count",
    "href": "Hands-on_Ex/Hands-on_Ex01/hands-on_ex01.html#point-in-polygon-count",
    "title": "Hands-on Exercise 1: geospatial Data Wrangling with R",
    "section": "Point-in-polygon count",
    "text": "Point-in-polygon count\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           58\n\n\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "",
    "text": "Choropleth mapping involves the symbolisation of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors. For example, a social scientist may need to use a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary.\nIn this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called **tmap** package.\n\n\nIt is advisable for you to read the functional description of each function before using them."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#the-data",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.3.1 The Data",
    "text": "2.3.1 The Data\nTwo data set will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#importing-geospatial-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#importing-geospatial-data-into-r",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.3.2 Importing Geospatial Data into R",
    "text": "2.3.2 Importing Geospatial Data into R\nThe code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nYou can examine the content of mpsz by using the code chunk below.\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#importing-attribute-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#importing-attribute-data-into-r",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.3.3 Importing Attribute Data into R",
    "text": "2.3.3 Importing Attribute Data into R\nNext, we will import respopagsex2000to2018.csv file into RStudio and save the file into an R dataframe called popagsex.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#data-preparation",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.3.4 Data Preparation",
    "text": "2.3.4 Data Preparation\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n2.3.4.1 Data Wrangling\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\n2.3.4.2 Joining the attribute data and geospatial data\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nThing to learn from the code chunk above:\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#plotting-choropleth-map-quickly-by-using-qtm",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#plotting-choropleth-map-quickly-by-using-qtm",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.1 Plotting Choropleth map quickly by using qtm()",
    "text": "2.4.1 Plotting Choropleth map quickly by using qtm()\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\nThings to learn from the code chunk above:\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#creating-a-choropleth-map-by-using-tmaps-element",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#creating-a-choropleth-map-by-using-tmaps-element",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.2 Creating a choropleth map by using tmap’s element",
    "text": "2.4.2 Creating a choropleth map by using tmap’s element\nDespite its usefulness of drawing a choropleth map quickly and easily, the disadvantge of qtm() is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map as shown in the figure below, tmap’s drawing elements should be used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nIn the following sub-section, we will share with you tmap functions that used to plot these elements.\n\n2.4.2.1 Drawing a base map\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n2.4.2.2 Drawing a choropleth map using tm_polygons()\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\nThings to learn from tm_polygons():\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap will be provided in sub-section 4.3.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\nBy default, Missing value will be shaded in grey.\n\n\n\n2.4.2.3 Drawing a choropleth map using tm_fill() and tm_border()*\nActually, tm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nNotice that the planning subzones are shared according to the respective dependecy values\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\nNotice that light-gray border lines have been added on the choropleth map.\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#data-classification-methods-of-tmap",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.3 Data classification methods of tmap",
    "text": "2.4.3 Data classification methods of tmap\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n2.4.3.1 Plotting choropleth maps with built-in classification methods\nThe code chunk below shows a quantile data classification that used 5 classes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification method.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n2.4.3.2 Plotting choropleth map with custome break\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our breaks vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\nNow, we will plot the choropleth map by using the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#colour-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#colour-scheme",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.4 Colour Scheme",
    "text": "2.4.4 Colour Scheme\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\n2.4.4.1 Using ColourBrewer palette\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the choropleth map is shaded in green.\nTo reverse the colour shading, add a “-” prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#map-layouts",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.5 Map Layouts",
    "text": "2.4.5 Map Layouts\nMap layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\n2.4.5.1 Map Legend\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n2.4.5.2 Map style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\n\n\n2.4.5.3 Cartographic Furniture\nBeside map style, tmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nTo reset the default style, refer to the code chunk below.\n\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.6 Drawing Small Multiple Choropleth Maps",
    "text": "2.4.6 Drawing Small Multiple Choropleth Maps\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n2.4.6.1 By Assigning multiple values to at least one of the aesthetic arguments\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n2.4.6.2 By defining a group-by variable in tm_facets()\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\n2.4.6.3 By creating multiple stand-alone maps with tmap_arrange()\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#mapping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-on_Ex/Hands-on_Ex02/hands-on_ex02.html#mapping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "2.4.7 Mapping Spatial Object Meeting a Selection Criterion",
    "text": "2.4.7 Mapping Spatial Object Meeting a Selection Criterion\nInstead of creating small multiple choropleth map, you can also use selection function to map spatial objects meeting the selection criterion.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Spatial Point Pattern Analysis is the evaluation of the pattern or distribution, of a set of points on a surface. The point can be location of:\n\nevents such as crime, traffic accident and disease onset, or\nbusiness services (coffee and fastfood outlets) or facilities such as childcare and eldercare.\n\nUsing appropriate functions of spatstat, this hands-on exercise aims to discover the spatial point processes of childecare centres in Singapore.\nThe specific questions we would like to answer are as follows:\n\nare the childcare centres in Singapore randomly distributed throughout the country?\nif the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#importing-the-spatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#importing-the-spatial-data",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.4.1 Importing the spatial data",
    "text": "4.4.1 Importing the spatial data\nIn this section, st_read() of sf package will be used to import these three geospatial data sets into R.\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nBefore we can use these data for analysis, it is important for us to ensure that they are projected in same projection system.\n\nsg_sf\n\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\nFirst 10 features:\n   GDO_GID MSLINK MAPID              COSTAL_NAM                       geometry\n1        1      1     0                 Linkway POLYGON ((14362.86 32307.49...\n2        2      3     0                 SENTOSA POLYGON ((25683.97 26236.91...\n3        3      5     0          PULAU SARIMBUN POLYGON ((11471.97 46273.01...\n4        4      6     0           PULAU SAMULUN POLYGON ((12602.3 32061.35,...\n5        5      7     0 SINGAPORE - MAIN ISLAND POLYGON ((17915.53 46770.73...\n6        6      8     0            PULAU KEPPEL POLYGON ((25606.84 27481.21...\n7        7      9     0             PULAU BRANI POLYGON ((27778.17 27321.28...\n8        8     10     0                   ISLET POLYGON ((25874.11 26121.48...\n9        9     11     0           PULAU PALAWAN POLYGON ((25937.33 25797.66...\n10      10     12     0                   ISLET POLYGON ((27459.33 24854.08...\n\n\n\nmpsz_sf\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#mapping-the-geospatial-data-sets",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#mapping-the-geospatial-data-sets",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.4.2 Mapping the geospatial data sets",
    "text": "4.4.2 Mapping the geospatial data sets\nAfter checking the referencing system of each geospatial data data frame, it is also useful for us to plot a map to show their spatial patterns.\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nsf_use_s2(FALSE)\n\nSpherical geometry (s2) switched off\n\n\n\ntm_shape(sg_sf) +\n  tm_polygons() +\ntm_shape(mpsz_sf) +\n  tm_polygons() +\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\nNotice that all the geospatial layers are within the same map extend. This shows that their referencing system and coordinate values are referred to similar spatial context. This is very important in any geospatial analysis.\nAlternatively, we can also prepare a pin map by using the code chunk below.\n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\nNotice that at the interactive mode, tmap is using leaflet for R API. The advantage of this interactive pin map is it allows us to navigate and zoom around the map freely. We can also query the information of each simple feature (i.e. the point) by clicking of them. Last but not least, you can also change the background of the internet map layer. Currently, three internet map layers are provided. They are: ESRI.WorldGrayCanvas, OpenStreetMap, and ESRI.WorldTopoMap. The default is ESRI.WorldGrayCanvas."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.5.1 Converting sf data frames to sp’s Spatial* class",
    "text": "4.5.1 Converting sf data frames to sp’s Spatial* class\nThe code chunk below uses as_Spatial() of sf package to convert the three geospatial data from simple feature data frame to sp’s Spatial* class.\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\nDisplay information of the three Spatial* Classes as shown below\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\nNotice that the geospatial data have been converted into their respective sp’s Spatial* classes now."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.5.2 Converting the Spatial* class into generic sp format",
    "text": "4.5.2 Converting the Spatial* class into generic sp format\nspatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into Spatial object first.\nThe codes chunk below converts the Spatial* classes into generic sp objects.\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\nNext, you should display the sp objects properties as shown below.\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.5.3 Converting the generic sp format into spatstat’s ppp format",
    "text": "4.5.3 Converting the generic sp format into spatstat’s ppp format\nNow, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\nNow, let us plot childcare_ppp and examine the different.\n\nplot(childcare_ppp)\n\n\n\n\nYou can take a quick look at the summary statistics of the newly created ppp object by using the code chunk below.\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\nNotice the warning message about duplicates. In spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#handling-duplicated-points",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#handling-duplicated-points",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.5.4 Handling duplicated points",
    "text": "4.5.4 Handling duplicated points\nWe can check the duplication in a ppp object by using the code chunk below\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo count the number of co-indicence point, we will use the multiplicity() function as shown in the code chunk below.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\nThe output shows that there are 128 duplicated point events.\nTo view the locations of these duplicate point events, we will plot childcare data by using the code chunk below.\n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\nThere are three ways to overcome this problem. The easiest way is to delete the duplicates. But, that will also mean that some useful point events will be lost.\nThe second solution is use jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nThe third solution is to make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points. Then you would need analytical techniques that take into account these marks.\nThe code chunk below implements the jittering approach.\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#creating-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#creating-owin-object",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.5.5 Creating owin object",
    "text": "4.5.5 Creating owin object\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to covert sg SpatialPolygon object into owin object of spatstat.\n\nsg_owin <- as(sg_sp, \"owin\")\n\nThe ouput object can be displayed by using plot() function\n\nplot(sg_owin)\n\n\n\n\nand summary() function of Base R.\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#combining-point-events-object-and-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#combining-point-events-object-and-owin-object",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.5.6 Combining point events object and owin object",
    "text": "4.5.6 Combining point events object and owin object\nIn this last step of geospatial data wrangling, we will extract childcare events that are located within Singapore by using the code chunk below.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nThe output object combined both the point and polygon feature in one ppp object class as shown below.\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\nplot the newly derived childcareSG_ppp as shown below.\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#kernel-density-estimation",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#kernel-density-estimation",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.6.1 Kernel Density Estimation",
    "text": "4.6.1 Kernel Density Estimation\nIn this section, you will learn how to compute the kernel density estimation (KDE) of childcare services in Singapore.\n\n4.6.1.1 Computing kernel density estimation using automatic bandwidth selection method\nThe code chunk below computes a kernel density by using the following configurations of density() of spatstat:\n\nbw.diggle() automatic bandwidth selection method. Other recommended methods are bw.CvL(), bw.scott() or bw.ppl().\nThe smoothing kernel used is gaussian, which is the default. Other smoothing methods are: “epanechnikov”, “quartic” or “disc”.\nThe intensity estimate is corrected for edge effect bias by using method described by Jones (1993) and Diggle (2010, equation 18.9). The default is FALSE.\n\n\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\n\nThe plot() function of Base R is then used to display the kernel density derived.\n\nplot(kde_childcareSG_bw)\n\n\n\n\nThe density values of the output range from 0 to 0.000035 which is way too small to comprehend. This is because the default unit of measurement of svy21 is in meter. As a result, the density values computed is in “number of points per square meter”.\nBefore we move on to next section, it is good to know that you can retrieve the bandwidth used to compute the kde layer by using the code chunk below.\n\nbw <- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n\n4.6.1.2 Rescalling KDE values\nIn the code chunk below, rescale() is used to covert the unit of measurement from meter to kilometer.\n\nchildcareSG_ppp.km <- rescale(childcareSG_ppp, 1000, \"km\")\n\nNow, we can re-run density() using the resale data set and plot the output kde map.\n\nkde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nplot(kde_childcareSG.bw)\n\n\n\n\nNotice that output image looks identical to the earlier version, the only changes in the data values (refer to the legend)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#working-with-different-automatic-bandwidth-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#working-with-different-automatic-bandwidth-methods",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.6.2 Working with different automatic bandwidth methods",
    "text": "4.6.2 Working with different automatic bandwidth methods\nBeside bw.diggle(), there are three other spatstat functions can be used to determine the bandwidth, they are: bw.CvL(), bw.scott(), and bw.ppl().\nLet us take a look at the bandwidth return by these automatic bandwidth calculation methods by using the code chunk below.\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\nBaddeley et. (2016) suggested the use of the bw.ppl() algorithm because in ther experience it tends to produce the more appropriate values when the pattern consists predominantly of tight clusters. But they also insist that if the purpose of once study is to detect a single tight cluster in the midst of random noise then the bw.diggle() method seems to work best.\nThe code chunk beow will be used to compare the output of using bw.diggle and bw.ppl methods.\n\nkde_childcareSG.ppl <- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#working-with-different-kernel-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#working-with-different-kernel-methods",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.6.3 Working with different kernel methods",
    "text": "4.6.3 Working with different kernel methods\nBy default, the kernel method used in density.ppp() is gaussian. But there are three other options, namely: Epanechnikov, Quartic and Dics.\nThe code chunk below will be used to compute three more kernel density estimations by using these three kernel function.\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\npoint-in-polygon test had difficulty with 215 points (total score not 0 or 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#computing-kde-by-using-fixed-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#computing-kde-by-using-fixed-bandwidth",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.7.1 Computing KDE by using fixed bandwidth",
    "text": "4.7.1 Computing KDE by using fixed bandwidth\nNext, you will compute a KDE layer by defining a bandwidth of 600 meter. Notice that in the code chunk below, the sigma value used is 0.6. This is because the unit of measurement of childcareSG_ppp.km object is in kilometer, hence the 600m is 0.6km.\n\nkde_childcareSG_600 <- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nplot(kde_childcareSG_600)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#computing-kde-by-using-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#computing-kde-by-using-adaptive-bandwidth",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.7.2 Computing KDE by using adaptive bandwidth",
    "text": "4.7.2 Computing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example urban versus rural. One way to overcome this problem is by using adaptive bandwidth instead.\nIn this section, you will learn how to derive adaptive kernel density estimation by using density.adaptive() of spatstat.\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 215 points (total score not 0\nor 1)\n\nplot(kde_childcareSG_adaptive)\n\n\n\n\nWe can compare the fixed and adaptive kernel density estimation outputs by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-kde-output-into-grid-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#converting-kde-output-into-grid-object",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.7.3 Converting KDE output into grid object",
    "text": "4.7.3 Converting KDE output into grid object\nThe result is the same, we just convert it so that it is suitable for mapping purposes\n\ngridded_kde_childcareSG_bw <- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n4.7.3.1 Converting gridded output into raster\nNext, we will convert the gridded kernal density objects into RasterLayer object by using raster() of raster package.\n\nkde_childcareSG_bw_raster <- raster(gridded_kde_childcareSG_bw)\n\nLet us take a look at the properties of kde_childcareSG_bw_raster RasterLayer.\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\nNotice that the crs property is NA.\n\n\n4.7.3.2 Assigning projection systems\nThe code chunk below will be used to include the CRS information on kde_childcareSG_bw_raster RasterLayer.\n\nprojection(kde_childcareSG_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\nNotice that the crs property is completed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#visualing-the-output-in-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#visualing-the-output-in-tmap",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.7.4 Visualing the output in tmap",
    "text": "4.7.4 Visualing the output in tmap\nFinally, we will display the raster in cartographic quality map using tmap package.\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\nNotice that the raster values are encoded explicitly onto the raster pixel using the values in “v”” field."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#comparing-spatial-point-patterns-using-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#comparing-spatial-point-patterns-using-kde",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.7.5 Comparing Spatial Point Patterns using KDE",
    "text": "4.7.5 Comparing Spatial Point Patterns using KDE\nIn this section, you will learn how to compare KDE of childcare at Ponggol, Tampines, Chua Chu Kang and Jurong West planning areas.\n\n4.7.5.1 Extracting Study Area\nThe code chunk below will be used to extract the target planning areas.\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlotting target planning areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n4.7.5.2 Converting the spatial data point frame into generic sp format\nNext, we will convert these SpatialPolygonsDataFrame layers into generic spatialpolygons layers.\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n4.7.5.3 Creating owin object\nNow, we will convert these SpatialPolygons objects into owin objects that is required by spatstat.\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n4.7.5.4 Combining childcare points and the study area\nBy using the code chunk below, we are able to extract childcare that is within the specific region to do our analysis later on.\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThe code chunk below is used to plot these four study areas and the locations of the childcare centres.\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n4.7.5.5 Computing KDE\nThe code chunk below will be used to compute the KDE of these four planning area. bw.diggle method is used to derive the bandwidth of each\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\n\n4.7.5.6 Computing fixed bandwidth KDE\nFor comparison purposes, we will use 250m as the bandwidth.\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.8.1 Testing spatial point patterns using Clark and Evans Test",
    "text": "4.8.1 Testing spatial point patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 29 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 12 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 8 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 28 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 11 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 36 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 12 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 12 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 12 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 11 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 28 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 10 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 11 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 12 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 11 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 32 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 29 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 28 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 29 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 27 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 11 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 26 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 13 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 14 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 17 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 15 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 30 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 23 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 25 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 12 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 24 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 18 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 20 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 19 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 11 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 21 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 22 points (total score not 0\nor 1)\n\n\nWarning: point-in-polygon test had difficulty with 16 points (total score not 0\nor 1)\n\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.8.2 Clark and Evans Test: Choa Chu Kang planning area",
    "text": "4.8.2 Clark and Evans Test: Choa Chu Kang planning area\nIn the code chunk below, clarkevans.test() of spatstat is used to performs Clark-Evans test of aggregation for childcare centre in Choa Chu Kang planning area.\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_ck_ppp\nR = 0.91095, p-value = 0.062\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#clark-and-evans-test-tampines-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/hands-on_ex03.html#clark-and-evans-test-tampines-planning-area",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "4.8.3 Clark and Evans Test: Tampines planning area",
    "text": "4.8.3 Clark and Evans Test: Tampines planning area\nIn the code chunk below, the similar test is used to analyse the spatial point patterns of childcare centre in Tampines planning area.\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_tm_ppp\nR = 0.79622, p-value = 0.002\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Spatial Point Pattern Analysis is the evaluation of the pattern or distribution, of a set of points on a surface. The point can be location of:\n\nevents such as crime, traffic accident and disease onset, or\nbusiness services (coffee and fastfood outlets) or facilities such as childcare and eldercare.\n\nUsing appropriate functions of spatstat, this hands-on exercise aims to discover the spatial point processes of childecare centres in Singapore.\nThe specific questions we would like to answer are as follows:\n\nare the childcare centres in Singapore randomly distributed throughout the country?\nif the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#importing-the-spatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#importing-the-spatial-data",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.4.1 Importing the Spatial data",
    "text": "5.4.1 Importing the Spatial data\nIn this section, st_read() of sf package will be used to import these three geospatial data sets into R.\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex03.1\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex03.1\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex03.1\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nAssigning Correct CRS Values\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#mapping-the-geospatial-data-sets",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#mapping-the-geospatial-data-sets",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.4.2 Mapping the geospatial data sets",
    "text": "5.4.2 Mapping the geospatial data sets\n\ntm_shape(sg_sf) +\n  tm_polygons() +\ntm_shape(mpsz_sf) +\n  tm_polygons() +\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\nNotice that all the geospatial layers are within the same map extend. This shows that their referencing system and coordinate values are referred to similar spatial context. This is very important in any geospatial analysis.\nAlternatively, we can also prepare a pin map by using the code chunk below.\n\ntmap_mode('view')\n\n\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nNotice that at the interactive mode, tmap is using leaflet for R API. The advantage of this interactive pin map is it allows us to navigate and zoom around the map freely. We can also query the information of each simple feature (i.e. the point) by clicking of them. Last but not least, you can also change the background of the internet map layer. Currently, three internet map layers are provided. They are: ESRI.WorldGrayCanvas, OpenStreetMap, and ESRI.WorldTopoMap. The default is ESRI.WorldGrayCanvas.\n\n\n\n\n\n\nRemember to switch back to plot mode after the interactive map. This is because, each interactive mode will consume a connection. You should also avoid displaying ecessive numbers of interactive maps (i.e. not more than 10) in one RMarkdown document when publish on Netlify."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5.1 Converting sf data frames to sp’s Spatial* class",
    "text": "5.5.1 Converting sf data frames to sp’s Spatial* class\nThe code chunk below uses as_Spatial() of sf package to convert the three geospatial data from simple feature data frame to sp’s Spatial* class.\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\ndisplay the information of the three spatial* classes as shown below.\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\nNotice that the geospatial data have been converted into their respective sp’s Spatial* classes now."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5.2 Converting the Spatial* class into generic sp format",
    "text": "5.5.2 Converting the Spatial* class into generic sp format\nspatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into Spatial object first.\nThe codes chunk below converts the Spatial* classes into generic sp objects.\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\nNext, you should display the sp objects properties\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5.3 Converting the generic sp format into spatstat’s ppp format",
    "text": "5.5.3 Converting the generic sp format into spatstat’s ppp format\nNow, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\nNow, let us plot childcare_ppp and examine the different.\n\nplot(childcare_ppp)\n\n\n\n\nYou can take a quick look at the summary statistics of the newly created ppp object by using the code chunk below.\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\nNotice the warning message about duplicates. In spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#handling-duplicated-points",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#handling-duplicated-points",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5.4 Handling duplicated points",
    "text": "5.5.4 Handling duplicated points\nWe can check the duplication in a ppp object by using the code chunk below.\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo count the number of co-indicence point, we will use the multiplicity() function as shown in the code chunk below.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\nThe output shows that there are 128 duplicated point events.\nTo view the locations of these duplicate point events, we will plot childcare data by using the code chunk below.\n\ntmap_mode('view')\n\n\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nThere are three ways to overcome this problem. The easiest way is to delete the duplicates. But, that will also mean that some useful point events will be lost.\nThe second solution is use jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nThe third solution is to make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points. Then you would need analytical techniques that take into account these marks.\nThe code chunk below implements the jittering approach.\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#creating-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#creating-owin-object",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5.5 Creating owin object",
    "text": "5.5.5 Creating owin object\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to covert sg SpatialPolygon object into owin object of spatstat.\n\nsg_owin <- as(sg_sp, \"owin\")\n\nThe ouput object can be displayed by using plot() function\n\nplot(sg_owin)\n\n\n\n\nand summary() function of Base R.\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#combining-point-events-object-and-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#combining-point-events-object-and-owin-object",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5.6 Combining point events object and owin object",
    "text": "5.5.6 Combining point events object and owin object\nIn this last step of geospatial data wrangling, we will extract childcare events that are located within Singapore by using the code chunk below.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nThe output object combined both the point and polygon feature in one ppp object class as shown below.\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\nNewly plotted derived childcareSG_ppp\n\nplot(childcareSG_ppp)\n\n\n\n\n\n5.5.6.1 Extracting study area\nThe code chunk below will be used to extract the target planning areas\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlotting target planning areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n5.5.6.2 Converting the spatial point data frame into generic sp format\nNext, we will convert these SpatialPolygonsDataFrame layers into generic spatialpolygons layers.\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n5.5.6.3 Creating owin object\nNow, we will convert these SpatialPolygons objects into owin objects that is required by spatstat.\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n5.5.6.4 Combining childcare points and the study area\nBy using the code chunk below, we are able to extract childcare that is within the specific region to do our analysis later on.\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThe code chunk below is used to plot these four study areas and the locations of the childcare centres.\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.7.1 Choa Chu Kang planning area",
    "text": "5.7.1 Choa Chu Kang planning area\n\n5.7.1.1 Computing G-function estimation\nThe code chunk below is used to compute G-function using Gest() of spatat package.\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n5.7.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-function\n\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_CK.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.7.2 Tampines planning area",
    "text": "5.7.2 Tampines planning area\n\n5.7.2.1 Computing G-Function estimation\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n5.7.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area-1",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area-1",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.8.1 Choa Chu Kang Planning Area",
    "text": "5.8.1 Choa Chu Kang Planning Area\n\n5.8.1.1 Computing F-function estimation\nThe code chunk below is used to compute F-function using Fest() of spatat package.\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#performing-complete-spatial-randomness-test-2",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#performing-complete-spatial-randomness-test-2",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.8.2 Performing Complete Spatial Randomness Test",
    "text": "5.8.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-function\n\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_CK.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area-1",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area-1",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.8.3 Tampines Planning Area",
    "text": "5.8.3 Tampines Planning Area\n\n5.8.3.1 Computing F-Function estimation\nMonte Carlo Test with F-Function\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n5.8.3.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area-2",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area-2",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.9.1 Choa Chu Kang Planning Area",
    "text": "5.9.1 Choa Chu Kang Planning Area\n\n5.9.1.1 Computing K-Function Estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n5.9.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area-2",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area-2",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.9.2 Tampines planning area",
    "text": "5.9.2 Tampines planning area\n\n5.9.2.1 Computing K-Function estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n5.9.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area-3",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#choa-chu-kang-planning-area-3",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.10.1 Choa Chu Kang Planning Area",
    "text": "5.10.1 Choa Chu Kang Planning Area\n\n5.10.1.1 Computing L Function estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n5.10.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area-3",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/hands-on_ex03.1.html#tampines-planning-area-3",
    "title": "5 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.10.2 Tampines Planning Area",
    "text": "5.10.2 Tampines Planning Area\n\n5.10.2.1 Computing L-Function estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n5.10.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below will be used to perform the hypothesis testing.\n\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\nThen, plot the model output by using the code chunk below.\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package;\ncompute Getis-Ord's Gi-statistics for detecting hot spot or/and cold spot area by using appropriate functions of spdep package; and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#the-analytical-question",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#the-analytical-question",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.2.1 The analytical question",
    "text": "9.2.1 The analytical question\nIn spatial policy, one of the main development objective of the local government and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be \"is there sign of spatial clustering?\". And, if the answer for this question is yes, then our next question will be \"where are these clusters?\"\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.(https://en.wikipedia.org/wiki/Hunan)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#the-study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#the-study-area-and-data",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.2.2 The study area and data",
    "text": "9.2.2 The study area and data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan's local development indicators in 2012."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#setting-the-analytical-tools",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#setting-the-analytical-tools",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.2.3 Setting the Analytical Tools",
    "text": "9.2.3 Setting the Analytical Tools\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\nThe code chunk below is used to perform the following tasks:\n\ncreating a package list containing the necessary R packages,\nchecking if the R packages in the package list have been installed in R,\n\nif they have yet to be installed, RStudio will installed the missing packages,\n\nlaunching the packages into R environment.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#import-shapefile-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#import-shapefile-into-r-environment",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.3.1 Import shapefile into r environment",
    "text": "9.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex09\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#import-csv-file-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#import-csv-file-into-r-environment",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.3.2 Import CSV file into r environment",
    "text": "9.3.2 Import CSV file into r environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#performing-relational-join",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#performing-relational-join",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.3.3 Performing relational join",
    "text": "9.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan's SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n\nJoining, by = \"County\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#visualising-regional-development-indicator",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.3.4 Visualising Regional Development Indicator",
    "text": "9.3.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#computing-contiguity-spatial-weights",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.4.1 Computing Contiguity Spatial Weights",
    "text": "9.4.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a \"queen\" argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don't specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#row-standardised-weights-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#row-standardised-weights-matrix",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.4.2 Row-standardised weights matrix",
    "text": "9.4.2 Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=\"W\"). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors' values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we'll stick with the style=\"W\" option for simplicity's sake but note that other more robust options are available, notably style=\"B\".\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe input of nb2listw() must be an object of class nb. The syntax of the function has two major arguments, namely style and zero.poly.\n\nstyle can take values \"W\", \"B\", \"C\", \"U\", \"minmax\" and \"S\". B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#global-spatial-autocorrelation-morans-l",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#global-spatial-autocorrelation-morans-l",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.4.3 Global Spatial Autocorrelation: Moran’s l",
    "text": "9.4.3 Global Spatial Autocorrelation: Moran’s l\nIn this section, you will learn how to perform Moran's I statistics testing by using moran.test() of spdep."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#morans-l-test",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#morans-l-test",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.4.4 Moran’s l test",
    "text": "9.4.4 Moran’s l test\nThe code chunk below performs Moran's I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n9.4.4.1 Computing Monte Carlo Moran’s l\nThe code chunk below performs permutation test for Moran's I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n9.4.4.2 Visualising Monte Carlo Moran’s l\nIt is always a good practice for us the examine the simulated Moran's I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#glboal-spatial-autocorrelation-gearys",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#glboal-spatial-autocorrelation-gearys",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.4.5 Glboal Spatial Autocorrelation: Geary’s",
    "text": "9.4.5 Glboal Spatial Autocorrelation: Geary’s\nIn this section, you will learn how to perform Geary's c statistics testing by using appropriate functions of spdep package.\n\n9.4.5.1 Geary’s C Test\nThe code chunk below performs Geary's C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n9.4.5.2 Computing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary's C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n9.4.5.3 Visualising the Monte Carlo Geary’s C\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#compute-morans-l-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#compute-morans-l-correlogram",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.5.1 Compute Moran’s l correlogram",
    "text": "9.5.1 Compute Moran’s l correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran's I. The plot() of base Graph is then used to plot the output.\n\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#compute-gearys-c-correlogram-and-plot",
    "href": "Hands-on_Ex/Hands-on_Ex09/hands-on_ex9.html#compute-gearys-c-correlogram-and-plot",
    "title": "9 Global Measures of Spatial Autocorrelation",
    "section": "9.5.2 Compute Geary’s C correlogram and plot",
    "text": "9.5.2 Compute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary's C. The plot() of base Graph is then used to plot the output.\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package;\ncompute Getis-Ord's Gi-statistics for detecting hot spot or/and cold spot area by using appropriate functions of spdep package; and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#the-analytical-question",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#the-analytical-question",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.2.1 The analytical question",
    "text": "10.2.1 The analytical question\nIn spatial policy, one of the main development objective of the local govenment and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be \"is there sign of spatial clustering?\". And, if the answer for this question is yes, then our next question will be \"where are these clusters?\"\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.(https://en.wikipedia.org/wiki/Hunan)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#the-study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#the-study-area-and-data",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.2.2 The Study Area and Data",
    "text": "10.2.2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan's local development indicators in 2012."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#setting-the-analytical-tools",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#setting-the-analytical-tools",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.2.3 Setting the Analytical Tools",
    "text": "10.2.3 Setting the Analytical Tools\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\nThe code chunk below is used to perform the following tasks:\n\ncreating a package list containing the necessary R packages,\nchecking if the R packages in the package list have been installed in R,\n\nif they have yet to be installed, RStudio will installed the missing packages,\n\nlaunching the packages into R environment.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#import-shapefile-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#import-shapefile-into-r-environment",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.3.1 Import shapefile into r environment",
    "text": "10.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#import-csv-file-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#import-csv-file-into-r-environment",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.3.2 Import csv file into R environment",
    "text": "10.3.2 Import csv file into R environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#performing-relational-join",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#performing-relational-join",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.3.3 Performing relational join",
    "text": "10.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan's SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n\nJoining, by = \"County\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#visualising-regional-development-indicator",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.3.4 Visualising Regional Development Indicator",
    "text": "10.3.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-contiguity-spatial-weights",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.1 Computing Contiguity Spatial Weights",
    "text": "10.4.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a \"queen\" argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don't specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#row-standardised-weights-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#row-standardised-weights-matrix",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.2 Row-standardised weights matrix",
    "text": "10.4.2 Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=\"W\"). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors' values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we'll stick with the style=\"W\" option for simplicity's sake but note that other more robust options are available, notably style=\"B\".\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe input of nb2listw() must be an object of class nb. The syntax of the function has two major arguments, namely style and zero.poly.\n\nstyle can take values \"W\", \"B\", \"C\", \"U\", \"minmax\" and \"S\". B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#global-spatial-autocorrelation-morans-l",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#global-spatial-autocorrelation-morans-l",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.3 Global Spatial Autocorrelation: Moran’s l",
    "text": "10.4.3 Global Spatial Autocorrelation: Moran’s l\nIn this section, you will learn how to perform Moran's I statistics testing by using moran.test() of spdep."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#morans-l-test",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#morans-l-test",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.4 Moran’s l test",
    "text": "10.4.4 Moran’s l test\nThe code chunk below performs Moran's I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n10.4.4.1 Computing Monte Carlo Moran’s l\nThe code chunk below performs permutation test for Moran's I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n10.4.4.2 Visualising Monte Carlo Moran’s l\nIt is always a good practice for us the examine the simulated Moran's I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#gearys-c-test",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#gearys-c-test",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.5.1 Geary’s C Test",
    "text": "10.4.5.1 Geary’s C Test\nThe code chunk below performs Geary's C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-monte-carlo-gearys-c",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-monte-carlo-gearys-c",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.5.2 Computing Monte Carlo Geary’s C",
    "text": "10.4.5.2 Computing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary's C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#visualising-the-monte-carlo-gearys-c",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#visualising-the-monte-carlo-gearys-c",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.4.5.3 Visualising the Monte Carlo Geary’s C",
    "text": "10.4.5.3 Visualising the Monte Carlo Geary’s C\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#compute-morans-l-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#compute-morans-l-correlogram",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.5.1 Compute Moran’s l correlogram",
    "text": "10.5.1 Compute Moran’s l correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran's I. The plot() of base Graph is then used to plot the output.\n\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#compute-gearys-c-correlogram-and-plot",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#compute-gearys-c-correlogram-and-plot",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.5.2 Compute Geary’s C correlogram and plot",
    "text": "10.5.2 Compute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary's C. The plot() of base Graph is then used to plot the output.\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-local-morans-l",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-local-morans-l",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.6.1 Computing local Moran’s l",
    "text": "10.6.1 Computing local Moran’s l\nTo compute local Moran's I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran's I of GDPPC2012 at the county level.\n\nfips <- order(hunan$County)\nlocalMI <- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran's I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nThe code chunk below list the content of the local Moran matrix derived by using printCoefmat().\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n10.6.1.1 Mapping the local Moran’s l\nBefore mapping the local Moran's I map, it is wise to append the local Moran's I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\n\nhunan.localMI <- cbind(hunan,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n10.6.1.2 Mapping local Moran’s l values\nUsing choropleth mapping functions of tmap package, we can plot the local Moran's I values by using the code chinks below.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n10.6.1.3 Mapping local Moran’s l p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\nThe code chunks below produce a choropleth map of Moran's I p-values by using functions of tmap package.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.4 Mapping both local Moran’s l values and p-values\nFor effective interpretation, it is better to plot both the local Moran's I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\nlocalMI.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#plotting-moran-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#plotting-moran-scatterplot",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.7.1 Plotting Moran Scatterplot",
    "text": "10.7.1 Plotting Moran Scatterplot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\nnci <- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\nNotice that the plot is split in 4 quadrants. The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. This are the high-high locations in the lesson slide."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#plotting-moran-scatterplot-with-standardised-variable",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#plotting-moran-scatterplot-with-standardised-variable",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.7.2 PLotting Moran scatterplot with standardised variable",
    "text": "10.7.2 PLotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\nhunan$Z.GDPPC <- scale(hunan$GDPPC) %>% \n  as.vector \n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\nNow, we are ready to plot the Moran scatterplot again by using the code chunk below.\n\nnci2 <- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#preparing-lisa-map-classes",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#preparing-lisa-map-classes",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.7.3 Preparing LISA map classes",
    "text": "10.7.3 Preparing LISA map classes\nThe code chunks below show the steps to prepare a LISA cluster map.\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\nNext, derives the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nThis is followed by centering the local Moran's around the mean.\n\nLM_I <- localMI[,1] - mean(localMI[,1])    \n\nNext, we will set a statistical significance level for the local Moran.\n\nsignif <- 0.05       \n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\nLastly, places non-significant Moran in the category 0.\n\nquadrant[localMI[,5]>signif] <- 0\n\nIn fact, we can combined all the steps into one single code chunk as shown below:\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#plotting-lisa-map",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#plotting-lisa-map",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.7.4 Plotting LISA map",
    "text": "10.7.4 Plotting LISA map\nNow, we can build the LISA map by using the code chunks below.\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran's I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\nWe can also include the local Moran's I map and p-value map as shown below for easy comparison."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#getis-and-ords-g-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#getis-and-ords-g-statistics",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.8.1 Getis and Ord’s G-Statistics",
    "text": "10.8.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord's G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#deriving-distance-based-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#deriving-distance-based-weight-matrix",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.8.2 Deriving distance-based weight matrix",
    "text": "10.8.2 Deriving distance-based weight matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\n\n10.8.2.1 Deriving the centriod\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords <- cbind(longitude, latitude)\n\n\n\n10.8.2.2 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n\n\n10.8.2.3 Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\nThe output spatial weights object is called wm62_lw."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-adaptive-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#computing-adaptive-distance-weight-matrix",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.8.3 Computing Adaptive distance weight matrix",
    "text": "10.8.3 Computing Adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#gi-statistics-using-fixed-distance",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#gi-statistics-using-fixed-distance",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.9.1 Gi statistics using fixed distance",
    "text": "10.9.1 Gi statistics using fixed distance\n\nfips <- order(hunan$County)\ngi.fixed <- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes \"gstari\" set to TRUE or FALSE, \"call\" set to the function call, and class \"localG\".\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi <- cbind(hunan, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#mapping-gi-values-with-fixed-distance-weights",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#mapping-gi-values-with-fixed-distance-weights",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.9.2 Mapping Gi values with fixed distance weights",
    "text": "10.9.2 Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nGimap <-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#gi-statistics-using-adaptive-distance",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#gi-statistics-using-adaptive-distance",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.9.3 Gi statistics using adaptive distance",
    "text": "10.9.3 Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips <- order(hunan$County)\ngi.adaptive <- localG(hunan$GDPPC, knn_lw)\nhunan.gi <- cbind(hunan, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#mapping-gi-values-with-adaptive-distance-weights",
    "href": "Hands-on_Ex/Hands-on_Ex10/hands-on_ex10.html#mapping-gi-values-with-adaptive-distance-weights",
    "title": "10 Local Measures of Spatial Autocorrelation",
    "section": "10.9.4 Mapping Gi values with adaptive distance weights",
    "text": "10.9.4 Mapping Gi values with adaptive distance weights\nIt is time for us to visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc<- qtm(hunan, \"GDPPC\")\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, you will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#importing-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#importing-geospatial-data",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.5.1 Importing Geospatial Data",
    "text": "13.5.1 Importing Geospatial Data\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning subzone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Hands-on_Ex\\Hands-on_Ex13\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#updating-crs-information",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#updating-crs-information",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.5.2 Updating CRS Information",
    "text": "13.5.2 Updating CRS Information\nThe code chunk below updates the newly imported mpsz with the correct EPSG code\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\nAfter transforming the projection metadata, you can varify the projection of the newly transformed mpsz_svy21 by using st_crs() of sf package.\nThe code chunk below will be used to varify the newly transformed mpsz_svy21.\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG: is indicated as 3414 now.\nNext, you will reveal the extent of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#importing-the-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#importing-the-aspatial-data",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.6.1 Importing the Aspatial Data",
    "text": "13.6.1 Importing the Aspatial Data\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nRows: 1436 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe codes chunks below uses glimpse() to display the data structure of will do the job.\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nNext, summary() of base R is used to display the summary statistics of cond_resale tibble data frame.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#converting-aspatial-data-frame-into-a-sf-object",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#converting-aspatial-data-frame-into-a-sf-object",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.6.2 Converting Aspatial Data Frame into a SF Object",
    "text": "13.6.2 Converting Aspatial Data Frame into a SF Object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN\n\n\nNotice that the output is in point feature data frame."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#eda-using-statistical-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#eda-using-statistical-graphics",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.7.1 EDA Using statistical graphics",
    "text": "13.7.1 EDA Using statistical graphics\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, you can plot the LOG_SELLING_PRICE using the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nNotice that the distribution is relatively less skewed after the transformation."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#multiple-histogram-plots-distribution-of-variables",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#multiple-histogram-plots-distribution-of-variables",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.7.2 Multiple Histogram Plots distribution of variables",
    "text": "13.7.2 Multiple Histogram Plots distribution of variables\nIn this section, you will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#drawing-statistical-point-map",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#drawing-statistical-point-map",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.7.3 Drawing Statistical Point Map",
    "text": "13.7.3 Drawing Statistical Point Map\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\nFirst, we will turn on the interactive mode of tmap by using the code chunk below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\n\ntmap_options(check.and.fix = TRUE)\n\nNext, the code chunks below is used to create an interactive point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\nNotice that tm_dots() is used instead of tm_bubbles().\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nBefore moving on to the next section, the code below will be used to turn R display into plot mode.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#simple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#simple-linear-regression-method",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.8.1 Simple Linear Regression Method",
    "text": "13.8.1 Simple Linear Regression Method\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n      *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#multiple-linear-regression-method",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.8.2 Multiple Linear Regression Method",
    "text": "13.8.2 Multiple Linear Regression Method\n\n13.8.2.1 Visualising the relationships of the independent variables\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.8.3 Building a hedonic pricing model using multiple linear regression method",
    "text": "13.8.3 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below using lm() to calibrate the multiple linear regression model.\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#preparing-publication-quality-table-olsrr-method",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#preparing-publication-quality-table-olsrr-method",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.8.4 Preparing Publication Quality Table: olsrr method",
    "text": "13.8.4 Preparing Publication Quality Table: olsrr method\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#preparing-publication-quality-table-gtsummary-method",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#preparing-publication-quality-table-gtsummary-method",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.8.5 Preparing Publication Quality Table: gtsummary method",
    "text": "13.8.5 Preparing Publication Quality Table: gtsummary method\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n13.8.5.1 Checking for multicolinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n\n\n13.8.5.2 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n13.8.5.3 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chunk below.\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n13.8.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\nThe code chunk below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nThe code chunks below is used to create an interactive point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nRemember to switch back to “plot” mode before continue.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#building-fixed-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#building-fixed-bandwidth-gwr-model",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.9.1 Building Fixed Bandwidth GWR Model",
    "text": "13.9.1 Building Fixed Bandwidth GWR Model\n\n13.9.1.1 Computing Fixed Bandwidth\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\nThe result shows that the recommended bandwidth is 971.3405 metres.\n\n\n13.9.1.2 GWModel method - fixed bandwidth\nNow we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel.\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-13 08:31:51 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2023-03-13 08:31:52 \n\n\nThe report shows that the AICc of the gwr is 42263.61 which is significantly smaller than the globel multiple linear regression model of 42967.1."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#building-adaptive-bandwidth-gwr-model",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.9.2 Building Adaptive Bandwidth GWR Model",
    "text": "13.9.2 Building Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth approach.\n\n13.9.2.1 Computing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\n13.9.2.2 Constructing the adaptive bandwitdth gwr model\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and gaussian kernel as shown in the code chunk below.\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nThe code below can be used to display the model output.\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-13 08:32:00 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2023-03-13 08:32:02 \n\n\nThe report shows that the AICc the adaptive distance gwr is 41982.22 which is even smaller than the AICc of the fixed distance gwr of 42263.61."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#visualising-gwr-output",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#visualising-gwr-output",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.9.3 Visualising GWR Output",
    "text": "13.9.3 Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#converting-sdf-into-sf-data.frame",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#converting-sdf-into-sf-data.frame",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.9.4 Converting SDF into sf data.frame",
    "text": "13.9.4 Converting SDF into sf data.frame\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#visualising-local-r2",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.9.5 Visualising local R2",
    "text": "13.9.5 Visualising local R2\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex13/hands-on_ex13.html#visualising-coefficient-estimates",
    "title": "13 Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "13.9.6 Visualising coefficient estimates",
    "text": "13.9.6 Visualising coefficient estimates\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n13.9.6.1 By URA Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)\n\nWarning: The shape mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ] is\ninvalid. See sf::st_is_valid"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "",
    "text": "Water is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issues in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard.\n\n\n\nGeospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate geospatial data wrangling methods to prepare the data for water point mapping study. For the purpose of this study, Nigeria will be used as the study country.\n\n\n\n\n\nFor the purpose of this assignment, data from WPdx Global Data Repositories will be used. There are two versions of the data. They are: WPdx-Basic and WPdx+. You are required to use WPdx+ data set.\n\n\n\nNigeria Level-2 Administrative Boundary (also known as Local Government Area) polygon features GIS data will be used in this take-home exercise. The data can be downloaded either from The Humanitarian Data Exchange portal or geoBoundaries.\n\n\n\n\nThe specific tasks of this take-home exercise are as follows:\n\nUsing appropriate sf method, import the shapefile into R and save it in a simple feature data frame format. Note that there are three Projected Coordinate Systems of Nigeria, they are: EPSG: 26391, 26392, and 26303. You can use any one of them.\nUsing appropriate tidyr and dplyr methods, derive the number of functional and non-functional water points at LGA level.\nCombining the geospatial and aspatial data frame into simple feature data frame.\nVisualising the distribution of water point by using appropriate statistical methods."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#importing-geospatial-data",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#importing-geospatial-data",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "3.1 Importing Geospatial Data",
    "text": "3.1 Importing Geospatial Data\n\n3.1.1 The geoBoundaries data set\n#readings in metres\n\ngeoNGA <- st_read(\"data/geospatial/\",\n                  layer = \"geoBoundaries-NGA-ADM2\") %>% \n  st_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n3.1.2 The NGA dataset\n\nNGA <- st_read(\"data/geospatial/\",\n               layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#importing-aspatial-data",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#importing-aspatial-data",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "3.2 Importing Aspatial Data",
    "text": "3.2 Importing Aspatial Data\n\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\n\n3.2.1 Converting Aspatial Data into Geospatial\nConverting an aspatial data into an sf data.frame involves two steps.\nFirst, we need to convert the wkt field into sfc field by using st_as_sfc() data type.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\nNext, we will convert the tibble data.frame into an sf object by using st_sf(). It is also important for us to include the referencing system of the data into the sf object.\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\n3.2.2. Transforming into Nigeria projected coordinate system\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#excluding-redundant-fields",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#excluding-redundant-fields",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "4.1 Excluding redundant fields",
    "text": "4.1 Excluding redundant fields\nNGA sf data.frame consists of many redundent fields. The code chunk below uses select() of dplyr to retain column 3, 4, 8 and 9. Do you know why?\n\nNGA <- NGA %>%\n  select(c(3:4, 8:9))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#checking-for-duplicate-name",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#checking-for-duplicate-name",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "4.2 Checking for duplicate name",
    "text": "4.2 Checking for duplicate name\nIt is always important to check for duplicate name in the data main data fields. Using duplicated() of Base R, we can flag out LGA names that might be duplicated as shown in the code chunk below.\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nThe printout above shows that there are 6 LGAs with the same name. A Google search using the coordinates showed that there are LGAs with the same name but are located in different states. For instances, there is a Bassa LGA in Kogi State and a Bassa LGA in Plateau State.\nLet us correct these errors by using the code chunk below.\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\nNow, let us rerun the code chunk below to confirm that the duplicated name issue has been addressed.\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\ncharacter(0)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#extracting-water-point-data",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#extracting-water-point-data",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "5.1 Extracting Water Point Data",
    "text": "5.1 Extracting Water Point Data\nThe code chunk below is used to extract functional water point.\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nThe code chunk below is used to extract functional water point.\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\"))\n\nThe code chunk below is used to extract water point with unknown status.\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\nNext,the code chunk below is used to perform a quick EDA on the derived sf data.frames.\n\nfreq(data = wp_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional     45883      87.99           87.99\n2 Functional but needs repair      4579       8.78           96.77\n3   Functional but not in use      1686       3.23          100.00\n\n\n\nfreq(data = wp_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional     29385      91.25           91.25\n2 Non-Functional due to dry season      2403       7.46           98.71\n3         Abandoned/Decommissioned       234       0.73           99.44\n4                        Abandoned       175       0.54           99.98\n5 Non functional due to dry season         7       0.02          100.00\n\n\n\nfreq(data = wp_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown     10656        100             100"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#performing-point-in-polygon-count",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#performing-point-in-polygon-count",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "5.2 Performing Point-in-Polygon Count",
    "text": "5.2 Performing Point-in-Polygon Count\nNext, we want to find out the number of total, functional, nonfunctional and unknown water points in each LGA. This is performed in the following code chunk. First, it identifies the functional water points in each LGA by using st_intersects() of sf package. Next, length() is used to calculate the number of functional water points that fall inside each LGA.\n\nNGA_wp <- NGA %>% \n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unknown)))\n\nNotice that four new derived fields have been added into NGA_wp sf data.frame."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#visualizing-attributes-by-using-statistical-graphs",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#visualizing-attributes-by-using-statistical-graphs",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "5.3 Visualizing attributes by using statistical graphs",
    "text": "5.3 Visualizing attributes by using statistical graphs\nIn this code chunk below, appropriate functions of ggplot2 package is used to reveal the distribution of total water points by LGA in histogram.\n\nggplot(data = NGA_wp,\n       aes(x = total_wp)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#saving-the-analytical-data-in-rds-format",
    "href": "In-Class_Ex/In-Class_Ex02/in-class_ex02.html#saving-the-analytical-data-in-rds-format",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "5.4 Saving the analytical data in rds format",
    "text": "5.4 Saving the analytical data in rds format\nIn order to retain the sf object structure for subsequent analysis, it is recommended to save the sf data.frame into rds format.\nIn the code chunk below, write_rds() of readr package is used to export an sf data.frame into rds format.\n\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "",
    "text": "In this in-class exercise, you will gain hands-on experience on using appropriate R methods to plot analytical maps. For the purpose of this exercise, Nigeria water point data prepared during In-class Exercise 2 will be used.\n\n\n\nBy the end of this in-class exercise, you will be able to use appropriate functions of tmap and tidyverse to perform the following tasks:\n\nImporting geospatial data in rds format into R environment.\nCreating cartographic quality choropleth maps by using appropriate tmap functions.\nCreating rate map\nCreating percentile map\nCreating boxmap"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#installing-and-loading-packages",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#installing-and-loading-packages",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "2.1 Installing and Loading Packages",
    "text": "2.1 Installing and Loading Packages\n\npacman::p_load(tmap, tidyverse, sf)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#importing-data",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#importing-data",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\nImporting NGA_wp.rds created in the previous in-class into R environment.\n\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#visualizing-distribution-of-non-functional-water-point",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#visualizing-distribution-of-non-functional-water-point",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "3.1 Visualizing distribution of non-functional water point",
    "text": "3.1 Visualizing distribution of non-functional water point\nPlot a choropleth map showing the distribution of non-functional water point by LGA\n\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\n\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "4.1 Deriving Proportion of Functional Water Points and Non-Functional Water Points",
    "text": "4.1 Deriving Proportion of Functional Water Points and Non-Functional Water Points\nWe will tabulate the proportion of functional water points and the proportion of non-functional water points in each LGA. In the following code chunk, mutate() from dplyr package is used to derive two fields, namely pct_functional and pct_nonfunctional.\n\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#plotting-map-of-rate",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#plotting-map-of-rate",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "4.2 Plotting map of Rate",
    "text": "4.2 Plotting map of Rate\nPlot a choropleth map showing the distribution of percentage functional water point by LGA\n\ntm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate map of functional water point by LGAs\",\n            legend.outside = TRUE)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#percentile-map",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#percentile-map",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "5.1 Percentile Map",
    "text": "5.1 Percentile Map\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the begin and endpoint need to be included.\n\n5.1.1 Data Preparation\nStep 1: Exclude records with NA by using the code chunk below.\n\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\nStep 2: Creating customised classification and extracting values\n\npercent <- c(0,.01,.1,.5,.9,.99,1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\n5.1.2 Why Writing Functions?\nWriting a function has three big advantages over using copy-and-paste:\n\nYou can give a function an evocative name that makes your code easier to understand.\nAs requirements change, you only need to update code in one place, instead of many.\nYou eliminate the chance of making incidental mistakes when you copy and paste (i.e. updating a variable name in one place, but not in another).\n\n\n\n5.1.3. Creating the get.var function\nFirstly, we will write an R function as shown below to extract a variable (i.e. wp_nonfunctional) as a vector out of an sf data.frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv:vector with values (without a column name)\n\n\n\nget.var <- function(vname,df) {\n  v <- df[vname] %>% \n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n5.1.4 A percentile mapping function\n\npercentmap <- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"> 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\n\n\n5.1.5 Test drive the percentile mapping function\n\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\nNote that this is just a bare bones implementation. Additional arguments such as title, legend positioning just to name a few of them, could be passed to customise various features of the map."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#box-map",
    "href": "In-Class_Ex/In-Class_Ex03/in-class_ex03.html#box-map",
    "title": "In-class Exercise 3: Analytical Mapping",
    "section": "5.2 Box map",
    "text": "5.2 Box map\nIn essence, a box map is an augmented quartile map, with an additional lower and upper category. When there are lower outliers, then the starting point for the breaks is the minimum value, and the second break is the lower fence. In contrast, when there are no lower outliers, then the starting point for the breaks will be the lower fence, and the second break is the minimum value (there will be no observations that fall in the interval between the lower fence and the minimum value)\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\nDisplaying summary statistics on a choropleth map by using the basic principles of boxplot.\nTo create a box map, a custom breaks specification will be used. However, there is a complication. The break points for the box map vary depending on whether lower or upper outliers are present.\n\n\n5.2.1 Creating the box breaks function\nR Function that creating break points for a box map.\n\narguments:\n\nv:vector with obersations\nmult: multiplier for IQR (default 1.5)\n\nreturns:\n\nbb: vector with 7 break points compute quartile and fences\n\n\n\nboxbreaks <- function(v,mult=1.5) {\n  qv <- unname(quantile(v))\n  iqr <- qv[4] - qv[2]\n  upfence <- qv[4] + mult * iqr\n  lofence <- qv[2] - mult * iqr\n  # initialize break points vector\n  bb <- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence < qv[1]) {  # no lower outliers\n    bb[1] <- lofence\n    bb[2] <- floor(qv[1])\n  } else {\n    bb[2] <- lofence\n    bb[1] <- qv[1]\n  }\n  if (upfence > qv[5]) { # no upper outliers\n    bb[7] <- upfence\n    bb[6] <- ceiling(qv[5])\n  } else {\n    bb[6] <- upfence\n    bb[7] <- qv[5]\n  }\n  bb[3:5] <- qv[2:4]\n  return(bb)\n}\n\n\n\n5.2.2 Creating the get.var function\nThe code chunk below is an R function to extract a variable as a vector out of an sf data frame.\n\narguments:\n\nvname: varaible name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv:vector with values (without a column name)\n\n\n\nget.var <- function(vname,df) {\n  v <- df[vname] %>% st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n5.2.3. Test drive the newly created function\n\nvar <- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\n5.2.4 Boxmap function\nThe code chunk below is an R function to create a box map. - arguments: - vnam: variable name (as character, in quotes) - df: simple features polygon layer - legtitle: legend title - mtitle: map title - mult: multiplier for IQR - returns: - a tmap-element (plots a map)\n\nboxmap <- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var <- get.var(vnam,df)\n  bb <- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"< 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"> 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nboxmap(\"wp_nonfunctional\", NGA_wp)\n\nWarning: Breaks contains positive and negative values. Better is to use\ndiverging scale instead, or set auto.palette.mapping to FALSE.\n\n\n\n\n\n\n\n5.2.5 Recode zero\nThe code chunk below is used to recode LGAs with zero total water point into NA.\n\nNGA_wp <- NGA_wp %>%\n  mutate(wp_functional = na_if(\n    total_wp, total_wp < 0))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html",
    "title": "In-class Exercise 4: 4 1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)\n\nThings to learn from this code chunk."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html#handling-duplicated-point-events",
    "href": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html#handling-duplicated-point-events",
    "title": "In-class Exercise 4: 4 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Handling duplicated point events",
    "text": "Handling duplicated point events\n\n\n\n\n\n\nNote\n\n\n\njitter: push the data points apart\nppp: required by spatstat\nowin: confine the study area\n\n\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, retry = TRUE, nsim=1, drop = TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html#creating-owin-object",
    "href": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html#creating-owin-object",
    "title": "In-class Exercise 4: 4 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Creating owin object",
    "text": "Creating owin object"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html#combining-point-events-object-and-owin-object",
    "href": "In-Class_Ex/In-Class_Ex04/in-class_ex04.html#combining-point-events-object-and-owin-object",
    "title": "In-class Exercise 4: 4 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Combining point events object and owin object",
    "text": "Combining point events object and owin object"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/data/stores.html",
    "href": "In-Class_Ex/In-Class_Ex05/data/stores.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     \n\n\n        0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/data/study_area.html",
    "href": "In-Class_Ex/In-Class_Ex05/data/study_area.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/in-class_ex05.html",
    "href": "In-Class_Ex/In-Class_Ex05/in-class_ex05.html",
    "title": "in-class_ex05",
    "section": "",
    "text": "pacman:: p_load(tidyverse, tmap, sf ,sfdep)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/in-class_ex05.html#visualising-the-sf-layers",
    "href": "In-Class_Ex/In-Class_Ex05/in-class_ex05.html#visualising-the-sf-layers",
    "title": "in-class_ex05",
    "section": "Visualising the sf layers",
    "text": "Visualising the sf layers\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(studyArea) + \n  tm_polygons() +\ntm_shape(stores)+\n  tm_dots(col = \"Name\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(12,16))\n\n\n\n\n\n\n\nnb <- include_self(\n  st_knn(st_geometry(stores),6))\n\n\nwt <- st_kernel_weights(nb,\n                        stores,\n                        \"gaussian\",\n                        adaptive = TRUE)\n\n\nFamilyMart <- stores %>%\n  filter(Name == \"Family Mart\")\nA <- FamilyMart$Name\n\n\nSevenEleven <- stores %>%\n  filter(Name == \"7-Eleven\")\nB <- SevenEleven$Name\n\n\nLCLQ <- local_colocation(A, B, nb, wt, 49)\n\n\nLCLQ_stores <- cbind(stores, LCLQ)\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(studyArea) +\n  tm_polygons() + \ntm_shape(LCLQ_stores) +\n  tm_dots(col = \"X7.Eleven\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(12,16))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html",
    "href": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html",
    "title": "In-Class Exercise 6",
    "section": "",
    "text": "Three R packages will be used need for this in-class exercise, they are: sf, sfdep and tidyverse.\n\n\n\n\n\n\nDo it Yourself!\n\n\n\nUsing the steps you learned in previous lesson, install and load sf, tmap, sfdep and tidyverse packages into R environment\n\n\n\npacman::p_load(sf, tmap, sfdep, tidyverse)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#importing-geospatial-data",
    "href": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#importing-geospatial-data",
    "title": "In-Class Exercise 6",
    "section": "Importing geospatial data",
    "text": "Importing geospatial data\n\n\n\n\n\n\nDo it Yourself!\n\n\n\n\n\n\n\nhunan <- st_read(dsn =\"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n#contiguity can use this dataset, because of geographic coordinate system."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#importing-attribute-table",
    "href": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#importing-attribute-table",
    "title": "In-Class Exercise 6",
    "section": "Importing attribute table",
    "text": "Importing attribute table\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n#didnt load readr in pacman, because this package is part of tidyverse"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#combining-both-data-frame-by-using-left-join",
    "href": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#combining-both-data-frame-by-using-left-join",
    "title": "In-Class Exercise 6",
    "section": "Combining both data frame by using left join",
    "text": "Combining both data frame by using left join\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must be the sf data.frame (i.e. hunan)\n\n\n\nhunan_GDPPC <- left_join(hunan, hunan2012)%>%\n  select(1:4, 7, 15)\n#retain column 1 to 4, 7 and 15"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#contiguity-neighbours-method-queens-method",
    "href": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#contiguity-neighbours-method-queens-method",
    "title": "In-Class Exercise 6",
    "section": "Contiguity neighbours method: Queen’s method",
    "text": "Contiguity neighbours method: Queen’s method\nIn the code chunk below, st_contiguity() is used to derive a contiguity neighbour list by using Queen’s method.\n\ncn_queen <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         .before = 1)\n\n#mutate - create new field\n#.before = 1 = put newly created field at the first column\n#nb format c(2,3,4,57,85), numbers in the bracket represents the row name\n\nThe code chunk below is used to print the summary of the first lag neighbour list (i.e. nb)\n\n#summary(nb_queen$nb)\n\n\n\n\n\n\n\nDo it Yourself!\n\n\n\nUsing the steps you just learned, derive a contiguity neighbour list using Rook’s method\n\n\n\ncn_rook <- hunan_GDPPC %>%\n  mutate(nb= st_contiguity(geometry),\n         queen = FALSE,\n         .before = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#computing-contiguity-weights",
    "href": "In-Class_Ex/In-Class_Ex06/in-class_ex06.html#computing-contiguity-weights",
    "title": "In-Class Exercise 6",
    "section": "Computing Contiguity weights",
    "text": "Computing Contiguity weights\n\nContiguity weights: Queen’s method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb),\n         .before = 1)\n\n#nb is list\n\n\n\nContiguity weights: Rook’s method\n\nwm_r <- hunan %>%\n  mutate(nb = st_contiguity(geometry),\n         queen = FALSE,\n         wt = st_weights(nb),\n         .before = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "",
    "text": "Installing and Loading R Packages\nAs usual, p_load() of pacman package will be used to check if the necessary packages have been installed in R, if yes, load the packages on R environment.\nFive R packages are need for this in-class exercise, they are: sf, sfdep, tmap, and tidyverse.\n\npacman::p_load(sf, sfdep, tmap, plotly, tidyverse, zoo, Kendall)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#importing-geospatial-data",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#importing-geospatial-data",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Importing geospatial data",
    "text": "Importing geospatial data\nIn the code chunk below, st_read() of sf package is used to import Hunan shapefile into R.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#importing-attribute-table",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#importing-attribute-table",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Importing Attribute Table",
    "text": "Importing Attribute Table\nIn the code chunk below, read_csv() of readr is used to import Hunan_GDPPC.csv into R.\n\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\nRows: 1496 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (2): Year, GDPPC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#computing-gi",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#computing-gi",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Computing Gi*",
    "text": "Computing Gi*\nNext, we will compute the local Gi* statistics.\n\nDeriving the Spatial Weights\nThe code chunk below will be used to identify neighbors and to derive an inverse distance weights.\n\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n\n! Polygon provided. Using point on surface.\n\n\nWarning in st_point_on_surface.sfc(geometry): st_point_on_surface may not give\ncorrect results for longitude/latitude data\n\n\nNote that this dataset now has neighbors and weights for each time-slice.\n\nhead(GDPPC_nb)\n\nspacetime ────\n\n\nContext:`data`\n\n\n88 locations `County`\n\n\n17 time periods `Year`\n\n\n── data context ────────────────────────────────────────────────────────────────\n\n\n# A tibble: 6 × 5\n   Year County  GDPPC nb        wt       \n  <dbl> <chr>   <dbl> <list>    <list>   \n1  2005 Anxiang  8184 <int [6]> <dbl [6]>\n2  2005 Hanshou  6560 <int [6]> <dbl [6]>\n3  2005 Jinshi   9956 <int [5]> <dbl [5]>\n4  2005 Li       8394 <int [5]> <dbl [5]>\n5  2005 Linli    8850 <int [5]> <dbl [5]>\n6  2005 Shimen   9244 <int [6]> <dbl [6]>"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#computing-gi-1",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#computing-gi-1",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Computing Gi*",
    "text": "Computing Gi*\nWe can use these new columns to manually calculate the local Gi* for each location. We can do this by grouping by Year and using local_gstar_perm() of sfdep package. After which, we use unnest() to unnest gi_star column of the newly created gi_starts data.frame.\n\ngi_stars <- GDPPC_nb %>% \n  group_by(Year) %>% \n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %>% \n  tidyr::unnest(gi_star)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#arrange-to-show-significant-emerging-hotcold-spots",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#arrange-to-show-significant-emerging-hotcold-spots",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Arrange to show significant emerging hot/cold spots",
    "text": "Arrange to show significant emerging hot/cold spots\n\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#performing-emerging-hotspot-analysis",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#performing-emerging-hotspot-analysis",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Performing Emerging Hotspot Analysis",
    "text": "Performing Emerging Hotspot Analysis\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object x (i.e. GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\nehsa <- emerging_hotspot_analysis(\n  x = GDPPC_st, \n  .var = \"GDPPC\", \n  k = 1, \n  nsim = 99\n)\n\n\nVisualising the distribution of EHSA classes\nIn the code chunk below, ggplot2 functions ised used to reveal the distribution of EHSA classes as a bar chart.\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\nFigure above shows that sporadic cold spot class has the high numbers of county."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#visualising-ehsa",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07-1.html#visualising-ehsa",
    "title": "In-class Exercise 7: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Visualising EHSA",
    "text": "Visualising EHSA\nIn this section, you will learn how to visualise the geographic distribution EHSA classes. However, before we can do so, we need to join both hunan and ehsa together by using the code chunk below.\n\nhunan_ehsa <- hunan %>%\n  left_join(ehsa,\n           by =  c(\"County\" = \"location\"))\n\nNext, tmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\nehsa_sig <- hunan_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html",
    "title": "in-class_ex07",
    "section": "",
    "text": "Installing and Loading the R Packages\nFour R Packages will be used for this in-class exercise, they are: sf, sfdep, tmap and tidyverse"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#importing-geospatial-data",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#importing-geospatial-data",
    "title": "in-class_ex07",
    "section": "Importing geospatial data",
    "text": "Importing geospatial data\n\nhunan <- st_read(dsn =\"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n#contiguity can use this dataset, because of geographic coordinate system."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#importing-attribute-table",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#importing-attribute-table",
    "title": "in-class_ex07",
    "section": "Importing attribute table",
    "text": "Importing attribute table\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#didnt load readr in pacman, because this package is part of tidyverse"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#combining-both-data-frame-by-using-left-join",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#combining-both-data-frame-by-using-left-join",
    "title": "in-class_ex07",
    "section": "Combining both data frame by using left join",
    "text": "Combining both data frame by using left join\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must be the sf data.frame (i.e. hunan)\n\n\n\nhunan_GDPPC <- left_join(hunan, hunan2012)%>%\n  select(1:4, 7, 15)\n\nJoining, by = \"County\"\n\n#retain column 1 to 4, 7 and 15"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#step-1-deriving-contiguity-weights-queens-method",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#step-1-deriving-contiguity-weights-queens-method",
    "title": "in-class_ex07",
    "section": "Step 1: Deriving Contiguity weights: Queen’s method",
    "text": "Step 1: Deriving Contiguity weights: Queen’s method\nDeriving contiguity weights: Queen’s method\nIn the code chunk below, queen method is used to derive the contiguity weights.\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\",),\n         .before = 1)\n\n\nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734..."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#computing-global-morans-i",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#computing-global-morans-i",
    "title": "in-class_ex07",
    "section": "Computing Global Moran’s I",
    "text": "Computing Global Moran’s I\nIn the code chunk below, global_moran() function is used to compute the Moran's I value. Different from spdep package, the output is a tibble data.frame.\n\nmoranI <- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#performing-global-morans-i-test",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#performing-global-morans-i-test",
    "title": "in-class_ex07",
    "section": "Performing Global Moran’s I test",
    "text": "Performing Global Moran’s I test\nIn general, Moran's I test will be performed instead of just computing the Moran's I statistics. With sfdep package, Moran's I test can be performed by using global_moran_test() as shown in the code chunk below.\n\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#performing-global-moran-is-permutation-test",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#performing-global-moran-is-permutation-test",
    "title": "in-class_ex07",
    "section": "Performing Global Moran I’s permutation test",
    "text": "Performing Global Moran I’s permutation test\nIn practice, monte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm()\nIt is alway a good practice to use set.seed() before performing simulation. This is to ensure that the computation is reproducible.\nreject null hypothesis that gdp per capita is spatial dependence because p value is < 1\nIf moran I statistics value is negative then the alternative hypothesis is lesser than\n\n#needed for simulation to ensure same result\nset.seed(1234)\n\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe report above show that the p-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran's I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-local-morans-i",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-local-morans-i",
    "title": "in-class_ex07",
    "section": "Visualising local Moran’s I",
    "text": "Visualising local Moran’s I\nIn this code chunk below, tmap functions are used prepare a choropleth map by using value in the ii field.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-p-value-of-local-morans-i",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-p-value-of-local-morans-i",
    "title": "in-class_ex07",
    "section": "Visualising p-value of local moran’s I",
    "text": "Visualising p-value of local moran’s I\nIn the code chunk below, tmap functions are used prepare a choropleth map by using value in the p_ii_sim field.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-local-morans-i-and-p-value",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-local-morans-i-and-p-value",
    "title": "in-class_ex07",
    "section": "Visualising local Moran’s I and p-value",
    "text": "Visualising local Moran’s I and p-value\nFor effective comparison, it will be better for us to plot both maps next to each other as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-lisa-map",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-lisa-map",
    "title": "in-class_ex07",
    "section": "Visualising LISA Map",
    "text": "Visualising LISA Map\nLISA map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low cluaters. In fact, LISA map is an interpreted map by combining local Moran's I of geographical areas and their respective p-values.\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\nlisa_sig <- lisa  %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#computing-local-gi-statistics",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#computing-local-gi-statistics",
    "title": "in-class_ex07",
    "section": "Computing local Gi* statistics",
    "text": "Computing local Gi* statistics\n\nwm_idw <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\nWarning in st_point_on_surface.sfc(geometry): st_point_on_surface may not give\ncorrect results for longitude/latitude data\n\n\n\nHCSA <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n    gi_star   e_gi     var_gi  p_value p_sim p_fol…¹ skewn…² kurto…³ nb    wts  \n      <dbl>  <dbl>      <dbl>    <dbl> <dbl>   <dbl>   <dbl>   <dbl> <nb>  <lis>\n 1 -0.00567 0.0115 0.00000812  9.95e-1  0.82    0.41   1.03    1.23  <int> <dbl>\n 2 -0.235   0.0110 0.00000581  8.14e-1  1       0.5    0.912   1.05  <int> <dbl>\n 3  0.298   0.0114 0.00000776  7.65e-1  0.7     0.35   0.455  -0.732 <int> <dbl>\n 4  0.145   0.0121 0.0000111   8.84e-1  0.64    0.32   0.900   0.726 <int> <dbl>\n 5  0.356   0.0113 0.0000119   7.21e-1  0.64    0.32   1.08    1.31  <int> <dbl>\n 6 -0.480   0.0116 0.00000706  6.31e-1  0.82    0.41   0.364  -0.676 <int> <dbl>\n 7  3.66    0.0116 0.00000825  2.47e-4  0.02    0.01   0.909   0.664 <int> <dbl>\n 8  2.14    0.0116 0.00000714  3.26e-2  0.16    0.08   1.13    1.48  <int> <dbl>\n 9  4.55    0.0113 0.00000656  5.28e-6  0.02    0.01   1.36    4.14  <int> <dbl>\n10  1.61    0.0109 0.00000341  1.08e-1  0.18    0.09   0.269  -0.396 <int> <dbl>\n# … with 78 more rows, 7 more variables: NAME_2 <chr>, ID_3 <int>,\n#   NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>, and abbreviated variable names ¹​p_folded_sim,\n#   ²​skewness, ³​kurtosis\n\n\nLocal g has ii=0\ngenerally we will use g*"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-gi",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-gi",
    "title": "in-class_ex07",
    "section": "Visualising Gi*",
    "text": "Visualising Gi*\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-p-value-of-hcsa",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-p-value-of-hcsa",
    "title": "in-class_ex07",
    "section": "Visualising p-value of HCSA",
    "text": "Visualising p-value of HCSA\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) + \n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-local-hcsa",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-local-hcsa",
    "title": "in-class_ex07",
    "section": "Visualising local HCSA",
    "text": "Visualising local HCSA\nFor effective comparison, you can plot both maps next to each other as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 <- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-hotspot-and-cold-spot-areas",
    "href": "In-Class_Ex/In-Class_Ex07/in-class_ex07.html#visualising-hotspot-and-cold-spot-areas",
    "title": "in-class_ex07",
    "section": "Visualising hotspot and cold spot areas",
    "text": "Visualising hotspot and cold spot areas\nNow, we are ready to plot the significant (i.e. p-values less than 0.05) hot spot and cold spot areas by using appropriate tmap functions as shown below.\n\nHCSA_sig <- HCSA  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\nFigure above reveals that there is one hot spot area and two cold spot areas. Interestingly, the hot spot areas coincide with the High-high cluster identifies by using local Moran's I method in the earlier sub-section."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/in-class_ex08.html",
    "href": "In-Class_Ex/In-Class_Ex08/in-class_ex08.html",
    "title": "In-Class Ex08",
    "section": "",
    "text": "pacman::p_load(olsrr, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\nImporting Geospatial Data\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nImport Aspatial Data\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nRows: 1436 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (23): LATITUDE, LONGITUDE, POSTCODE, SELLING_PRICE, AREA_SQM, AGE, PROX_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\n\n#residuals use to compute moran's I\n#fittedvalue = estimated y value, use this to compare to actual Y, so that can come up with residual\n#adaptive = false = fixed distance, svy21 is in meters thats why output is in Meteres\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\n\n\ncorrplot::corrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications\nThis is the course website of IS415 I study this term. You will find my course work on this website."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "",
    "text": "Water is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issues in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-spatial-data-analysis-esda",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-spatial-data-analysis-esda",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "3.1 Exploratory Spatial Data Analysis (ESDA)",
    "text": "3.1 Exploratory Spatial Data Analysis (ESDA)\n\nDerive kernel density maps of functional and non-functional water points. Using appropriate tmap functions,\nDisplay the kernel density maps on openstreetmap of Osub State, Nigeria.\nDescribe the spatial patterns revealed by the kernel density maps. Highlight the advantage of kernel density map over point map."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#second-order-spatial-point-patterns-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#second-order-spatial-point-patterns-analysis",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "3.2 Second-order Spatial Point Patterns Analysis",
    "text": "3.2 Second-order Spatial Point Patterns Analysis\nWith reference to the spatial point patterns observed in ESDA:\n\nFormulate the null hypothesis and alternative hypothesis and select the confidence level.\nPerform the test by using appropriate Second order spatial point patterns analysis technique.\nWith reference to the analysis results, draw statistical conclusions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#spatial-correlation-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#spatial-correlation-analysis",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "3.3 Spatial Correlation Analysis",
    "text": "3.3 Spatial Correlation Analysis\nIn this section, we are required to confirm statistically if the spatial distribution of functional and non-functional water points are independent from each other.\n\nFormulate the null hypothesis and alternative hypothesis and select the confidence level.\nPerform the test by using appropriate Second order spatial point patterns analysis technique.\nWith reference to the analysis results, draw statistical conclusions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#aspatial-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#aspatial-data",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "4.1 Aspatial data",
    "text": "4.1 Aspatial data\nFor the purpose of this assignment, data from WPdx Global Data Repositories will be used. There are two versions of the data. They are: WPdx-Basic and WPdx+. This take home assignment will use the WPdx+ data set."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#geospatial-data",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "4.2 Geospatial data",
    "text": "4.2 Geospatial data\nThis study will focus of Osun State, Nigeria. The state boundary GIS data of Nigeria can be downloaded either from The Humanitarian Data Exchange portal or geoBoundaries."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "5.1 Install and Load Packages",
    "text": "5.1 Install and Load Packages\nThe Following R Packages will be used for this analysis:\n\nfunModeling: Used for Exploratory Data Analysis (EDA) and has features such as ggplot & dplyr.\nmaptools: Used for manipulating geographic data\ntidyverse: Used for Data science tasks\nsf: Used for importing, managing, and processing geospatial data\nsfdep: Used for geometry neighbours and local indicators of spatial association\nraster: Used to manipulate and models gridded spatial data\nspatstat: Used for point pattern analysis\ntmap: Used for creating thematic maps\n\n\npacman::p_load(funModeling, maptools, tidyverse, sf, sfdep, raster, spatstat, tmap)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-data",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "5.2 Importing Data",
    "text": "5.2 Importing Data\n\n5.2.1 Geospatial Data\n\n5.2.1.1 Reading GeoBoundaries Data Set\n\ngeoNGA <- st_read(dsn = \"data/geospatial\", layer=\"geoBoundaries-NGA-ADM2\") %>%\n  st_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n5.2.1.2 Reading NGA Data Set\n\nNGA <- st_read(\"data/geospatial/\",\n               layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n\n5.2.2 Aspatial Data\n\n5.2.2.1 Reading WPdx+ Data Set (Filter to Nigeria only)\n\nWaterpoint =  read_csv(\"data/aspatial/Water_Point_Data_Exchange_-_Plus__WPdx__.csv\") %>% \n  filter(`#clean_country_name` == \"Nigeria\")\n\n\n\n5.2.2.2 Converting the Aspatial Data into sf point features\n\n\n\n\n\n\nWhy SF Point Features?\n\n\n\n1) Being able to do mapping (plotting on a map using geographic information allowing for spatial analysis and visualization of data)\n2) Spatial Analysis (Use to investigate spatial patterns and relationship in the data)\n\n\nConverting the aspatial data into sf point feature process involves two steps.\nFirst, there is a need to convert the well known text field into sfc field by using st_as_sfc\n\nWaterpoint$Geometry = st_as_sfc(Waterpoint$`New Georeferenced Column`)\nWaterpoint\n\n# A tibble: 97,478 × 75\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 158721 Federal Minis…    5.07    6.62 02/19/… Yes     Boreho… Well    Mechan…\n 2 158892 Federal Minis…    5.09    7.09 02/06/… Yes     Boreho… Well    Hand P…\n 3 323117 Federal Minis…    5.91    8.77 08/31/… Yes     Boreho… Well    Hand P…\n 4 300176 Federal Minis…    5.23    7.32 05/17/… Yes     Boreho… Well    Mechan…\n 5 324346 Federal Minis…    6.88    3.36 08/17/… Yes     Boreho… Well    Mechan…\n 6 297273 Federal Minis…    6.59    3.29 05/26/… Yes     Boreho… Well    Mechan…\n 7 296853 Federal Minis…    6.60    3.26 06/02/… Yes     Boreho… Well    Mechan…\n 8 323866 Federal Minis…    6.20    6.73 09/18/… Yes     Boreho… Well    Mechan…\n 9 297044 Federal Minis…    6.61    3.30 05/26/… Yes     Boreho… Well    Mechan…\n10 324321 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n# … with 97,468 more rows, 66 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\nSecondly, we will convert the tibble data.frame into an sf object by using st_sf(). Afterwhich, we run “Waterpoint_sf” to check if the data.frame is converted into an sf object; “Simple feature collection”.\n\nWaterpoint_sf <- st_sf(Waterpoint, crs = 4326)\nWaterpoint_sf\n\nSimple feature collection with 97478 features and 74 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 97,478 × 75\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 158721 Federal Minis…    5.07    6.62 02/19/… Yes     Boreho… Well    Mechan…\n 2 158892 Federal Minis…    5.09    7.09 02/06/… Yes     Boreho… Well    Hand P…\n 3 323117 Federal Minis…    5.91    8.77 08/31/… Yes     Boreho… Well    Hand P…\n 4 300176 Federal Minis…    5.23    7.32 05/17/… Yes     Boreho… Well    Mechan…\n 5 324346 Federal Minis…    6.88    3.36 08/17/… Yes     Boreho… Well    Mechan…\n 6 297273 Federal Minis…    6.59    3.29 05/26/… Yes     Boreho… Well    Mechan…\n 7 296853 Federal Minis…    6.60    3.26 06/02/… Yes     Boreho… Well    Mechan…\n 8 323866 Federal Minis…    6.20    6.73 09/18/… Yes     Boreho… Well    Mechan…\n 9 297044 Federal Minis…    6.61    3.30 05/26/… Yes     Boreho… Well    Mechan…\n10 324321 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n# … with 97,468 more rows, 66 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\n5.2.2.3 Transforming the Waterpoint sf object into Nigeria Projected Coordinate System\n\nWaterpoint_sf <- Waterpoint_sf %>%\n  st_transform(crs = 26392)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#excluding-redundant-fields",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#excluding-redundant-fields",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "6.1 Excluding Redundant Fields",
    "text": "6.1 Excluding Redundant Fields\nIt is good practice to remove redundant fields as having redundant fields can increase the size of data making it difficult to manage and visualize (viewing in table form by selecting the data in environment). Efficiency wise, redundant fields can also slow down data processing making it time-consuming.\n\nNGA <- NGA %>%\n   dplyr::select(c(3:4, 8:9))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#checking-for-duplicated-fields-in-the-geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#checking-for-duplicated-fields-in-the-geospatial-data",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "6.2 Checking for duplicated fields in the Geospatial Data",
    "text": "6.2 Checking for duplicated fields in the Geospatial Data\nChecking for duplicate fields so that the data imported is of high quality; having duplicated fields can indicate errors in data collection (which at times it may happen due to human errors) or processing which will affect the quality of data and the results of our analysis performed.\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nThe output above shows that there are 6 LGAs with the same name. However, there are LGAs with the same name but they are located in different states.\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\nTo check if there are still duplicate names after replacing them in the above code chunk.\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\ncharacter(0)\n\n\nFrom the above result, “character(0)” represents no duplicated names."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#extracting-water-point-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#extracting-water-point-data",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "7.1 Extracting Water Point Data",
    "text": "7.1 Extracting Water Point Data\nThe code chunk below is used to extract functional water point\n\nWaterpoint_functional <- Waterpoint_sf_nga %>%\n  filter(status_clean %in%\n            c(\"Functional\",\n              \"Functional, needs repair\",\n              \"Functional, not in use\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nThe code chunk below is used to extract non-functional water point\n\nWaterpoint_nonfunctional <-  Waterpoint_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non-Functional, dry\"))\n\nThe code chunk below is used to extract the water point with unknown status\n\nWaterpoint_unknown <- Waterpoint_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\nThe code chunks below is used to perform a quick Exploratory Data Analysis (EDA) on the derived sf data frames for the Functional, Non-functional & Unknown Waterpoints.\n\nfunModeling::freq(data = Waterpoint_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional     47228      87.65           87.65\n2    Functional, needs repair      4792       8.89           96.54\n3      Functional, not in use      1775       3.29           99.83\n4   Functional but not in use        86       0.16           99.99\n5 Functional but needs repair         4       0.01          100.00\n\n\nFrom the above image, we can see how many different types of Functional Water points are there an how many waterpoints are there in each category in Nigeria.\n\nfunModeling::freq(data = Waterpoint_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional     30638      91.62           91.62\n2              Non-Functional, dry      2473       7.40           99.02\n3         Abandoned/Decommissioned       321       0.96           99.98\n4 Non-Functional due to dry season         7       0.02          100.00\n\n\nFrom the above image, we can see how many different types of Non-Functional Water points are there and how many are waterpoints are in each category in Nigeria.\n\nfunModeling::freq(data = Waterpoint_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown     10154        100             100\n\n\nFrom the above image, we can see how many unknown (unidentified) Water points are there in Nigeria."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performing-point-in-polygon-count",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performing-point-in-polygon-count",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "7.2 Performing Point-in-Polygon Count",
    "text": "7.2 Performing Point-in-Polygon Count\nThe purpose of performing point-in-polygon count is to determine how many points from a set of points fall within each polygon in a set of polygons. In this assignment’s context, it is useful in determining how many waterpoints (regardless of functional, non-functional or unknown waterpoints) are located in each LGA in Nigeria.\nThe code chunk below first identifies the functional waterpoints in each LGA by using st_intersects function of the sf_package. Afterwhich, the length is used to determine the number of functional waterpoints that fall in each LGA.\n\nNGA_wp <- NGA %>% \n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, Waterpoint_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, Waterpoint_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, Waterpoint_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, Waterpoint_unknown)))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualizing-attributes-by-using-statistical-graphs",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualizing-attributes-by-using-statistical-graphs",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "7.3 Visualizing Attributes by using statistical graphs",
    "text": "7.3 Visualizing Attributes by using statistical graphs\nIn the code chunk below, ggplot will be used to reveal the distribution of total water points by LGA in histogram.\n\nggplot(data = NGA_wp,\n       aes(x = total_wp)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\n7.3.1 Visualizing in Geographic Map\nIf the above graph is not user friendly, in the below code chunk, we use tm_shape to create a static map. Together, we have tm_fill to fill the polygons with colors, tm_borders to add/customize the borders to the polygons and tm_layout is to add elements to the map (e.g. title, legends and scale bars)\n\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total water point by LGAs\",\n            legend.outside = FALSE)\n\nDisplaying static map for total water point by LGA.\n\np1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#saving-the-analytical-data-in-rds-format",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#saving-the-analytical-data-in-rds-format",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "7.4 Saving the Analytical Data in RDS format",
    "text": "7.4 Saving the Analytical Data in RDS format\nIn order to retain the sf object structure for subsequent analysis, it is recommended to save the sf data.frame into rds format.\n\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#showing-the-functional-waterpoints-in-osun-state",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#showing-the-functional-waterpoints-in-osun-state",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "8.1 Showing the Functional Waterpoints in Osun State",
    "text": "8.1 Showing the Functional Waterpoints in Osun State\n\ntm_shape(osun_data) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#showing-the-non-functional-water-points-in-osun-state",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#showing-the-non-functional-water-points-in-osun-state",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "8.2 Showing the Non-functional water points in Osun State",
    "text": "8.2 Showing the Non-functional water points in Osun State\n\ntm_shape(osun_data) +\n  tm_fill(\"wp_nonfunctional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\")\n\n\n\n\nComparing the two graphs plotted, we can see that, there are more Non-functional water points as compared to functional water points in Osun."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-osun_data-sf-dataframe-to-sps-spatial-class",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-osun_data-sf-dataframe-to-sps-spatial-class",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "9.1 Converting Osun_data sf Dataframe to sp’s Spatial* class",
    "text": "9.1 Converting Osun_data sf Dataframe to sp’s Spatial* class\nThrough Section 8, we filtered out the Osun state data from Nigeria. Thus, the code chunk below will convert the Osun data into sp spatial class object so that it can be used by other spatial analysis packages and functions.\n\nosun <- as_Spatial(osun_data)\n\n\nfunctional <- as_Spatial(Waterpoint_functional)\n\n\nnonfunctional <- as_Spatial(Waterpoint_nonfunctional)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "9.2 Converting the Spatial* class into Generic sp Format",
    "text": "9.2 Converting the Spatial* class into Generic sp Format\nspatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* class into a ppp object. Thus, we need to convert the Spatial* class into Spatial object first. The code chunk below converts the Spatial* classes into generic sp objects.\n\nosun_sp <- as(osun, \"SpatialPolygons\")\n\n\nfunctional_sp <- as(functional, \"SpatialPoints\")\n\n\nnonfunctional_sp <- as(nonfunctional, \"SpatialPoints\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "9.3 Converting the Generic sp Format into Spatstat’s ppp Format",
    "text": "9.3 Converting the Generic sp Format into Spatstat’s ppp Format\nThe following code chunk below will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nfunctional_ppp <- as(functional_sp, \"ppp\")\nfunctional_ppp\n\nPlanar point pattern: 53885 points\nwindow: rectangle = [29322.6, 1293137] x [33758.4, 1092628.9] units\n\n\n\nnonfunctional_ppp <- as(nonfunctional_sp, \"ppp\")\nnonfunctional_ppp\n\nPlanar point pattern: 33439 points\nwindow: rectangle = [28907.9, 1293292.9] x [33736.9, 1092882.6] units\n\n\nExamining both ppp object (functional_ppp & nonfunctional_ppp) created.\n\nplot(functional_ppp)\n\n\n\n\n\nplot(nonfunctional_ppp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-duplicated-points-for-functional_ppp-and-nonfunctional_ppp",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-duplicated-points-for-functional_ppp-and-nonfunctional_ppp",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "9.4 Handling Duplicated Points for Functional_ppp and Nonfunctional_ppp",
    "text": "9.4 Handling Duplicated Points for Functional_ppp and Nonfunctional_ppp\nAs seen from the output above, we can notice that there are alot of ‘noises’ which makes it hard to visualise or analyse the data. It is not feasible to delete the ‘noises’ as some of the it may be useful. Thus, as based from hands on exercise 3, the code chunk below uses the rjitter function to both functional ppp and nonfunctional ppp object to introduce a small perturbation to the points so that they do not occupy the same exact space.\n\nfunctional_ppp_jit <- rjitter(functional_ppp,\n                              retry=TRUE,\n                              nsim=1,\n                              drop=TRUE)\n\n\nnonfunctional_ppp_jit <- rjitter(nonfunctional_ppp,\n                              retry=TRUE,\n                              nsim=1,\n                              drop=TRUE)\n\nChecking for if there are any duplicated points after rjitter function.\n\nany(duplicated(functional_ppp_jit))\n\n[1] FALSE\n\n\n\nany(duplicated(nonfunctional_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-osun-owin-object",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-osun-owin-object",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "9.5 Creating Osun owin Object",
    "text": "9.5 Creating Osun owin Object\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Osun boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to convert osun_sp spatial object into owin object of spatstat.\n\nosun_owin <- as(osun_sp, \"owin\")\n\nDisplaying Osun Boundary created using plot() function.\n\nplot(osun_owin)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-point-events-object-and-owin-object",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-point-events-object-and-owin-object",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "9.6 Combining Point Events Object and owin Object",
    "text": "9.6 Combining Point Events Object and owin Object\nIn the last step of geospatial data wrangling, we will extract both the functional and nonfunctional waterpoints that are located within osun state with the code chunk below.\n\nfunctionalOsun_ppp_jit = functional_ppp_jit[osun_owin]\n\n\nnonfunctionalOsun_ppp_jit = nonfunctional_ppp_jit[osun_owin]\n\nDisplaying Functional Waterpoints in Osun State\n\nplot(functionalOsun_ppp_jit)\n\n\n\n\nDisplaying Non-Functional Waterpoints in Osun State\n\nplot(nonfunctionalOsun_ppp_jit)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#rescaling-kde-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#rescaling-kde-values",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "10.1 Rescaling KDE Values",
    "text": "10.1 Rescaling KDE Values\nConverting the density values to “km” measurements as the default measurement of svy21 is in metres which is way too small to comphrehend. The code chunk below, rescale() is used to convert the unit measurement from meter to kilometer.\n\nfunctionalOsun_ppp.km <- rescale(functionalOsun_ppp_jit, 1000, \"km\")\n\n\nnonfunctionalOsun_ppp.km <- rescale(nonfunctionalOsun_ppp_jit, 1000, \"km\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-density-estimation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-density-estimation",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "10.2 Kernel Density Estimation",
    "text": "10.2 Kernel Density Estimation\nPlotting the kernel density map for functional waterpoints in Osun with density() function of spatstat. The smoothing kernel used is gaussian which is the default, for bandwidth selection, bw.ppl() is used and the intensity estimated is corrected for edge effect bias is set to true.\n\n\n\n\n\n\nBandwidth selection method\n\n\n\nbw.ppl is used because other methods like bw.diggle, bw.CvL, bw.scott’s results are hard to visualize. bw.ppl has the best output in this situation.\n\n\n\n10.2.1 Kernel Density Map for Functional Waterpoints in Osun\n\nkde_functionalOsun_bw <- density(functionalOsun_ppp.km,\n                                 sigma=bw.ppl,\n                                 edge=TRUE,\n                                 kernel=\"gaussian\")\nplot(kde_functionalOsun_bw)\n\n\n\n\nFrom the above kernel density map for functional waterpoints, we can see that there are more functional water points (higher concentration) in the northern side of Osun and those that are not brightly lited up (not in yellow, orange or in purple) have lesser functional water points.\n\n\n10.2.2 Kernel Density Map for Non-functional Waterpoints in Osun\n\nkde_nonfunctionalOsun_bw <- density(nonfunctionalOsun_ppp.km,\n                                 sigma=bw.ppl,\n                                 edge=TRUE,\n                                 kernel=\"gaussian\")\nplot(kde_nonfunctionalOsun_bw)\n\n\n\n\nFrom the above kernel density map for nonfunctional waterpoints, we can see that there are more nonfunctional water points (higher concentration) in the central and northern east side of Osun. Those that are not brightly lited up (not in yellow, orange) have lesser nonfunctional water points and with dark blue being totally no nonfunctional water point."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-kde-output-into-raster",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-kde-output-into-raster",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "10.3 Converting KDE Output into Raster",
    "text": "10.3 Converting KDE Output into Raster\nThe Kernel density maps for functional and non functional water points in Osun will be plotted ontop of OpenStreetmap. The KDE will have to convert into raster to be used in tmap. The below code chunk will convert the functionalOsun and non functionalOsun KDE output into raster.\n\nkde_functionalOsun_bw_raster <- kde_functionalOsun_bw %>% as.SpatialGridDataFrame.im() %>% raster()\nkde_functionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -4.276876e-16, 11.70023  (min, max)\n\n\n\nkde_nonfunctionalOsun_bw_raster <- kde_nonfunctionalOsun_bw %>% as.SpatialGridDataFrame.im() %>% raster()\nkde_nonfunctionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -2.290583e-16, 9.184385  (min, max)\n\n\nConverting into Nigeria Projection System and Converting in Kilometer measurement.\n\nprojection(kde_functionalOsun_bw_raster) <- CRS(\"+init=EPSG:26392 +datum=WGS84 +units=km\")\nkde_functionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +units=km +no_defs \nsource     : memory\nnames      : v \nvalues     : -4.276876e-16, 11.70023  (min, max)\n\n\n\nprojection(kde_nonfunctionalOsun_bw_raster) <- CRS(\"+init=EPSG:26392 +datum=WGS84 +units=km\")\nkde_nonfunctionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +units=km +no_defs \nsource     : memory\nnames      : v \nvalues     : -2.290583e-16, 9.184385  (min, max)\n\n\nAssigning Kernel Density map for functional water points in Osun to variable f1\n\nf1 <- tmap_mode(\"view\") +\n  tm_shape(kde_functionalOsun_bw_raster) + \n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_raster(\"v\") +\n  tm_layout(title = \"Functional\") +\n  tm_view(set.zoom.limits = c(8,11))\n\nAssigning Kernel Density map for functional water points in Osun to variable f2\n\nf2 <- tmap_mode(\"view\") +\n  tm_shape(kde_nonfunctionalOsun_bw_raster) + \n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_raster(\"v\") +\n  tm_layout(title = \"Functional\") +\n  tm_view(set.zoom.limits = c(8,11))\n\nPlotting Kernel Density Map on Open Street map for both functional and nonfunctional water points in Osun.\n\ntmap_arrange(f1, f2, nrow = 1)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-density-maps-vs-point-map",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-density-maps-vs-point-map",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "10.4 Kernel Density Maps Vs Point Map",
    "text": "10.4 Kernel Density Maps Vs Point Map\n\n10.4.1 Importing and Filtering of Data for Point Map to be used for Comparison\n\nwp_nga_filter <- read_csv(\"data/aspatial/Water_Point_Data_Exchange_-_Plus__WPdx__.csv\")\n\nRenaming the column name to remove the # character for easier handling\n\nwp_nga_filter <- wp_nga_filter %>% \n  rename(clean_adm1 = '#clean_adm1')\n\nRenaming the column name to remove the # character for easier handling\n\nwp_nga_filter <- wp_nga_filter %>% \n  rename(status_clean = '#status_clean')\n\nFilter to only display Osun State Data\n\nwp_nga_filter <- subset(wp_nga_filter, clean_adm1 == \"Osun\")\n\nConverting well known text field into sfc field using st_as_sfc() for sf point feature as mentioned in Section 5.2.2\n\nwp_nga_filter$Geometry = st_as_sfc(wp_nga_filter$`New Georeferenced Column`)\nwp_nga_filter\n\n# A tibble: 5,745 × 75\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 225950 Federal Minis…    7.43    4.26 05/05/… Yes     Boreho… Well    Hand P…\n 2 225524 Federal Minis…    7.78    4.56 04/22/… Yes     Protec… Well    Hand P…\n 3 197014 Federal Minis…    7.49    4.53 04/30/… Yes     Boreho… Well    Mechan…\n 4 225173 Federal Minis…    7.93    4.73 05/02/… Yes     Boreho… Well    Hand P…\n 5 225843 Federal Minis…    7.74    4.44 05/08/… Yes     Boreho… Well    Hand P…\n 6 235508 Federal Minis…    7.15    4.64 04/27/… Yes     Protec… Well    Hand P…\n 7 197708 Federal Minis…    7.87    4.72 05/13/… Yes     Boreho… Well    Mechan…\n 8 195041 Federal Minis…    7.73    4.45 06/17/… Yes     Protec… Spring  <NA>   \n 9 225222 Federal Minis…    7.81    4.15 05/14/… Yes     Protec… Spring  Mechan…\n10 460770 GRID3             7.4     4.33 06/13/… Unknown Boreho… Well    <NA>   \n# … with 5,735 more rows, 66 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, clean_adm1 <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, status_clean <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\nConverting tibble data frame into sf Object by using st_sf() as mentioned in Section 5.2.2\n\nwp_nga_filter <- st_sf(wp_nga_filter, crs=4326)\nwp_nga_filter\n\nSimple feature collection with 5745 features and 74 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4.032004 ymin: 7.060309 xmax: 5.06 ymax: 8.061898\nGeodetic CRS:  WGS 84\n# A tibble: 5,745 × 75\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 225950 Federal Minis…    7.43    4.26 05/05/… Yes     Boreho… Well    Hand P…\n 2 225524 Federal Minis…    7.78    4.56 04/22/… Yes     Protec… Well    Hand P…\n 3 197014 Federal Minis…    7.49    4.53 04/30/… Yes     Boreho… Well    Mechan…\n 4 225173 Federal Minis…    7.93    4.73 05/02/… Yes     Boreho… Well    Hand P…\n 5 225843 Federal Minis…    7.74    4.44 05/08/… Yes     Boreho… Well    Hand P…\n 6 235508 Federal Minis…    7.15    4.64 04/27/… Yes     Protec… Well    Hand P…\n 7 197708 Federal Minis…    7.87    4.72 05/13/… Yes     Boreho… Well    Mechan…\n 8 195041 Federal Minis…    7.73    4.45 06/17/… Yes     Protec… Spring  <NA>   \n 9 225222 Federal Minis…    7.81    4.15 05/14/… Yes     Protec… Spring  Mechan…\n10 460770 GRID3             7.4     4.33 06/13/… Unknown Boreho… Well    <NA>   \n# … with 5,735 more rows, 66 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, clean_adm1 <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, status_clean <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\nConverting sf object into Nigeria Projected System\n\nwp_nga_filter <- wp_nga_filter %>%\n  st_transform(crs = 26392)\n\nFiltering out only the functional water points in the sf object\n\nwp_nga_filterpoint <- wp_nga_filter %>%\n  filter(status_clean == \"Functional\" | status_clean == \"Functional but not in use\" | status_clean == \"Functional but needs repair\" | status_clean ==     \"Functional, needs repair\" | status_clean == \"Functional, not in use\")\n\n\n\n10.4.2 Display Point Map for Functional Waterpoints\n\nwp_nga_filter_point <- tmap_mode(\"view\")\n  tm_shape(wp_nga_filterpoint) +\n  tm_dots(col = \"status_clean\",\n             size = 0.01,\n             border.col = \"black\",\n             border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(9,11))\n\n\n\n\n\n\n\n\n10.4.3 Display Kernel Density Map for Functional Waterpoints\n\nplot(kde_functionalOsun_bw)\n\n\n\n\n\n\n\n\n\n\nAdvantages of Kernel Density Map Over Point Map\n\n\n\n\nKernel density maps smooth out the data, making it easier to see patterns and trends in the data. This is useful for detecting areas with high concentrations of data points.\nIf point maps are cluttered, it can be difficult to interpret when there are many data points in a small area. Thus, kernel density maps help to mitigate this problem by aggregating the data into a continuous surface making it easier to visualize the patterns.\nKernel density maps can show the density of data points in a particular area which point map is unable to do so.\nKernel density maps can also better represent the spatial relationships between data points such as promixity, distance and clustering."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#functional-water-points-in-osun-state",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#functional-water-points-in-osun-state",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "11.1 Functional Water Points in Osun State",
    "text": "11.1 Functional Water Points in Osun State\n\n11.1.1 Computing L-Function Estimation\n{#|eval: false} {r} L_ck = Lest(functionalOsun_ppp_jit, correction = \"Ripley\") plot(L_ck, . -r ~ r,       ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n11.1.2 Performing complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of functional water points at Osun State, are randomly distributed.\nH1= The distribution of functional water points at Osun State, are not randomly distributed.\nConfidence Level: 95%\nSignificance Level: 0.05\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.05.\n{#|eval: false} {r} L_ck.csr <- envelope(functionalOsun_ppp_jit, Lest, nsim = 39, rank = 1, glocal=TRUE)`\n\nPlotting the Graph\n{#|eval: false} {r} plot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\nStatistical Conclusion for Functional Water Points\n\n\n\nThe observed L(r) is above the L(theo) and above the envelope (Grey Area). This shows that the functional water points are clustered, hence rejecting the null hypothesis that the functional water points in Osun State are randomly distributed."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#non-functional-water-points-in-osun-state",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#non-functional-water-points-in-osun-state",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "11.2 Non Functional Water Points in Osun State",
    "text": "11.2 Non Functional Water Points in Osun State\n\n11.2.1 Computing L-Function Estimation\n{#|eval: false} {r} L_ck_non = Lest(nonfunctionalOsun_ppp_jit, correction = \"Ripley\") plot(L_ck_non, . -r ~ r,       ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n11.2.2 Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of non-functional water points at Osun State, are randomly distributed.\nH1= The distribution of non-functional water points at Osun State, are not randomly distributed.\nConfidence Level: 95%\nSignificance Level: 0.05\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.05.\n{#|eval: false} {r} L_ck_non.csr <- envelope(nonfunctionalOsun_ppp_jit, Lest, nsim = 39, rank = 1, glocal=TRUE\n\nPlotting the Graph\n{#|eval: false} {r} plot(L_ck_non.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\nStatistical Conclusion for Non functional Water points\n\n\n\nThe observed L(r) is above the L(theo) and above the envelope. This shows that the functional water points are clustered, hence rejecting the null hypothesis that the non-functional water points in Osun State are randomly distributed."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-data-set",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-data-set",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.1 Preparing Data Set",
    "text": "12.1 Preparing Data Set\n\nwaterpoint_sf_osun <- Waterpoint_sf %>% \n  rename(status_clean = '#status_clean') %>%\n  rename(lat = '#lat_deg') %>%\n  rename(lng = '#lon_deg') %>%\n  rename(clean_adm1 = '#clean_adm1') %>%\n  mutate(status_clean = replace_na(\n    status_clean, \"unknown\"))\n\n\nwaterpoint_sf_osunfilter <- subset(waterpoint_sf_osun, clean_adm1 == \"Osun\")\n\n\nwaterpoint_sf_osunfilter <- waterpoint_sf_osunfilter %>%\n  dplyr::select(status_clean, lat, lng)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-nearest-neighbour-list",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-nearest-neighbour-list",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.2 Preparing Nearest Neighbour List",
    "text": "12.2 Preparing Nearest Neighbour List\n\nnb <- include_self(\n  st_knn(st_geometry(waterpoint_sf_osunfilter), 6))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-kernel-weights",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-kernel-weights",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.3 Computing Kernel Weights",
    "text": "12.3 Computing Kernel Weights\n\nwt <- st_kernel_weights(nb, \n                        waterpoint_sf_osunfilter, \n                        \"gaussian\", \n                        adaptive = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-vector-list",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-vector-list",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.4 Preparing Vector List",
    "text": "12.4 Preparing Vector List\n\nfunctionalWaterpoint <- waterpoint_sf_osunfilter %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\",\n             \"Functional, needs repair\",\n             \"Functional, not in use\"))\nA <- functionalWaterpoint$status_clean\n\n\nnonfunctionalWaterpoint <- waterpoint_sf_osunfilter %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non-functional, dry\"))\nB <- nonfunctionalWaterpoint$status_clean"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-lclq",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-lclq",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.5 Computing LCLQ",
    "text": "12.5 Computing LCLQ\n\nLCLQ <- local_colocation(A, B, nb, wt, 39)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joining-output-table",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joining-output-table",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.6 Joining Output Table",
    "text": "12.6 Joining Output Table\n\nLCLQ_WP <- cbind(waterpoint_sf_osunfilter, LCLQ)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plotting-lclq-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#plotting-lclq-values",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria",
    "section": "12.7 Plotting LCLQ values",
    "text": "12.7 Plotting LCLQ values\n\ntmap_mode(\"view\")\ntm_shape(LCLQ_WP)+ \n  tm_dots(col = \"Non.Functional\",\n             size = 0.01,\n             border.col = \"black\",\n             border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(9, 16))\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion from above Spatial Correlation Analysis\n\n\n\nAs seen from the plotted figure above, the local colocation quotient has the value of 1.007 which is greater than 1. Hence, this proves that Category of interest A (Functional waterpoints) are more likely to have features of neighbouring category of interest B (Nonfunctional water points) within their neighbourhood."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "",
    "text": "Since late December 2019, an outbreak of a novel coronavirus disease (COVID-19; previously known as 2019-nCoV) was reported in Wuhan, China, which had subsequently affected 210 countries worldwide. In general, COVID-19 is an acute resolved disease but it can also be deadly, with a 2% case fatality rate.\nThe COVID-19 vaccination in Indonesia is an ongoing mass immunisation in response to the COVID-19 pandemic in Indonesia. On 13 January 2021, the program commenced when President Joko Widodo was vaccinated at the presidential palace. In terms of total doses given, Indonesia ranks third in Asia and fifth in the world.\nAccording to wikipedia, as of 5 February 2023 at 18:00 WIB (UTC+7), 204,266,655 people had received the first dose of the vaccine and 175,131,893 people had been fully vaccinated; 69,597,474 of them had been inoculated with the booster or the third dose, while 1,585,164 had received the fourth dose. Jakarta has the highest percentage of population fully vaccinated with 103.46%, followed by Bali and Special Region of Yogyakarta with 85.45% and 83.02% respectively.\nDespite its compactness, the cumulative vaccination rate are not evenly distributed within DKI Jakarta. The question is where are the sub-districts with relatively higher number of vaccination rate and how they changed over time."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aspatial-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aspatial-data",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.1 Aspatial Data",
    "text": "3.1 Aspatial Data\nFor the purpose of this assignment, data from Riwayat File Vaksinasi DKI Jakarta will be used. Daily vaccination data are provides. You are only required to download either the first day of the month or last day of the month of the study period."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#geospatial-data",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.2 Geospatial Data",
    "text": "3.2 Geospatial Data\nFor the purpose of this study, DKI Jakarta administration boundary 2019 will be used. The data set can be downloaded at Indonesia Geospatial portal, specifically at this page.\n\n\n\n\n\n\nNote\n\n\n\n\nThe national Projected Coordinates Systems of Indonesia is DGN95 / Indonesia TM-3 zone 54.1.\nExclude all the outer islands from the DKI Jakarta sf data frame, and\nRetain the first nine fields in the DKI Jakarta sf data frame. The ninth field JUMLAH_PEN = Total Population."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-loading-r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-loading-r-packages",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "4.1 Installing & Loading R Package(s)",
    "text": "4.1 Installing & Loading R Package(s)\n\nsf: Used for importing, managing and processing geospatial data\nsfdep: Used for spatial autocorrelation analysis of geospatial data\ntmap: Used for creating thematic maps\nplotly: Used for creating interactive based graphs\nplyr: Used for spltting, applying, and combining data\nKendall: Used for Mann-Kendall Test\ntidyverse: Used for data science tasks\nreadxl: Used for reading excel files into R\n\n\npacman::p_load(sf, sfdep, tmap, plotly, plyr, Kendall, tidyverse, readxl)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "4.2 Data Wrangling",
    "text": "4.2 Data Wrangling\n\n4.2.1 Geospatial Data\nThe below code chunk reads geospatial data using st_read() an stores the data read into jkt_village dataframe.\n\njkt_village <- st_read(dsn = \"data/geospatial\",\n                       layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")\n\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n\n\nFrom the above output, we can see that the field “Geodetic CRS” (National Projected Coordinates System) is WGS 84 and this is not the appropriate CRS code/value for this Indonesian data. As mentioned in the note above, the projected coordinate systems of Indonesia is DGN95.\n\n4.2.1.1 Data Pre-Processing for Geospatial Data\nBefore visualizing the data, there is a need to check for both missing values and geometries as it might impact future calculations and representations.\n\n4.2.1.1.1 Checking for Invalid Geometries\n\nlength(which(st_is_valid(jkt_village) == FALSE))\n\n[1] 0\n\n\nFrom the above output, it is evident that there are 0 (no) invalid geometries.\n\n\n4.2.1.1.2 Checking for Missing Values\n\nis.na(jkt_village)\n\n       OBJECT_ID KODE_DESA  DESA  KODE PROVINSI KAB_KOTA KECAMATAN DESA_KELUR\n  [1,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [2,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [3,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [4,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [5,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [6,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [7,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [8,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n  [9,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [10,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [11,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [12,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [13,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [14,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [15,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [16,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [17,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [18,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [19,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [20,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [21,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [22,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [23,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [24,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [25,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [26,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [27,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [28,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [29,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [30,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [31,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [32,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [33,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [34,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [35,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [36,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [37,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [38,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [39,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [40,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [41,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [42,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [43,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [44,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [45,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [46,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [47,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [48,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [49,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [50,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [51,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [52,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [53,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [54,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [55,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [56,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [57,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [58,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [59,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [60,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [61,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [62,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [63,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [64,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [65,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [66,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [67,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [68,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [69,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [70,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [71,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [72,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [73,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [74,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [75,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [76,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [77,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [78,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [79,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [80,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [81,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [82,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [83,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [84,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [85,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [86,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [87,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [88,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [89,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [90,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [91,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [92,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [93,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [94,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [95,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [96,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [97,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [98,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n [99,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[100,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[101,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[102,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[103,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[104,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[105,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[106,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[107,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[108,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[109,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[110,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[111,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[112,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[113,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[114,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[115,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[116,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[117,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[118,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[119,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[120,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[121,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[122,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[123,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[124,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[125,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[126,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[127,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[128,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[129,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[130,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[131,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[132,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[133,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[134,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[135,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[136,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[137,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[138,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[139,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[140,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[141,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[142,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[143,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[144,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[145,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[146,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[147,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[148,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[149,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[150,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[151,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[152,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[153,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[154,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[155,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[156,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[157,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[158,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[159,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[160,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[161,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[162,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[163,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[164,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[165,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[166,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[167,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[168,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[169,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[170,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[171,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[172,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[173,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[174,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[175,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[176,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[177,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[178,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[179,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[180,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[181,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[182,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[183,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[184,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[185,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[186,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[187,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[188,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[189,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[190,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[191,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[192,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[193,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[194,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[195,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[196,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[197,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[198,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[199,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[200,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[201,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[202,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[203,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[204,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[205,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[206,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[207,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[208,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[209,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[210,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[211,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[212,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[213,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[214,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[215,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[216,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[217,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[218,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[219,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[220,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[221,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[222,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[223,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[224,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[225,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[226,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[227,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[228,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[229,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[230,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[231,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[232,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[233,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[234,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[235,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[236,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[237,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[238,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[239,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[240,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[241,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[242,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[243,]     FALSE     FALSE FALSE FALSE    FALSE     TRUE      TRUE       TRUE\n[244,]     FALSE     FALSE FALSE FALSE    FALSE     TRUE      TRUE       TRUE\n[245,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[246,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[247,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[248,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[249,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[250,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[251,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[252,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[253,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[254,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[255,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[256,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[257,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[258,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[259,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[260,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[261,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[262,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[263,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[264,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[265,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[266,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[267,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[268,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n[269,]     FALSE     FALSE FALSE FALSE    FALSE    FALSE     FALSE      FALSE\n       JUMLAH_PEN JUMLAH_KK LUAS_WILAY KEPADATAN PERPINDAHA JUMLAH_MEN\n  [1,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [2,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [3,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [4,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [5,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [6,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [7,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [8,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n  [9,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [10,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [11,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [12,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [13,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [14,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [15,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [16,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [17,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [18,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [19,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [20,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [21,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [22,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [23,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [24,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [25,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [26,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [27,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [28,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [29,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [30,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [31,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [32,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [33,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [34,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [35,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [36,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [37,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [38,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [39,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [40,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [41,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [42,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [43,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [44,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [45,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [46,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [47,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [48,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [49,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [50,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [51,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [52,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [53,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [54,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [55,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [56,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [57,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [58,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [59,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [60,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [61,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [62,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [63,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [64,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [65,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [66,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [67,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [68,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [69,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [70,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [71,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [72,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [73,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [74,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [75,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [76,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [77,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [78,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [79,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [80,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [81,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [82,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [83,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [84,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [85,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [86,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [87,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [88,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [89,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [90,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [91,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [92,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [93,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [94,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [95,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [96,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [97,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [98,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n [99,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[100,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[101,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[102,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[103,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[104,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[105,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[106,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[107,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[108,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[109,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[110,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[111,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[112,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[113,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[114,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[115,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[116,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[117,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[118,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[119,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[120,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[121,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[122,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[123,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[124,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[125,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[126,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[127,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[128,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[129,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[130,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[131,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[132,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[133,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[134,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[135,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[136,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[137,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[138,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[139,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[140,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[141,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[142,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[143,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[144,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[145,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[146,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[147,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[148,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[149,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[150,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[151,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[152,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[153,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[154,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[155,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[156,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[157,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[158,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[159,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[160,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[161,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[162,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[163,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[164,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[165,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[166,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[167,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[168,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[169,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[170,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[171,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[172,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[173,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[174,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[175,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[176,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[177,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[178,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[179,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[180,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[181,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[182,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[183,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[184,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[185,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[186,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[187,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[188,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[189,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[190,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[191,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[192,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[193,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[194,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[195,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[196,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[197,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[198,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[199,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[200,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[201,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[202,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[203,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[204,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[205,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[206,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[207,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[208,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[209,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[210,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[211,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[212,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[213,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[214,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[215,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[216,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[217,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[218,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[219,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[220,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[221,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[222,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[223,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[224,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[225,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[226,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[227,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[228,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[229,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[230,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[231,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[232,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[233,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[234,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[235,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[236,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[237,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[238,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[239,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[240,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[241,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[242,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[243,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[244,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[245,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[246,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[247,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[248,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[249,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[250,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[251,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[252,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[253,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[254,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[255,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[256,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[257,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[258,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[259,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[260,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[261,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[262,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[263,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[264,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[265,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[266,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[267,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[268,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n[269,]      FALSE     FALSE      FALSE     FALSE      FALSE      FALSE\n       PERUBAHAN WAJIB_KTP SILAM KRISTEN KHATOLIK HINDU BUDHA KONGHUCU\n  [1,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [2,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [3,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [4,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [5,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [6,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [7,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [8,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n  [9,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [10,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [11,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [12,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [13,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [14,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [15,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [16,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [17,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [18,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [19,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [20,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [21,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [22,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [23,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [24,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [25,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [26,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [27,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [28,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [29,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [30,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [31,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [32,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [33,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [34,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [35,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [36,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [37,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [38,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [39,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [40,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [41,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [42,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [43,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [44,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [45,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [46,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [47,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [48,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [49,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [50,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [51,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [52,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [53,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [54,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [55,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [56,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [57,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [58,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [59,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [60,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [61,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [62,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [63,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [64,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [65,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [66,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [67,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [68,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [69,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [70,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [71,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [72,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [73,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [74,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [75,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [76,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [77,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [78,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [79,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [80,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [81,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [82,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [83,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [84,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [85,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [86,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [87,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [88,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [89,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [90,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [91,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [92,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [93,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [94,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [95,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [96,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [97,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [98,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n [99,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[100,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[101,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[102,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[103,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[104,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[105,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[106,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[107,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[108,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[109,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[110,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[111,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[112,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[113,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[114,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[115,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[116,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[117,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[118,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[119,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[120,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[121,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[122,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[123,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[124,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[125,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[126,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[127,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[128,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[129,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[130,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[131,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[132,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[133,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[134,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[135,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[136,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[137,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[138,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[139,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[140,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[141,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[142,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[143,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[144,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[145,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[146,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[147,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[148,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[149,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[150,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[151,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[152,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[153,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[154,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[155,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[156,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[157,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[158,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[159,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[160,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[161,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[162,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[163,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[164,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[165,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[166,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[167,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[168,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[169,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[170,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[171,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[172,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[173,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[174,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[175,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[176,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[177,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[178,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[179,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[180,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[181,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[182,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[183,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[184,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[185,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[186,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[187,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[188,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[189,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[190,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[191,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[192,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[193,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[194,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[195,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[196,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[197,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[198,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[199,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[200,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[201,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[202,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[203,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[204,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[205,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[206,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[207,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[208,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[209,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[210,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[211,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[212,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[213,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[214,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[215,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[216,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[217,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[218,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[219,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[220,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[221,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[222,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[223,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[224,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[225,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[226,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[227,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[228,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[229,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[230,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[231,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[232,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[233,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[234,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[235,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[236,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[237,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[238,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[239,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[240,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[241,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[242,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[243,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[244,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[245,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[246,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[247,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[248,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[249,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[250,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[251,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[252,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[253,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[254,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[255,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[256,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[257,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[258,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[259,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[260,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[261,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[262,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[263,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[264,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[265,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[266,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[267,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[268,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n[269,]     FALSE     FALSE FALSE   FALSE    FALSE FALSE FALSE    FALSE\n       KEPERCAYAA  PRIA WANITA BELUM_KAWI KAWIN CERAI_HIDU CERAI_MATI    U0\n  [1,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [2,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [3,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [4,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [5,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [6,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [7,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [8,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n  [9,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [10,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [11,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [12,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [13,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [14,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [15,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [16,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [17,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [18,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [19,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [20,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [21,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [22,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [23,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [24,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [25,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [26,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [27,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [28,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [29,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [30,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [31,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [32,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [33,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [34,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [35,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [36,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [37,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [38,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [39,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [40,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [41,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [42,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [43,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [44,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [45,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [46,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [47,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [48,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [49,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [50,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [51,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [52,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [53,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [54,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [55,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [56,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [57,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [58,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [59,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [60,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [61,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [62,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [63,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [64,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [65,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [66,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [67,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [68,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [69,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [70,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [71,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [72,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [73,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [74,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [75,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [76,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [77,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [78,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [79,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [80,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [81,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [82,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [83,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [84,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [85,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [86,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [87,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [88,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [89,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [90,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [91,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [92,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [93,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [94,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [95,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [96,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [97,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [98,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n [99,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[100,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[101,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[102,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[103,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[104,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[105,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[106,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[107,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[108,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[109,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[110,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[111,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[112,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[113,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[114,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[115,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[116,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[117,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[118,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[119,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[120,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[121,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[122,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[123,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[124,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[125,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[126,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[127,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[128,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[129,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[130,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[131,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[132,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[133,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[134,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[135,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[136,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[137,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[138,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[139,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[140,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[141,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[142,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[143,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[144,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[145,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[146,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[147,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[148,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[149,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[150,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[151,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[152,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[153,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[154,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[155,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[156,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[157,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[158,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[159,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[160,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[161,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[162,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[163,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[164,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[165,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[166,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[167,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[168,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[169,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[170,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[171,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[172,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[173,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[174,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[175,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[176,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[177,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[178,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[179,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[180,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[181,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[182,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[183,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[184,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[185,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[186,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[187,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[188,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[189,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[190,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[191,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[192,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[193,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[194,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[195,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[196,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[197,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[198,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[199,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[200,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[201,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[202,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[203,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[204,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[205,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[206,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[207,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[208,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[209,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[210,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[211,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[212,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[213,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[214,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[215,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[216,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[217,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[218,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[219,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[220,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[221,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[222,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[223,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[224,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[225,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[226,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[227,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[228,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[229,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[230,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[231,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[232,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[233,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[234,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[235,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[236,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[237,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[238,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[239,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[240,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[241,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[242,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[243,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[244,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[245,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[246,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[247,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[248,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[249,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[250,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[251,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[252,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[253,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[254,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[255,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[256,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[257,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[258,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[259,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[260,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[261,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[262,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[263,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[264,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[265,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[266,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[267,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[268,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n[269,]      FALSE FALSE  FALSE      FALSE FALSE      FALSE      FALSE FALSE\n          U5   U10   U15   U20   U25   U30   U35   U40   U45   U50   U55   U60\n  [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [11,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [12,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [13,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [14,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [15,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [16,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [17,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [18,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [19,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [20,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [21,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [22,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [23,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [24,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [25,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [26,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [27,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [28,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [29,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [30,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [31,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [32,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [33,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [34,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [35,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [36,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [37,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [38,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [39,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [40,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [41,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [42,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [43,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [44,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [45,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [46,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [47,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [48,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [49,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [50,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [51,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [52,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [53,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [54,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [55,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [56,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [57,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [58,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [59,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [60,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [62,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [63,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [64,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [65,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [66,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [67,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [68,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [69,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [70,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [71,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [72,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [73,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [74,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [75,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [76,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [77,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [78,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [79,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [80,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [82,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [83,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [84,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [85,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [86,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [87,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [88,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [89,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [90,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [91,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [92,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [93,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [94,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [95,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [96,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [97,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [98,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [99,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[100,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[102,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[103,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[104,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[105,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[106,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[107,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[108,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[109,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[110,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[111,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[112,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[113,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[114,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[115,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[116,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[117,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[118,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[119,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[120,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[122,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[123,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[124,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[125,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[126,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[127,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[128,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[129,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[130,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[131,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[132,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[133,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[134,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[135,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[136,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[137,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[138,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[139,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[140,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[142,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[143,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[144,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[145,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[146,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[147,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[148,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[149,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[150,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[151,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[152,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[153,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[154,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[155,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[156,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[157,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[158,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[159,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[160,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[161,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[162,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[163,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[164,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[165,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[166,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[167,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[168,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[169,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[170,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[171,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[172,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[173,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[174,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[175,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[176,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[177,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[178,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[179,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[180,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[181,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[182,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[183,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[184,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[185,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[186,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[187,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[188,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[189,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[190,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[191,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[192,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[193,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[194,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[195,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[196,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[197,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[198,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[199,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[200,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[201,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[202,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[203,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[204,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[205,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[206,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[207,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[208,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[209,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[210,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[211,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[212,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[213,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[214,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[215,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[216,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[217,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[218,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[219,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[220,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[221,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[222,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[223,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[224,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[225,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[226,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[227,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[228,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[229,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[230,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[231,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[232,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[233,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[234,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[235,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[236,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[237,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[238,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[239,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[240,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[241,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[242,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[243,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[244,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[245,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[246,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[247,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[248,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[249,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[250,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[251,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[252,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[253,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[254,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[255,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[256,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[257,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[258,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[259,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[260,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[261,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[262,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[263,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[264,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[265,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[266,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[267,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[268,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[269,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n         U65   U70   U75 TIDAK_BELU BELUM_TAMA TAMAT_SD  SLTP  SLTA DIPLOMA_I\n  [1,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [2,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [3,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [4,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [5,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [6,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [7,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [8,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n  [9,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [10,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [11,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [12,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [13,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [14,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [15,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [16,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [17,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [18,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [19,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [20,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [21,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [22,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [23,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [24,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [25,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [26,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [27,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [28,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [29,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [30,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [31,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [32,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [33,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [34,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [35,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [36,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [37,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [38,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [39,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [40,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [41,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [42,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [43,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [44,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [45,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [46,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [47,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [48,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [49,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [50,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [51,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [52,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [53,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [54,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [55,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [56,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [57,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [58,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [59,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [60,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [61,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [62,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [63,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [64,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [65,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [66,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [67,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [68,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [69,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [70,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [71,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [72,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [73,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [74,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [75,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [76,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [77,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [78,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [79,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [80,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [81,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [82,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [83,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [84,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [85,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [86,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [87,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [88,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [89,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [90,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [91,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [92,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [93,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [94,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [95,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [96,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [97,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [98,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n [99,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[100,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[101,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[102,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[103,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[104,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[105,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[106,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[107,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[108,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[109,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[110,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[111,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[112,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[113,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[114,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[115,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[116,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[117,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[118,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[119,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[120,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[121,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[122,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[123,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[124,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[125,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[126,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[127,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[128,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[129,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[130,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[131,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[132,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[133,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[134,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[135,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[136,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[137,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[138,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[139,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[140,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[141,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[142,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[143,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[144,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[145,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[146,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[147,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[148,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[149,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[150,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[151,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[152,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[153,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[154,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[155,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[156,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[157,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[158,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[159,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[160,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[161,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[162,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[163,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[164,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[165,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[166,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[167,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[168,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[169,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[170,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[171,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[172,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[173,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[174,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[175,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[176,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[177,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[178,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[179,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[180,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[181,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[182,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[183,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[184,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[185,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[186,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[187,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[188,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[189,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[190,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[191,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[192,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[193,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[194,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[195,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[196,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[197,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[198,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[199,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[200,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[201,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[202,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[203,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[204,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[205,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[206,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[207,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[208,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[209,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[210,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[211,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[212,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[213,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[214,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[215,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[216,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[217,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[218,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[219,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[220,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[221,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[222,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[223,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[224,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[225,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[226,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[227,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[228,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[229,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[230,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[231,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[232,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[233,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[234,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[235,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[236,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[237,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[238,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[239,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[240,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[241,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[242,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[243,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[244,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[245,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[246,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[247,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[248,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[249,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[250,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[251,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[252,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[253,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[254,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[255,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[256,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[257,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[258,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[259,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[260,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[261,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[262,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[263,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[264,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[265,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[266,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[267,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[268,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n[269,] FALSE FALSE FALSE      FALSE      FALSE    FALSE FALSE FALSE     FALSE\n       DIPLOMA_II DIPLOMA_IV STRATA_II STRATA_III BELUM_TIDA APARATUR_P\n  [1,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [2,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [3,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [4,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [5,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [6,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [7,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [8,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n  [9,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [10,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [11,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [12,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [13,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [14,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [15,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [16,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [17,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [18,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [19,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [20,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [21,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [22,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [23,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [24,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [25,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [26,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [27,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [28,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [29,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [30,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [31,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [32,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [33,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [34,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [35,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [36,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [37,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [38,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [39,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [40,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [41,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [42,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [43,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [44,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [45,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [46,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [47,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [48,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [49,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [50,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [51,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [52,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [53,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [54,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [55,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [56,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [57,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [58,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [59,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [60,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [61,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [62,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [63,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [64,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [65,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [66,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [67,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [68,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [69,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [70,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [71,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [72,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [73,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [74,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [75,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [76,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [77,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [78,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [79,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [80,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [81,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [82,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [83,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [84,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [85,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [86,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [87,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [88,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [89,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [90,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [91,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [92,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [93,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [94,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [95,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [96,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [97,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [98,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n [99,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[100,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[101,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[102,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[103,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[104,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[105,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[106,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[107,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[108,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[109,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[110,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[111,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[112,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[113,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[114,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[115,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[116,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[117,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[118,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[119,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[120,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[121,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[122,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[123,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[124,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[125,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[126,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[127,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[128,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[129,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[130,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[131,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[132,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[133,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[134,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[135,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[136,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[137,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[138,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[139,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[140,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[141,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[142,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[143,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[144,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[145,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[146,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[147,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[148,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[149,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[150,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[151,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[152,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[153,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[154,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[155,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[156,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[157,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[158,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[159,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[160,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[161,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[162,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[163,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[164,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[165,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[166,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[167,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[168,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[169,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[170,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[171,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[172,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[173,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[174,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[175,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[176,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[177,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[178,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[179,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[180,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[181,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[182,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[183,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[184,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[185,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[186,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[187,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[188,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[189,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[190,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[191,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[192,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[193,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[194,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[195,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[196,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[197,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[198,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[199,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[200,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[201,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[202,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[203,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[204,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[205,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[206,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[207,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[208,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[209,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[210,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[211,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[212,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[213,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[214,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[215,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[216,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[217,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[218,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[219,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[220,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[221,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[222,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[223,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[224,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[225,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[226,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[227,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[228,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[229,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[230,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[231,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[232,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[233,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[234,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[235,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[236,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[237,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[238,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[239,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[240,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[241,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[242,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[243,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[244,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[245,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[246,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[247,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[248,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[249,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[250,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[251,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[252,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[253,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[254,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[255,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[256,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[257,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[258,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[259,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[260,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[261,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[262,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[263,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[264,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[265,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[266,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[267,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[268,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n[269,]      FALSE      FALSE     FALSE      FALSE      FALSE      FALSE\n       TENAGA_PEN WIRASWASTA PERTANIAN NELAYAN AGAMA_DAN PELAJAR_MA TENAGA_KES\n  [1,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [2,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [3,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [4,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [5,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [6,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [7,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [8,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n  [9,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [10,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [11,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [12,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [13,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [14,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [15,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [16,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [17,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [18,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [19,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [20,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [21,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [22,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [23,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [24,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [25,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [26,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [27,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [28,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [29,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [30,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [31,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [32,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [33,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [34,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [35,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [36,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [37,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [38,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [39,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [40,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [41,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [42,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [43,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [44,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [45,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [46,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [47,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [48,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [49,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [50,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [51,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [52,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [53,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [54,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [55,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [56,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [57,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [58,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [59,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [60,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [61,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [62,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [63,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [64,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [65,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [66,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [67,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [68,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [69,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [70,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [71,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [72,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [73,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [74,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [75,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [76,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [77,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [78,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [79,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [80,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [81,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [82,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [83,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [84,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [85,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [86,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [87,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [88,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [89,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [90,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [91,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [92,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [93,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [94,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [95,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [96,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [97,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [98,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n [99,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[100,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[101,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[102,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[103,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[104,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[105,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[106,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[107,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[108,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[109,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[110,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[111,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[112,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[113,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[114,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[115,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[116,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[117,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[118,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[119,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[120,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[121,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[122,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[123,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[124,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[125,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[126,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[127,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[128,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[129,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[130,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[131,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[132,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[133,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[134,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[135,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[136,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[137,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[138,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[139,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[140,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[141,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[142,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[143,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[144,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[145,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[146,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[147,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[148,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[149,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[150,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[151,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[152,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[153,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[154,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[155,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[156,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[157,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[158,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[159,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[160,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[161,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[162,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[163,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[164,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[165,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[166,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[167,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[168,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[169,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[170,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[171,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[172,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[173,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[174,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[175,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[176,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[177,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[178,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[179,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[180,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[181,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[182,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[183,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[184,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[185,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[186,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[187,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[188,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[189,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[190,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[191,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[192,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[193,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[194,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[195,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[196,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[197,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[198,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[199,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[200,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[201,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[202,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[203,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[204,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[205,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[206,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[207,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[208,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[209,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[210,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[211,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[212,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[213,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[214,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[215,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[216,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[217,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[218,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[219,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[220,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[221,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[222,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[223,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[224,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[225,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[226,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[227,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[228,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[229,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[230,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[231,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[232,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[233,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[234,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[235,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[236,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[237,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[238,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[239,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[240,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[241,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[242,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[243,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[244,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[245,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[246,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[247,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[248,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[249,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[250,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[251,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[252,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[253,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[254,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[255,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[256,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[257,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[258,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[259,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[260,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[261,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[262,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[263,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[264,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[265,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[266,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[267,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[268,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n[269,]      FALSE      FALSE     FALSE   FALSE     FALSE      FALSE      FALSE\n       PENSIUNAN LAINNYA GENERATED KODE_DES_1 BELUM_ MENGUR_ PELAJAR_\n  [1,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [2,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [3,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [4,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [5,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [6,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [7,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [8,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n  [9,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [10,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [11,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [12,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [13,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [14,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [15,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [16,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [17,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [18,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [19,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [20,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [21,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [22,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [23,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [24,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [25,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [26,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [27,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [28,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [29,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [30,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [31,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [32,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [33,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [34,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [35,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [36,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [37,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [38,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [39,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [40,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [41,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [42,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [43,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [44,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [45,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [46,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [47,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [48,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [49,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [50,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [51,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [52,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [53,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [54,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [55,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [56,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [57,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [58,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [59,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [60,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [61,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [62,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [63,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [64,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [65,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [66,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [67,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [68,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [69,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [70,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [71,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [72,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [73,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [74,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [75,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [76,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [77,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [78,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [79,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [80,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [81,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [82,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [83,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [84,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [85,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [86,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [87,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [88,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [89,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [90,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [91,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [92,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [93,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [94,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [95,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [96,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [97,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [98,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n [99,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[100,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[101,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[102,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[103,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[104,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[105,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[106,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[107,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[108,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[109,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[110,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[111,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[112,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[113,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[114,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[115,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[116,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[117,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[118,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[119,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[120,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[121,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[122,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[123,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[124,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[125,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[126,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[127,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[128,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[129,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[130,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[131,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[132,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[133,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[134,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[135,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[136,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[137,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[138,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[139,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[140,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[141,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[142,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[143,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[144,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[145,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[146,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[147,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[148,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[149,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[150,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[151,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[152,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[153,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[154,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[155,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[156,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[157,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[158,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[159,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[160,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[161,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[162,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[163,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[164,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[165,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[166,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[167,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[168,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[169,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[170,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[171,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[172,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[173,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[174,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[175,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[176,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[177,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[178,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[179,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[180,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[181,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[182,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[183,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[184,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[185,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[186,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[187,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[188,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[189,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[190,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[191,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[192,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[193,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[194,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[195,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[196,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[197,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[198,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[199,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[200,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[201,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[202,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[203,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[204,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[205,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[206,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[207,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[208,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[209,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[210,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[211,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[212,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[213,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[214,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[215,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[216,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[217,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[218,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[219,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[220,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[221,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[222,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[223,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[224,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[225,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[226,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[227,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[228,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[229,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[230,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[231,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[232,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[233,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[234,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[235,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[236,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[237,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[238,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[239,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[240,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[241,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[242,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[243,]     FALSE   FALSE      TRUE       TRUE  FALSE   FALSE    FALSE\n[244,]     FALSE   FALSE      TRUE       TRUE  FALSE   FALSE    FALSE\n[245,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[246,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[247,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[248,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[249,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[250,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[251,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[252,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[253,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[254,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[255,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[256,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[257,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[258,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[259,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[260,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[261,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[262,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[263,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[264,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[265,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[266,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[267,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[268,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n[269,]     FALSE   FALSE     FALSE      FALSE  FALSE   FALSE    FALSE\n       PENSIUNA_1 PEGAWAI_ TENTARA KEPOLISIAN PERDAG_ PETANI PETERN_ NELAYAN_1\n  [1,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [2,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [3,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [4,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [5,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [6,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [7,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [8,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n  [9,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [10,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [11,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [12,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [13,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [14,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [15,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [16,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [17,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [18,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [19,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [20,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [21,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [22,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [23,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [24,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [25,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [26,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [27,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [28,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [29,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [30,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [31,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [32,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [33,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [34,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [35,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [36,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [37,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [38,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [39,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [40,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [41,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [42,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [43,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [44,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [45,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [46,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [47,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [48,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [49,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [50,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [51,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [52,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [53,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [54,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [55,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [56,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [57,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [58,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [59,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [60,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [61,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [62,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [63,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [64,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [65,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [66,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [67,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [68,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [69,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [70,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [71,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [72,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [73,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [74,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [75,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [76,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [77,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [78,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [79,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [80,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [81,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [82,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [83,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [84,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [85,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [86,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [87,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [88,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [89,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [90,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [91,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [92,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [93,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [94,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [95,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [96,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [97,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [98,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n [99,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[100,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[101,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[102,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[103,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[104,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[105,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[106,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[107,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[108,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[109,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[110,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[111,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[112,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[113,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[114,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[115,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[116,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[117,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[118,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[119,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[120,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[121,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[122,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[123,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[124,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[125,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[126,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[127,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[128,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[129,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[130,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[131,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[132,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[133,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[134,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[135,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[136,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[137,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[138,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[139,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[140,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[141,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[142,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[143,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[144,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[145,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[146,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[147,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[148,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[149,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[150,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[151,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[152,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[153,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[154,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[155,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[156,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[157,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[158,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[159,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[160,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[161,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[162,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[163,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[164,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[165,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[166,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[167,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[168,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[169,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[170,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[171,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[172,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[173,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[174,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[175,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[176,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[177,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[178,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[179,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[180,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[181,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[182,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[183,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[184,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[185,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[186,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[187,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[188,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[189,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[190,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[191,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[192,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[193,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[194,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[195,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[196,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[197,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[198,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[199,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[200,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[201,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[202,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[203,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[204,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[205,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[206,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[207,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[208,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[209,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[210,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[211,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[212,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[213,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[214,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[215,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[216,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[217,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[218,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[219,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[220,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[221,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[222,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[223,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[224,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[225,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[226,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[227,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[228,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[229,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[230,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[231,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[232,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[233,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[234,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[235,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[236,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[237,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[238,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[239,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[240,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[241,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[242,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[243,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[244,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[245,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[246,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[247,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[248,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[249,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[250,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[251,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[252,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[253,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[254,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[255,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[256,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[257,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[258,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[259,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[260,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[261,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[262,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[263,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[264,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[265,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[266,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[267,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[268,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n[269,]      FALSE    FALSE   FALSE      FALSE   FALSE  FALSE   FALSE     FALSE\n       INDUSTR_ KONSTR_ TRANSP_ KARYAW_ KARYAW1 KARYAW1_1 KARYAW1_12 BURUH\n  [1,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [2,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [3,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [4,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [5,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [6,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [7,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [8,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n  [9,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [10,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [11,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [12,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [13,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [14,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [15,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [16,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [17,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [18,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [19,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [20,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [21,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [22,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [23,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [24,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [25,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [26,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [27,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [28,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [29,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [30,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [31,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [32,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [33,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [34,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [35,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [36,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [37,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [38,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [39,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [40,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [41,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [42,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [43,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [44,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [45,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [46,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [47,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [48,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [49,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [50,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [51,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [52,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [53,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [54,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [55,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [56,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [57,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [58,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [59,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [60,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [61,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [62,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [63,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [64,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [65,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [66,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [67,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [68,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [69,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [70,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [71,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [72,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [73,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [74,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [75,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [76,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [77,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [78,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [79,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [80,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [81,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [82,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [83,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [84,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [85,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [86,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [87,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [88,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [89,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [90,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [91,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [92,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [93,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [94,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [95,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [96,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [97,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [98,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n [99,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[100,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[101,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[102,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[103,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[104,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[105,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[106,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[107,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[108,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[109,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[110,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[111,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[112,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[113,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[114,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[115,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[116,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[117,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[118,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[119,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[120,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[121,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[122,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[123,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[124,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[125,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[126,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[127,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[128,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[129,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[130,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[131,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[132,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[133,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[134,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[135,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[136,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[137,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[138,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[139,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[140,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[141,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[142,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[143,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[144,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[145,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[146,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[147,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[148,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[149,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[150,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[151,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[152,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[153,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[154,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[155,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[156,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[157,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[158,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[159,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[160,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[161,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[162,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[163,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[164,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[165,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[166,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[167,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[168,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[169,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[170,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[171,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[172,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[173,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[174,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[175,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[176,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[177,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[178,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[179,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[180,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[181,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[182,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[183,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[184,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[185,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[186,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[187,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[188,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[189,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[190,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[191,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[192,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[193,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[194,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[195,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[196,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[197,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[198,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[199,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[200,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[201,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[202,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[203,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[204,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[205,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[206,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[207,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[208,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[209,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[210,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[211,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[212,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[213,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[214,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[215,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[216,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[217,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[218,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[219,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[220,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[221,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[222,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[223,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[224,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[225,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[226,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[227,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[228,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[229,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[230,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[231,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[232,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[233,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[234,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[235,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[236,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[237,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[238,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[239,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[240,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[241,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[242,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[243,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[244,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[245,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[246,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[247,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[248,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[249,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[250,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[251,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[252,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[253,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[254,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[255,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[256,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[257,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[258,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[259,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[260,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[261,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[262,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[263,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[264,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[265,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[266,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[267,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[268,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n[269,]    FALSE   FALSE   FALSE   FALSE   FALSE     FALSE      FALSE FALSE\n       BURUH_ BURUH1 BURUH1_1 PEMBANT_ TUKANG TUKANG_1 TUKANG_12 TUKANG__13\n  [1,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [2,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [3,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [4,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [5,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [6,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [7,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [8,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n  [9,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [10,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [11,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [12,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [13,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [14,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [15,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [16,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [17,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [18,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [19,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [20,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [21,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [22,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [23,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [24,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [25,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [26,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [27,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [28,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [29,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [30,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [31,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [32,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [33,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [34,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [35,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [36,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [37,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [38,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [39,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [40,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [41,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [42,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [43,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [44,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [45,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [46,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [47,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [48,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [49,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [50,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [51,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [52,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [53,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [54,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [55,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [56,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [57,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [58,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [59,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [60,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [61,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [62,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [63,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [64,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [65,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [66,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [67,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [68,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [69,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [70,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [71,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [72,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [73,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [74,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [75,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [76,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [77,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [78,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [79,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [80,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [81,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [82,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [83,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [84,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [85,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [86,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [87,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [88,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [89,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [90,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [91,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [92,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [93,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [94,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [95,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [96,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [97,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [98,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n [99,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[100,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[101,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[102,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[103,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[104,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[105,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[106,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[107,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[108,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[109,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[110,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[111,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[112,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[113,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[114,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[115,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[116,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[117,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[118,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[119,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[120,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[121,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[122,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[123,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[124,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[125,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[126,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[127,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[128,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[129,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[130,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[131,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[132,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[133,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[134,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[135,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[136,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[137,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[138,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[139,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[140,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[141,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[142,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[143,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[144,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[145,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[146,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[147,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[148,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[149,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[150,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[151,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[152,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[153,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[154,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[155,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[156,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[157,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[158,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[159,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[160,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[161,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[162,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[163,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[164,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[165,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[166,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[167,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[168,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[169,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[170,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[171,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[172,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[173,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[174,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[175,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[176,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[177,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[178,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[179,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[180,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[181,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[182,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[183,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[184,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[185,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[186,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[187,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[188,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[189,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[190,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[191,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[192,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[193,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[194,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[195,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[196,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[197,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[198,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[199,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[200,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[201,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[202,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[203,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[204,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[205,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[206,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[207,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[208,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[209,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[210,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[211,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[212,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[213,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[214,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[215,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[216,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[217,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[218,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[219,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[220,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[221,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[222,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[223,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[224,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[225,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[226,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[227,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[228,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[229,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[230,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[231,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[232,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[233,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[234,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[235,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[236,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[237,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[238,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[239,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[240,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[241,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[242,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[243,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[244,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[245,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[246,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[247,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[248,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[249,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[250,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[251,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[252,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[253,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[254,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[255,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[256,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[257,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[258,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[259,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[260,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[261,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[262,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[263,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[264,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[265,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[266,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[267,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[268,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n[269,]  FALSE  FALSE    FALSE    FALSE  FALSE    FALSE     FALSE      FALSE\n       TUKANG__14 TUKANG__15 TUKANG__16 TUKANG__17 PENATA PENATA_ PENATA1_1\n  [1,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [2,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [3,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [4,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [5,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [6,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [7,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [8,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n  [9,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [10,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [11,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [12,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [13,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [14,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [15,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [16,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [17,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [18,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [19,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [20,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [21,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [22,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [23,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [24,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [25,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [26,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [27,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [28,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [29,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [30,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [31,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [32,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [33,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [34,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [35,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [36,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [37,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [38,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [39,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [40,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [41,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [42,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [43,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [44,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [45,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [46,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [47,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [48,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [49,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [50,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [51,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [52,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [53,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [54,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [55,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [56,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [57,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [58,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [59,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [60,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [61,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [62,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [63,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [64,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [65,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [66,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [67,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [68,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [69,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [70,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [71,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [72,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [73,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [74,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [75,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [76,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [77,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [78,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [79,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [80,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [81,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [82,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [83,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [84,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [85,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [86,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [87,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [88,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [89,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [90,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [91,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [92,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [93,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [94,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [95,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [96,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [97,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [98,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n [99,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[100,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[101,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[102,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[103,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[104,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[105,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[106,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[107,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[108,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[109,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[110,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[111,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[112,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[113,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[114,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[115,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[116,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[117,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[118,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[119,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[120,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[121,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[122,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[123,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[124,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[125,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[126,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[127,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[128,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[129,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[130,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[131,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[132,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[133,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[134,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[135,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[136,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[137,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[138,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[139,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[140,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[141,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[142,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[143,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[144,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[145,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[146,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[147,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[148,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[149,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[150,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[151,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[152,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[153,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[154,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[155,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[156,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[157,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[158,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[159,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[160,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[161,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[162,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[163,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[164,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[165,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[166,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[167,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[168,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[169,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[170,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[171,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[172,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[173,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[174,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[175,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[176,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[177,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[178,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[179,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[180,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[181,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[182,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[183,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[184,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[185,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[186,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[187,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[188,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[189,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[190,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[191,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[192,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[193,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[194,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[195,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[196,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[197,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[198,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[199,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[200,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[201,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[202,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[203,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[204,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[205,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[206,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[207,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[208,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[209,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[210,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[211,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[212,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[213,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[214,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[215,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[216,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[217,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[218,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[219,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[220,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[221,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[222,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[223,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[224,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[225,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[226,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[227,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[228,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[229,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[230,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[231,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[232,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[233,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[234,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[235,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[236,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[237,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[238,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[239,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[240,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[241,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[242,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[243,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[244,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[245,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[246,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[247,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[248,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[249,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[250,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[251,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[252,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[253,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[254,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[255,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[256,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[257,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[258,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[259,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[260,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[261,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[262,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[263,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[264,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[265,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[266,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[267,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[268,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n[269,]      FALSE      FALSE      FALSE      FALSE  FALSE   FALSE     FALSE\n       MEKANIK SENIMAN_ TABIB PARAJI_ PERANCA_ PENTER_ IMAM_M PENDETA PASTOR\n  [1,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [2,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [3,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [4,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [5,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [6,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [7,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [8,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n  [9,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [10,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [11,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [12,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [13,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [14,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [15,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [16,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [17,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [18,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [19,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [20,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [21,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [22,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [23,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [24,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [25,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [26,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [27,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [28,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [29,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [30,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [31,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [32,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [33,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [34,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [35,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [36,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [37,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [38,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [39,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [40,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [41,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [42,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [43,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [44,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [45,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [46,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [47,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [48,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [49,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [50,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [51,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [52,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [53,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [54,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [55,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [56,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [57,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [58,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [59,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [60,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [61,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [62,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [63,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [64,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [65,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [66,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [67,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [68,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [69,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [70,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [71,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [72,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [73,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [74,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [75,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [76,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [77,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [78,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [79,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [80,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [81,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [82,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [83,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [84,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [85,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [86,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [87,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [88,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [89,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [90,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [91,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [92,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [93,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [94,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [95,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [96,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [97,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [98,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n [99,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[100,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[101,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[102,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[103,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[104,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[105,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[106,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[107,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[108,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[109,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[110,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[111,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[112,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[113,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[114,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[115,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[116,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[117,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[118,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[119,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[120,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[121,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[122,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[123,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[124,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[125,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[126,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[127,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[128,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[129,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[130,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[131,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[132,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[133,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[134,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[135,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[136,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[137,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[138,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[139,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[140,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[141,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[142,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[143,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[144,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[145,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[146,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[147,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[148,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[149,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[150,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[151,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[152,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[153,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[154,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[155,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[156,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[157,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[158,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[159,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[160,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[161,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[162,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[163,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[164,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[165,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[166,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[167,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[168,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[169,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[170,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[171,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[172,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[173,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[174,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[175,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[176,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[177,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[178,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[179,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[180,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[181,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[182,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[183,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[184,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[185,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[186,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[187,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[188,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[189,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[190,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[191,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[192,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[193,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[194,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[195,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[196,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[197,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[198,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[199,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[200,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[201,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[202,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[203,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[204,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[205,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[206,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[207,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[208,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[209,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[210,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[211,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[212,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[213,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[214,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[215,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[216,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[217,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[218,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[219,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[220,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[221,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[222,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[223,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[224,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[225,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[226,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[227,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[228,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[229,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[230,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[231,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[232,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[233,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[234,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[235,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[236,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[237,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[238,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[239,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[240,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[241,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[242,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[243,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[244,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[245,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[246,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[247,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[248,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[249,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[250,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[251,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[252,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[253,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[254,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[255,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[256,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[257,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[258,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[259,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[260,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[261,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[262,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[263,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[264,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[265,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[266,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[267,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[268,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n[269,]   FALSE    FALSE FALSE   FALSE    FALSE   FALSE  FALSE   FALSE  FALSE\n       WARTAWAN USTADZ JURU_M PROMOT ANGGOTA_ ANGGOTA1 ANGGOTA1_1 PRESIDEN\n  [1,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [2,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [3,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [4,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [5,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [6,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [7,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [8,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n  [9,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [10,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [11,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [12,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [13,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [14,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [15,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [16,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [17,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [18,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [19,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [20,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [21,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [22,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [23,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [24,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [25,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [26,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [27,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [28,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [29,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [30,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [31,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [32,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [33,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [34,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [35,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [36,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [37,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [38,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [39,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [40,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [41,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [42,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [43,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [44,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [45,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [46,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [47,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [48,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [49,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [50,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [51,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [52,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [53,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [54,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [55,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [56,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [57,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [58,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [59,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [60,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [61,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [62,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [63,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [64,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [65,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [66,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [67,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [68,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [69,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [70,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [71,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [72,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [73,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [74,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [75,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [76,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [77,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [78,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [79,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [80,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [81,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [82,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [83,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [84,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [85,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [86,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [87,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [88,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [89,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [90,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [91,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [92,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [93,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [94,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [95,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [96,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [97,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [98,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n [99,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[100,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[101,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[102,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[103,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[104,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[105,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[106,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[107,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[108,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[109,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[110,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[111,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[112,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[113,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[114,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[115,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[116,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[117,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[118,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[119,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[120,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[121,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[122,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[123,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[124,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[125,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[126,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[127,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[128,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[129,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[130,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[131,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[132,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[133,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[134,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[135,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[136,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[137,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[138,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[139,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[140,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[141,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[142,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[143,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[144,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[145,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[146,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[147,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[148,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[149,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[150,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[151,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[152,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[153,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[154,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[155,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[156,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[157,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[158,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[159,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[160,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[161,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[162,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[163,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[164,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[165,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[166,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[167,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[168,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[169,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[170,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[171,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[172,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[173,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[174,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[175,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[176,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[177,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[178,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[179,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[180,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[181,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[182,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[183,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[184,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[185,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[186,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[187,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[188,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[189,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[190,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[191,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[192,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[193,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[194,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[195,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[196,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[197,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[198,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[199,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[200,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[201,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[202,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[203,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[204,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[205,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[206,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[207,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[208,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[209,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[210,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[211,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[212,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[213,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[214,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[215,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[216,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[217,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[218,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[219,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[220,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[221,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[222,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[223,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[224,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[225,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[226,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[227,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[228,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[229,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[230,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[231,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[232,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[233,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[234,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[235,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[236,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[237,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[238,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[239,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[240,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[241,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[242,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[243,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[244,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[245,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[246,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[247,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[248,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[249,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[250,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[251,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[252,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[253,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[254,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[255,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[256,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[257,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[258,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[259,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[260,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[261,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[262,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[263,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[264,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[265,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[266,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[267,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[268,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n[269,]    FALSE  FALSE  FALSE  FALSE    FALSE    FALSE      FALSE    FALSE\n       WAKIL_PRES ANGGOTA1_2 ANGGOTA1_3 DUTA_B GUBERNUR WAKIL_GUBE BUPATI\n  [1,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [2,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [3,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [4,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [5,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [6,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [7,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [8,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n  [9,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [10,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [11,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [12,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [13,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [14,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [15,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [16,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [17,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [18,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [19,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [20,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [21,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [22,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [23,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [24,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [25,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [26,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [27,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [28,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [29,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [30,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [31,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [32,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [33,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [34,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [35,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [36,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [37,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [38,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [39,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [40,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [41,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [42,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [43,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [44,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [45,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [46,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [47,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [48,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [49,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [50,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [51,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [52,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [53,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [54,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [55,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [56,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [57,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [58,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [59,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [60,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [61,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [62,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [63,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [64,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [65,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [66,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [67,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [68,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [69,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [70,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [71,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [72,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [73,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [74,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [75,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [76,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [77,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [78,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [79,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [80,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [81,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [82,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [83,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [84,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [85,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [86,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [87,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [88,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [89,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [90,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [91,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [92,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [93,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [94,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [95,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [96,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [97,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [98,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n [99,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[100,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[101,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[102,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[103,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[104,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[105,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[106,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[107,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[108,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[109,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[110,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[111,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[112,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[113,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[114,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[115,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[116,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[117,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[118,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[119,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[120,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[121,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[122,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[123,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[124,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[125,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[126,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[127,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[128,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[129,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[130,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[131,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[132,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[133,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[134,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[135,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[136,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[137,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[138,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[139,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[140,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[141,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[142,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[143,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[144,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[145,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[146,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[147,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[148,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[149,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[150,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[151,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[152,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[153,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[154,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[155,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[156,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[157,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[158,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[159,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[160,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[161,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[162,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[163,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[164,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[165,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[166,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[167,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[168,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[169,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[170,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[171,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[172,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[173,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[174,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[175,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[176,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[177,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[178,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[179,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[180,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[181,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[182,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[183,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[184,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[185,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[186,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[187,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[188,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[189,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[190,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[191,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[192,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[193,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[194,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[195,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[196,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[197,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[198,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[199,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[200,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[201,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[202,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[203,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[204,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[205,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[206,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[207,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[208,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[209,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[210,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[211,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[212,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[213,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[214,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[215,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[216,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[217,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[218,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[219,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[220,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[221,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[222,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[223,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[224,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[225,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[226,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[227,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[228,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[229,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[230,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[231,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[232,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[233,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[234,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[235,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[236,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[237,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[238,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[239,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[240,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[241,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[242,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[243,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[244,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[245,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[246,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[247,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[248,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[249,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[250,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[251,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[252,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[253,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[254,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[255,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[256,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[257,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[258,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[259,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[260,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[261,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[262,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[263,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[264,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[265,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[266,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[267,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[268,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n[269,]      FALSE      FALSE      FALSE  FALSE    FALSE      FALSE  FALSE\n       WAKIL_BUPA WALIKOTA WAKIL_WALI ANGGOTA1_4 ANGGOTA1_5 DOSEN  GURU PILOT\n  [1,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [2,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [3,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [4,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [5,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [6,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [7,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [8,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n  [9,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [10,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [11,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [12,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [13,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [14,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [15,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [16,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [17,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [18,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [19,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [20,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [21,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [22,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [23,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [24,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [25,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [26,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [27,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [28,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [29,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [30,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [31,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [32,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [33,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [34,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [35,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [36,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [37,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [38,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [39,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [40,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [41,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [42,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [43,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [44,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [45,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [46,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [47,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [48,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [49,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [50,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [51,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [52,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [53,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [54,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [55,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [56,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [57,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [58,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [59,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [60,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [61,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [62,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [63,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [64,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [65,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [66,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [67,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [68,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [69,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [70,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [71,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [72,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [73,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [74,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [75,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [76,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [77,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [78,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [79,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [80,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [81,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [82,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [83,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [84,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [85,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [86,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [87,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [88,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [89,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [90,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [91,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [92,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [93,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [94,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [95,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [96,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [97,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [98,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n [99,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[100,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[101,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[102,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[103,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[104,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[105,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[106,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[107,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[108,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[109,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[110,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[111,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[112,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[113,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[114,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[115,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[116,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[117,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[118,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[119,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[120,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[121,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[122,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[123,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[124,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[125,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[126,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[127,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[128,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[129,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[130,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[131,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[132,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[133,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[134,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[135,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[136,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[137,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[138,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[139,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[140,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[141,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[142,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[143,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[144,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[145,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[146,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[147,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[148,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[149,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[150,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[151,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[152,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[153,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[154,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[155,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[156,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[157,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[158,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[159,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[160,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[161,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[162,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[163,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[164,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[165,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[166,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[167,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[168,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[169,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[170,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[171,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[172,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[173,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[174,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[175,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[176,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[177,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[178,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[179,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[180,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[181,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[182,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[183,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[184,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[185,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[186,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[187,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[188,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[189,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[190,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[191,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[192,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[193,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[194,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[195,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[196,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[197,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[198,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[199,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[200,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[201,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[202,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[203,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[204,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[205,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[206,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[207,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[208,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[209,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[210,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[211,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[212,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[213,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[214,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[215,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[216,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[217,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[218,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[219,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[220,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[221,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[222,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[223,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[224,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[225,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[226,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[227,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[228,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[229,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[230,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[231,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[232,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[233,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[234,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[235,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[236,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[237,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[238,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[239,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[240,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[241,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[242,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[243,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[244,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[245,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[246,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[247,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[248,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[249,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[250,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[251,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[252,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[253,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[254,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[255,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[256,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[257,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[258,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[259,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[260,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[261,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[262,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[263,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[264,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[265,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[266,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[267,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[268,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n[269,]      FALSE    FALSE      FALSE      FALSE      FALSE FALSE FALSE FALSE\n       PENGACARA_ NOTARIS ARSITEK AKUNTA_ KONSUL_ DOKTER BIDAN PERAWAT APOTEK_\n  [1,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [2,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [3,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [4,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [5,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [6,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [7,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [8,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n  [9,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [10,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [11,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [12,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [13,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [14,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [15,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [16,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [17,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [18,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [19,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [20,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [21,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [22,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [23,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [24,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [25,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [26,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [27,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [28,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [29,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [30,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [31,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [32,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [33,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [34,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [35,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [36,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [37,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [38,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [39,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [40,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [41,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [42,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [43,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [44,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [45,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [46,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [47,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [48,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [49,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [50,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [51,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [52,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [53,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [54,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [55,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [56,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [57,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [58,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [59,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [60,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [61,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [62,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [63,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [64,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [65,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [66,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [67,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [68,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [69,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [70,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [71,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [72,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [73,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [74,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [75,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [76,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [77,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [78,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [79,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [80,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [81,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [82,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [83,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [84,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [85,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [86,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [87,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [88,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [89,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [90,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [91,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [92,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [93,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [94,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [95,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [96,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [97,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [98,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n [99,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[100,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[101,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[102,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[103,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[104,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[105,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[106,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[107,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[108,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[109,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[110,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[111,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[112,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[113,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[114,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[115,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[116,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[117,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[118,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[119,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[120,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[121,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[122,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[123,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[124,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[125,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[126,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[127,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[128,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[129,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[130,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[131,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[132,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[133,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[134,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[135,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[136,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[137,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[138,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[139,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[140,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[141,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[142,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[143,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[144,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[145,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[146,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[147,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[148,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[149,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[150,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[151,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[152,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[153,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[154,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[155,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[156,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[157,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[158,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[159,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[160,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[161,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[162,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[163,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[164,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[165,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[166,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[167,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[168,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[169,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[170,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[171,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[172,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[173,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[174,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[175,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[176,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[177,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[178,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[179,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[180,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[181,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[182,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[183,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[184,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[185,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[186,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[187,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[188,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[189,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[190,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[191,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[192,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[193,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[194,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[195,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[196,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[197,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[198,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[199,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[200,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[201,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[202,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[203,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[204,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[205,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[206,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[207,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[208,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[209,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[210,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[211,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[212,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[213,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[214,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[215,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[216,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[217,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[218,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[219,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[220,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[221,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[222,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[223,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[224,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[225,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[226,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[227,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[228,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[229,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[230,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[231,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[232,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[233,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[234,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[235,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[236,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[237,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[238,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[239,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[240,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[241,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[242,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[243,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[244,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[245,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[246,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[247,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[248,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[249,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[250,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[251,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[252,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[253,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[254,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[255,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[256,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[257,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[258,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[259,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[260,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[261,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[262,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[263,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[264,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[265,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[266,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[267,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[268,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n[269,]      FALSE   FALSE   FALSE   FALSE   FALSE  FALSE FALSE   FALSE   FALSE\n       PSIKIATER PENYIA_ PENYIA1 PELAUT PENELITI SOPIR PIALAN PARANORMAL\n  [1,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [2,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [3,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [4,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [5,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [6,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [7,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [8,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n  [9,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [10,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [11,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [12,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [13,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [14,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [15,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [16,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [17,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [18,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [19,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [20,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [21,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [22,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [23,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [24,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [25,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [26,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [27,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [28,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [29,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [30,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [31,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [32,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [33,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [34,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [35,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [36,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [37,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [38,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [39,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [40,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [41,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [42,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [43,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [44,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [45,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [46,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [47,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [48,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [49,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [50,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [51,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [52,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [53,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [54,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [55,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [56,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [57,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [58,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [59,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [60,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [61,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [62,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [63,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [64,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [65,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [66,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [67,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [68,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [69,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [70,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [71,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [72,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [73,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [74,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [75,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [76,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [77,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [78,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [79,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [80,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [81,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [82,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [83,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [84,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [85,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [86,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [87,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [88,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [89,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [90,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [91,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [92,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [93,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [94,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [95,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [96,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [97,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [98,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n [99,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[100,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[101,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[102,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[103,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[104,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[105,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[106,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[107,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[108,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[109,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[110,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[111,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[112,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[113,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[114,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[115,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[116,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[117,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[118,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[119,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[120,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[121,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[122,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[123,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[124,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[125,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[126,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[127,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[128,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[129,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[130,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[131,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[132,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[133,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[134,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[135,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[136,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[137,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[138,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[139,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[140,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[141,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[142,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[143,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[144,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[145,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[146,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[147,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[148,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[149,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[150,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[151,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[152,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[153,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[154,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[155,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[156,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[157,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[158,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[159,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[160,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[161,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[162,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[163,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[164,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[165,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[166,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[167,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[168,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[169,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[170,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[171,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[172,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[173,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[174,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[175,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[176,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[177,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[178,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[179,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[180,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[181,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[182,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[183,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[184,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[185,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[186,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[187,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[188,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[189,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[190,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[191,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[192,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[193,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[194,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[195,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[196,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[197,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[198,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[199,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[200,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[201,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[202,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[203,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[204,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[205,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[206,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[207,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[208,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[209,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[210,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[211,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[212,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[213,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[214,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[215,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[216,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[217,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[218,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[219,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[220,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[221,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[222,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[223,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[224,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[225,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[226,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[227,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[228,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[229,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[230,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[231,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[232,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[233,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[234,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[235,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[236,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[237,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[238,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[239,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[240,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[241,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[242,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[243,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[244,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[245,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[246,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[247,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[248,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[249,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[250,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[251,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[252,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[253,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[254,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[255,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[256,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[257,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[258,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[259,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[260,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[261,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[262,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[263,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[264,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[265,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[266,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[267,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[268,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n[269,]     FALSE   FALSE   FALSE  FALSE    FALSE FALSE  FALSE      FALSE\n       PEDAGA_ PERANG_ KEPALA_ BIARAW_ WIRASWAST_ LAINNYA_12 LUAS_DESA\n  [1,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [2,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [3,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [4,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [5,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [6,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [7,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [8,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n  [9,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [10,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [11,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [12,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [13,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [14,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [15,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [16,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [17,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [18,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [19,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [20,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [21,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [22,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [23,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [24,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [25,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [26,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [27,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [28,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [29,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [30,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [31,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [32,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [33,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [34,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [35,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [36,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [37,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [38,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [39,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [40,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [41,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [42,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [43,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [44,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [45,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [46,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [47,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [48,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [49,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [50,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [51,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [52,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [53,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [54,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [55,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [56,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [57,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [58,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [59,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [60,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [61,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [62,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [63,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [64,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [65,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [66,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [67,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [68,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [69,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [70,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [71,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [72,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [73,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [74,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [75,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [76,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [77,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [78,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [79,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [80,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [81,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [82,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [83,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [84,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [85,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [86,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [87,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [88,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [89,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [90,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [91,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [92,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [93,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [94,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [95,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [96,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [97,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [98,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n [99,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[100,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[101,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[102,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[103,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[104,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[105,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[106,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[107,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[108,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[109,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[110,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[111,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[112,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[113,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[114,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[115,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[116,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[117,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[118,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[119,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[120,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[121,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[122,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[123,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[124,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[125,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[126,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[127,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[128,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[129,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[130,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[131,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[132,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[133,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[134,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[135,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[136,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[137,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[138,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[139,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[140,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[141,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[142,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[143,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[144,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[145,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[146,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[147,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[148,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[149,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[150,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[151,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[152,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[153,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[154,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[155,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[156,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[157,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[158,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[159,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[160,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[161,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[162,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[163,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[164,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[165,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[166,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[167,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[168,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[169,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[170,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[171,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[172,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[173,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[174,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[175,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[176,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[177,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[178,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[179,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[180,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[181,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[182,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[183,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[184,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[185,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[186,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[187,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[188,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[189,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[190,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[191,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[192,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[193,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[194,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[195,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[196,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[197,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[198,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[199,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[200,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[201,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[202,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[203,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[204,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[205,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[206,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[207,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[208,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[209,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[210,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[211,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[212,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[213,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[214,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[215,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[216,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[217,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[218,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[219,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[220,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[221,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[222,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[223,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[224,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[225,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[226,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[227,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[228,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[229,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[230,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[231,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[232,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[233,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[234,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[235,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[236,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[237,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[238,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[239,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[240,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[241,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[242,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[243,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[244,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[245,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[246,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[247,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[248,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[249,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[250,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[251,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[252,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[253,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[254,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[255,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[256,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[257,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[258,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[259,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[260,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[261,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[262,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[263,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[264,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[265,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[266,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[267,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[268,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n[269,]   FALSE   FALSE   FALSE   FALSE      FALSE      FALSE     FALSE\n       KODE_DES_3 DESA_KEL_1 KODE_12 geometry\n  [1,]      FALSE      FALSE   FALSE    FALSE\n  [2,]      FALSE      FALSE   FALSE    FALSE\n  [3,]      FALSE      FALSE   FALSE    FALSE\n  [4,]      FALSE      FALSE   FALSE    FALSE\n  [5,]      FALSE      FALSE   FALSE    FALSE\n  [6,]      FALSE      FALSE   FALSE    FALSE\n  [7,]      FALSE      FALSE   FALSE    FALSE\n  [8,]      FALSE      FALSE   FALSE    FALSE\n  [9,]      FALSE      FALSE   FALSE    FALSE\n [10,]      FALSE      FALSE   FALSE    FALSE\n [11,]      FALSE      FALSE   FALSE    FALSE\n [12,]      FALSE      FALSE   FALSE    FALSE\n [13,]      FALSE      FALSE   FALSE    FALSE\n [14,]      FALSE      FALSE   FALSE    FALSE\n [15,]      FALSE      FALSE   FALSE    FALSE\n [16,]      FALSE      FALSE   FALSE    FALSE\n [17,]      FALSE      FALSE   FALSE    FALSE\n [18,]      FALSE      FALSE   FALSE    FALSE\n [19,]      FALSE      FALSE   FALSE    FALSE\n [20,]      FALSE      FALSE   FALSE    FALSE\n [21,]      FALSE      FALSE   FALSE    FALSE\n [22,]      FALSE      FALSE   FALSE    FALSE\n [23,]      FALSE      FALSE   FALSE    FALSE\n [24,]      FALSE      FALSE   FALSE    FALSE\n [25,]      FALSE      FALSE   FALSE    FALSE\n [26,]      FALSE      FALSE   FALSE    FALSE\n [27,]      FALSE      FALSE   FALSE    FALSE\n [28,]      FALSE      FALSE   FALSE    FALSE\n [29,]      FALSE      FALSE   FALSE    FALSE\n [30,]      FALSE      FALSE   FALSE    FALSE\n [31,]      FALSE      FALSE   FALSE    FALSE\n [32,]      FALSE      FALSE   FALSE    FALSE\n [33,]      FALSE      FALSE   FALSE    FALSE\n [34,]      FALSE      FALSE   FALSE    FALSE\n [35,]      FALSE      FALSE   FALSE    FALSE\n [36,]      FALSE      FALSE   FALSE    FALSE\n [37,]      FALSE      FALSE   FALSE    FALSE\n [38,]      FALSE      FALSE   FALSE    FALSE\n [39,]      FALSE      FALSE   FALSE    FALSE\n [40,]      FALSE      FALSE   FALSE    FALSE\n [41,]      FALSE      FALSE   FALSE    FALSE\n [42,]      FALSE      FALSE   FALSE    FALSE\n [43,]      FALSE      FALSE   FALSE    FALSE\n [44,]      FALSE      FALSE   FALSE    FALSE\n [45,]      FALSE      FALSE   FALSE    FALSE\n [46,]      FALSE      FALSE   FALSE    FALSE\n [47,]      FALSE      FALSE   FALSE    FALSE\n [48,]      FALSE      FALSE   FALSE    FALSE\n [49,]      FALSE      FALSE   FALSE    FALSE\n [50,]      FALSE      FALSE   FALSE    FALSE\n [51,]      FALSE      FALSE   FALSE    FALSE\n [52,]      FALSE      FALSE   FALSE    FALSE\n [53,]      FALSE      FALSE   FALSE    FALSE\n [54,]      FALSE      FALSE   FALSE    FALSE\n [55,]      FALSE      FALSE   FALSE    FALSE\n [56,]      FALSE      FALSE   FALSE    FALSE\n [57,]      FALSE      FALSE   FALSE    FALSE\n [58,]      FALSE      FALSE   FALSE    FALSE\n [59,]      FALSE      FALSE   FALSE    FALSE\n [60,]      FALSE      FALSE   FALSE    FALSE\n [61,]      FALSE      FALSE   FALSE    FALSE\n [62,]      FALSE      FALSE   FALSE    FALSE\n [63,]      FALSE      FALSE   FALSE    FALSE\n [64,]      FALSE      FALSE   FALSE    FALSE\n [65,]      FALSE      FALSE   FALSE    FALSE\n [66,]      FALSE      FALSE   FALSE    FALSE\n [67,]      FALSE      FALSE   FALSE    FALSE\n [68,]      FALSE      FALSE   FALSE    FALSE\n [69,]      FALSE      FALSE   FALSE    FALSE\n [70,]      FALSE      FALSE   FALSE    FALSE\n [71,]      FALSE      FALSE   FALSE    FALSE\n [72,]      FALSE      FALSE   FALSE    FALSE\n [73,]      FALSE      FALSE   FALSE    FALSE\n [74,]      FALSE      FALSE   FALSE    FALSE\n [75,]      FALSE      FALSE   FALSE    FALSE\n [76,]      FALSE      FALSE   FALSE    FALSE\n [77,]      FALSE      FALSE   FALSE    FALSE\n [78,]      FALSE      FALSE   FALSE    FALSE\n [79,]      FALSE      FALSE   FALSE    FALSE\n [80,]      FALSE      FALSE   FALSE    FALSE\n [81,]      FALSE      FALSE   FALSE    FALSE\n [82,]      FALSE      FALSE   FALSE    FALSE\n [83,]      FALSE      FALSE   FALSE    FALSE\n [84,]      FALSE      FALSE   FALSE    FALSE\n [85,]      FALSE      FALSE   FALSE    FALSE\n [86,]      FALSE      FALSE   FALSE    FALSE\n [87,]      FALSE      FALSE   FALSE    FALSE\n [88,]      FALSE      FALSE   FALSE    FALSE\n [89,]      FALSE      FALSE   FALSE    FALSE\n [90,]      FALSE      FALSE   FALSE    FALSE\n [91,]      FALSE      FALSE   FALSE    FALSE\n [92,]      FALSE      FALSE   FALSE    FALSE\n [93,]      FALSE      FALSE   FALSE    FALSE\n [94,]      FALSE      FALSE   FALSE    FALSE\n [95,]      FALSE      FALSE   FALSE    FALSE\n [96,]      FALSE      FALSE   FALSE    FALSE\n [97,]      FALSE      FALSE   FALSE    FALSE\n [98,]      FALSE      FALSE   FALSE    FALSE\n [99,]      FALSE      FALSE   FALSE    FALSE\n[100,]      FALSE      FALSE   FALSE    FALSE\n[101,]      FALSE      FALSE   FALSE    FALSE\n[102,]      FALSE      FALSE   FALSE    FALSE\n[103,]      FALSE      FALSE   FALSE    FALSE\n[104,]      FALSE      FALSE   FALSE    FALSE\n[105,]      FALSE      FALSE   FALSE    FALSE\n[106,]      FALSE      FALSE   FALSE    FALSE\n[107,]      FALSE      FALSE   FALSE    FALSE\n[108,]      FALSE      FALSE   FALSE    FALSE\n[109,]      FALSE      FALSE   FALSE    FALSE\n[110,]      FALSE      FALSE   FALSE    FALSE\n[111,]      FALSE      FALSE   FALSE    FALSE\n[112,]      FALSE      FALSE   FALSE    FALSE\n[113,]      FALSE      FALSE   FALSE    FALSE\n[114,]      FALSE      FALSE   FALSE    FALSE\n[115,]      FALSE      FALSE   FALSE    FALSE\n[116,]      FALSE      FALSE   FALSE    FALSE\n[117,]      FALSE      FALSE   FALSE    FALSE\n[118,]      FALSE      FALSE   FALSE    FALSE\n[119,]      FALSE      FALSE   FALSE    FALSE\n[120,]      FALSE      FALSE   FALSE    FALSE\n[121,]      FALSE      FALSE   FALSE    FALSE\n[122,]      FALSE      FALSE   FALSE    FALSE\n[123,]      FALSE      FALSE   FALSE    FALSE\n[124,]      FALSE      FALSE   FALSE    FALSE\n[125,]      FALSE      FALSE   FALSE    FALSE\n[126,]      FALSE      FALSE   FALSE    FALSE\n[127,]      FALSE      FALSE   FALSE    FALSE\n[128,]      FALSE      FALSE   FALSE    FALSE\n[129,]      FALSE      FALSE   FALSE    FALSE\n[130,]      FALSE      FALSE   FALSE    FALSE\n[131,]      FALSE      FALSE   FALSE    FALSE\n[132,]      FALSE      FALSE   FALSE    FALSE\n[133,]      FALSE      FALSE   FALSE    FALSE\n[134,]      FALSE      FALSE   FALSE    FALSE\n[135,]      FALSE      FALSE   FALSE    FALSE\n[136,]      FALSE      FALSE   FALSE    FALSE\n[137,]      FALSE      FALSE   FALSE    FALSE\n[138,]      FALSE      FALSE   FALSE    FALSE\n[139,]      FALSE      FALSE   FALSE    FALSE\n[140,]      FALSE      FALSE   FALSE    FALSE\n[141,]      FALSE      FALSE   FALSE    FALSE\n[142,]      FALSE      FALSE   FALSE    FALSE\n[143,]      FALSE      FALSE   FALSE    FALSE\n[144,]      FALSE      FALSE   FALSE    FALSE\n[145,]      FALSE      FALSE   FALSE    FALSE\n[146,]      FALSE      FALSE   FALSE    FALSE\n[147,]      FALSE      FALSE   FALSE    FALSE\n[148,]      FALSE      FALSE   FALSE    FALSE\n[149,]      FALSE      FALSE   FALSE    FALSE\n[150,]      FALSE      FALSE   FALSE    FALSE\n[151,]      FALSE      FALSE   FALSE    FALSE\n[152,]      FALSE      FALSE   FALSE    FALSE\n[153,]      FALSE      FALSE   FALSE    FALSE\n[154,]      FALSE      FALSE   FALSE    FALSE\n[155,]      FALSE      FALSE   FALSE    FALSE\n[156,]      FALSE      FALSE   FALSE    FALSE\n[157,]      FALSE      FALSE   FALSE    FALSE\n[158,]      FALSE      FALSE   FALSE    FALSE\n[159,]      FALSE      FALSE   FALSE    FALSE\n[160,]      FALSE      FALSE   FALSE    FALSE\n[161,]      FALSE      FALSE   FALSE    FALSE\n[162,]      FALSE      FALSE   FALSE    FALSE\n[163,]      FALSE      FALSE   FALSE    FALSE\n[164,]      FALSE      FALSE   FALSE    FALSE\n[165,]      FALSE      FALSE   FALSE    FALSE\n[166,]      FALSE      FALSE   FALSE    FALSE\n[167,]      FALSE      FALSE   FALSE    FALSE\n[168,]      FALSE      FALSE   FALSE    FALSE\n[169,]      FALSE      FALSE   FALSE    FALSE\n[170,]      FALSE      FALSE   FALSE    FALSE\n[171,]      FALSE      FALSE   FALSE    FALSE\n[172,]      FALSE      FALSE   FALSE    FALSE\n[173,]      FALSE      FALSE   FALSE    FALSE\n[174,]      FALSE      FALSE   FALSE    FALSE\n[175,]      FALSE      FALSE   FALSE    FALSE\n[176,]      FALSE      FALSE   FALSE    FALSE\n[177,]      FALSE      FALSE   FALSE    FALSE\n[178,]      FALSE      FALSE   FALSE    FALSE\n[179,]      FALSE      FALSE   FALSE    FALSE\n[180,]      FALSE      FALSE   FALSE    FALSE\n[181,]      FALSE      FALSE   FALSE    FALSE\n[182,]      FALSE      FALSE   FALSE    FALSE\n[183,]      FALSE      FALSE   FALSE    FALSE\n[184,]      FALSE      FALSE   FALSE    FALSE\n[185,]      FALSE      FALSE   FALSE    FALSE\n[186,]      FALSE      FALSE   FALSE    FALSE\n[187,]      FALSE      FALSE   FALSE    FALSE\n[188,]      FALSE      FALSE   FALSE    FALSE\n[189,]      FALSE      FALSE   FALSE    FALSE\n[190,]      FALSE      FALSE   FALSE    FALSE\n[191,]      FALSE      FALSE   FALSE    FALSE\n[192,]      FALSE      FALSE   FALSE    FALSE\n[193,]      FALSE      FALSE   FALSE    FALSE\n[194,]      FALSE      FALSE   FALSE    FALSE\n[195,]      FALSE      FALSE   FALSE    FALSE\n[196,]      FALSE      FALSE   FALSE    FALSE\n[197,]      FALSE      FALSE   FALSE    FALSE\n[198,]      FALSE      FALSE   FALSE    FALSE\n[199,]      FALSE      FALSE   FALSE    FALSE\n[200,]      FALSE      FALSE   FALSE    FALSE\n[201,]      FALSE      FALSE   FALSE    FALSE\n[202,]      FALSE      FALSE   FALSE    FALSE\n[203,]      FALSE      FALSE   FALSE    FALSE\n[204,]      FALSE      FALSE   FALSE    FALSE\n[205,]      FALSE      FALSE   FALSE    FALSE\n[206,]      FALSE      FALSE   FALSE    FALSE\n[207,]      FALSE      FALSE   FALSE    FALSE\n[208,]      FALSE      FALSE   FALSE    FALSE\n[209,]      FALSE      FALSE   FALSE    FALSE\n[210,]      FALSE      FALSE   FALSE    FALSE\n[211,]      FALSE      FALSE   FALSE    FALSE\n[212,]      FALSE      FALSE   FALSE    FALSE\n[213,]      FALSE      FALSE   FALSE    FALSE\n[214,]      FALSE      FALSE   FALSE    FALSE\n[215,]      FALSE      FALSE   FALSE    FALSE\n[216,]      FALSE      FALSE   FALSE    FALSE\n[217,]      FALSE      FALSE   FALSE    FALSE\n[218,]      FALSE      FALSE   FALSE    FALSE\n[219,]      FALSE      FALSE   FALSE    FALSE\n[220,]      FALSE      FALSE   FALSE    FALSE\n[221,]      FALSE      FALSE   FALSE    FALSE\n[222,]      FALSE      FALSE   FALSE    FALSE\n[223,]      FALSE      FALSE   FALSE    FALSE\n[224,]      FALSE      FALSE   FALSE    FALSE\n[225,]      FALSE      FALSE   FALSE    FALSE\n[226,]      FALSE      FALSE   FALSE    FALSE\n[227,]      FALSE      FALSE   FALSE    FALSE\n[228,]      FALSE      FALSE   FALSE    FALSE\n[229,]      FALSE      FALSE   FALSE    FALSE\n[230,]      FALSE      FALSE   FALSE    FALSE\n[231,]      FALSE      FALSE   FALSE    FALSE\n[232,]      FALSE      FALSE   FALSE    FALSE\n[233,]      FALSE      FALSE   FALSE    FALSE\n[234,]      FALSE      FALSE   FALSE    FALSE\n[235,]      FALSE      FALSE   FALSE    FALSE\n[236,]      FALSE      FALSE   FALSE    FALSE\n[237,]      FALSE      FALSE   FALSE    FALSE\n[238,]      FALSE      FALSE   FALSE    FALSE\n[239,]      FALSE      FALSE   FALSE    FALSE\n[240,]      FALSE      FALSE   FALSE    FALSE\n[241,]      FALSE      FALSE   FALSE    FALSE\n[242,]      FALSE      FALSE   FALSE    FALSE\n[243,]       TRUE       TRUE   FALSE    FALSE\n[244,]       TRUE       TRUE   FALSE    FALSE\n[245,]      FALSE      FALSE   FALSE    FALSE\n[246,]      FALSE      FALSE   FALSE    FALSE\n[247,]      FALSE      FALSE   FALSE    FALSE\n[248,]      FALSE      FALSE   FALSE    FALSE\n[249,]      FALSE      FALSE   FALSE    FALSE\n[250,]      FALSE      FALSE   FALSE    FALSE\n[251,]      FALSE      FALSE   FALSE    FALSE\n[252,]      FALSE      FALSE   FALSE    FALSE\n[253,]      FALSE      FALSE   FALSE    FALSE\n[254,]      FALSE      FALSE   FALSE    FALSE\n[255,]      FALSE      FALSE   FALSE    FALSE\n[256,]      FALSE      FALSE   FALSE    FALSE\n[257,]      FALSE      FALSE   FALSE    FALSE\n[258,]      FALSE      FALSE   FALSE    FALSE\n[259,]      FALSE      FALSE   FALSE    FALSE\n[260,]      FALSE      FALSE   FALSE    FALSE\n[261,]      FALSE      FALSE   FALSE    FALSE\n[262,]      FALSE      FALSE   FALSE    FALSE\n[263,]      FALSE      FALSE   FALSE    FALSE\n[264,]      FALSE      FALSE   FALSE    FALSE\n[265,]      FALSE      FALSE   FALSE    FALSE\n[266,]      FALSE      FALSE   FALSE    FALSE\n[267,]      FALSE      FALSE   FALSE    FALSE\n[268,]      FALSE      FALSE   FALSE    FALSE\n[269,]      FALSE      FALSE   FALSE    FALSE\n\n\nFrom the code chunk above, we can see that it is hard to see the output (checking for NA) as it has reached the max number of elements it can print. Thus, the following code chunk below will only show rows with NA values.\n\njkt_village[rowSums(is.na(jkt_village)) > 0,]\n\nSimple feature collection with 2 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.8412 ymin: -6.154036 xmax: 106.8612 ymax: -6.144973\nGeodetic CRS:  WGS 84\n    OBJECT_ID KODE_DESA             DESA   KODE    PROVINSI KAB_KOTA KECAMATAN\n243     25645  31888888     DANAU SUNTER 318888 DKI JAKARTA     <NA>      <NA>\n244     25646  31888888 DANAU SUNTER DLL 318888 DKI JAKARTA     <NA>      <NA>\n    DESA_KELUR JUMLAH_PEN JUMLAH_KK LUAS_WILAY KEPADATAN PERPINDAHA JUMLAH_MEN\n243       <NA>          0         0          0         0          0          0\n244       <NA>          0         0          0         0          0          0\n    PERUBAHAN WAJIB_KTP SILAM KRISTEN KHATOLIK HINDU BUDHA KONGHUCU KEPERCAYAA\n243         0         0     0       0        0     0     0        0          0\n244         0         0     0       0        0     0     0        0          0\n    PRIA WANITA BELUM_KAWI KAWIN CERAI_HIDU CERAI_MATI U0 U5 U10 U15 U20 U25\n243    0      0          0     0          0          0  0  0   0   0   0   0\n244    0      0          0     0          0          0  0  0   0   0   0   0\n    U30 U35 U40 U45 U50 U55 U60 U65 U70 U75 TIDAK_BELU BELUM_TAMA TAMAT_SD SLTP\n243   0   0   0   0   0   0   0   0   0   0          0          0        0    0\n244   0   0   0   0   0   0   0   0   0   0          0          0        0    0\n    SLTA DIPLOMA_I DIPLOMA_II DIPLOMA_IV STRATA_II STRATA_III BELUM_TIDA\n243    0         0          0          0         0          0          0\n244    0         0          0          0         0          0          0\n    APARATUR_P TENAGA_PEN WIRASWASTA PERTANIAN NELAYAN AGAMA_DAN PELAJAR_MA\n243          0          0          0         0       0         0          0\n244          0          0          0         0       0         0          0\n    TENAGA_KES PENSIUNAN LAINNYA GENERATED KODE_DES_1 BELUM_ MENGUR_ PELAJAR_\n243          0         0       0      <NA>       <NA>      0       0        0\n244          0         0       0      <NA>       <NA>      0       0        0\n    PENSIUNA_1 PEGAWAI_ TENTARA KEPOLISIAN PERDAG_ PETANI PETERN_ NELAYAN_1\n243          0        0       0          0       0      0       0         0\n244          0        0       0          0       0      0       0         0\n    INDUSTR_ KONSTR_ TRANSP_ KARYAW_ KARYAW1 KARYAW1_1 KARYAW1_12 BURUH BURUH_\n243        0       0       0       0       0         0          0     0      0\n244        0       0       0       0       0         0          0     0      0\n    BURUH1 BURUH1_1 PEMBANT_ TUKANG TUKANG_1 TUKANG_12 TUKANG__13 TUKANG__14\n243      0        0        0      0        0         0          0          0\n244      0        0        0      0        0         0          0          0\n    TUKANG__15 TUKANG__16 TUKANG__17 PENATA PENATA_ PENATA1_1 MEKANIK SENIMAN_\n243          0          0          0      0       0         0       0        0\n244          0          0          0      0       0         0       0        0\n    TABIB PARAJI_ PERANCA_ PENTER_ IMAM_M PENDETA PASTOR WARTAWAN USTADZ JURU_M\n243     0       0        0       0      0       0      0        0      0      0\n244     0       0        0       0      0       0      0        0      0      0\n    PROMOT ANGGOTA_ ANGGOTA1 ANGGOTA1_1 PRESIDEN WAKIL_PRES ANGGOTA1_2\n243      0        0        0          0        0          0          0\n244      0        0        0          0        0          0          0\n    ANGGOTA1_3 DUTA_B GUBERNUR WAKIL_GUBE BUPATI WAKIL_BUPA WALIKOTA WAKIL_WALI\n243          0      0        0          0      0          0        0          0\n244          0      0        0          0      0          0        0          0\n    ANGGOTA1_4 ANGGOTA1_5 DOSEN GURU PILOT PENGACARA_ NOTARIS ARSITEK AKUNTA_\n243          0          0     0    0     0          0       0       0       0\n244          0          0     0    0     0          0       0       0       0\n    KONSUL_ DOKTER BIDAN PERAWAT APOTEK_ PSIKIATER PENYIA_ PENYIA1 PELAUT\n243       0      0     0       0       0         0       0       0      0\n244       0      0     0       0       0         0       0       0      0\n    PENELITI SOPIR PIALAN PARANORMAL PEDAGA_ PERANG_ KEPALA_ BIARAW_ WIRASWAST_\n243        0     0      0          0       0       0       0       0          0\n244        0     0      0          0       0       0       0       0          0\n    LAINNYA_12 LUAS_DESA KODE_DES_3 DESA_KEL_1 KODE_12\n243          0         0       <NA>       <NA>       0\n244          0         0       <NA>       <NA>       0\n                          geometry\n243 MULTIPOLYGON (((106.8612 -6...\n244 MULTIPOLYGON (((106.8504 -6...\n\n\nFrom the above output, we can see that there are 2 rows with missing values. The columns involved are; KAB_KOTA, KECAMANTAN & DESA_KELUAR respectively. What are these Indonesian words? Thanks to Uncle Google, the translation for those words are; city, subdistrict & village respectively. The code chunk below will remove the rows with NA value. As mentioned in Prof Kam’s Task, we are focusing on the sub-district level, thus we need to remove the NA values found in this column (DESA_KELUAR).\n\njkt_village <- na.omit(jkt_village, c('DESA_KELUAR') )\n\nTo check for NA values again after removing.\n\njkt_village[rowSums(is.na(jkt_village)) > 0,]\n\nSimple feature collection with 0 features and 161 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  WGS 84\n  [1] OBJECT_ID  KODE_DESA  DESA       KODE       PROVINSI   KAB_KOTA  \n  [7] KECAMATAN  DESA_KELUR JUMLAH_PEN JUMLAH_KK  LUAS_WILAY KEPADATAN \n [13] PERPINDAHA JUMLAH_MEN PERUBAHAN  WAJIB_KTP  SILAM      KRISTEN   \n [19] KHATOLIK   HINDU      BUDHA      KONGHUCU   KEPERCAYAA PRIA      \n [25] WANITA     BELUM_KAWI KAWIN      CERAI_HIDU CERAI_MATI U0        \n [31] U5         U10        U15        U20        U25        U30       \n [37] U35        U40        U45        U50        U55        U60       \n [43] U65        U70        U75        TIDAK_BELU BELUM_TAMA TAMAT_SD  \n [49] SLTP       SLTA       DIPLOMA_I  DIPLOMA_II DIPLOMA_IV STRATA_II \n [55] STRATA_III BELUM_TIDA APARATUR_P TENAGA_PEN WIRASWASTA PERTANIAN \n [61] NELAYAN    AGAMA_DAN  PELAJAR_MA TENAGA_KES PENSIUNAN  LAINNYA   \n [67] GENERATED  KODE_DES_1 BELUM_     MENGUR_    PELAJAR_   PENSIUNA_1\n [73] PEGAWAI_   TENTARA    KEPOLISIAN PERDAG_    PETANI     PETERN_   \n [79] NELAYAN_1  INDUSTR_   KONSTR_    TRANSP_    KARYAW_    KARYAW1   \n [85] KARYAW1_1  KARYAW1_12 BURUH      BURUH_     BURUH1     BURUH1_1  \n [91] PEMBANT_   TUKANG     TUKANG_1   TUKANG_12  TUKANG__13 TUKANG__14\n [97] TUKANG__15 TUKANG__16 TUKANG__17 PENATA     PENATA_    PENATA1_1 \n[103] MEKANIK    SENIMAN_   TABIB      PARAJI_    PERANCA_   PENTER_   \n[109] IMAM_M     PENDETA    PASTOR     WARTAWAN   USTADZ     JURU_M    \n[115] PROMOT     ANGGOTA_   ANGGOTA1   ANGGOTA1_1 PRESIDEN   WAKIL_PRES\n[121] ANGGOTA1_2 ANGGOTA1_3 DUTA_B     GUBERNUR   WAKIL_GUBE BUPATI    \n[127] WAKIL_BUPA WALIKOTA   WAKIL_WALI ANGGOTA1_4 ANGGOTA1_5 DOSEN     \n[133] GURU       PILOT      PENGACARA_ NOTARIS    ARSITEK    AKUNTA_   \n[139] KONSUL_    DOKTER     BIDAN      PERAWAT    APOTEK_    PSIKIATER \n[145] PENYIA_    PENYIA1    PELAUT     PENELITI   SOPIR      PIALAN    \n[151] PARANORMAL PEDAGA_    PERANG_    KEPALA_    BIARAW_    WIRASWAST_\n[157] LAINNYA_12 LUAS_DESA  KODE_DES_3 DESA_KEL_1 KODE_12    geometry  \n<0 rows> (or 0-length row.names)\n\n\n\n\n\n4.2.1.2 Changing/Transforming the Projected Coordinate System\nReferring to Section 4.2.1’s output, the projected coordinate system is WGS84, the code chunk below will change the projected coordinate system to ‘DGN 95’. As mentioned in this website, the EPSG code for DGN95 / Indonesia TM-3 zone 54.1 is “23845”.\n\njkt_village <- st_transform(jkt_village, 23845)\n\nst_crs(jkt_village)\n\nCoordinate Reference System:\n  User input: EPSG:23845 \n  wkt:\nPROJCRS[\"DGN95 / Indonesia TM-3 zone 54.1\",\n    BASEGEOGCRS[\"DGN95\",\n        DATUM[\"Datum Geodesi Nasional 1995\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4755]],\n    CONVERSION[\"Indonesia TM-3 zone 54.1\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",139.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9999,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",200000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",1500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre.\"],\n        AREA[\"Indonesia - onshore east of 138°E.\"],\n        BBOX[-9.19,138,-1.49,141.01]],\n    ID[\"EPSG\",23845]]\n\n\nFrom the above output, we can see that the projected coordinate system has been changed/transformed to what we wanted.\n\n\n4.2.1.3 Omitting unnecessary columns\nReferring to the note in section 3.2, it is also needed to retain the first nine fields in the DKI Jakarta sf data frame.\n\njkt_village <- jkt_village[, 0:9]\n\n\n\n4.2.1.4 Renaming Columns to English\nAs seen earlier in section 4.2.2.1 & 4.2.2.2, it was hard for us to understand the langauge used in the dataset. The code chunk below will convert the column names for readability\n\ncolnames(jkt_village) <- c(\"Object_ID\", \"Village_Code\", \"Village\", \"Code\", \"Province\", \"City\", \"District\", \"Sub_District\", \"Total_Population\", \"geometry\")\n\nThe code chunk below is used to show the summary of the dataframe.\n\nglimpse(jkt_village)\n\nRows: 267\nColumns: 10\n$ Object_ID        <dbl> 25477, 25478, 25397, 25400, 25378, 25379, 25390, 2538…\n$ Village_Code     <chr> \"3173031006\", \"3173031007\", \"3171031003\", \"3171031006…\n$ Village          <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU…\n$ Code             <dbl> 317303, 317303, 317103, 317103, 310101, 310101, 31710…\n$ Province         <chr> \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAK…\n$ City             <chr> \"JAKARTA BARAT\", \"JAKARTA BARAT\", \"JAKARTA PUSAT\", \"J…\n$ District         <chr> \"TAMAN SARI\", \"TAMAN SARI\", \"KEMAYORAN\", \"KEMAYORAN\",…\n$ Sub_District     <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU…\n$ Total_Population <dbl> 21609, 9069, 29085, 41913, 6947, 7059, 15793, 5891, 3…\n$ geometry         <MULTIPOLYGON [m]> MULTIPOLYGON (((-3626874 69..., MULTIPOL…\n\n\nFrom the above output, we can see that the columns have been renamed into English.\n\n\n4.2.1.5 Data Visualization\nAfter processing the data, it is good to visualize what we have.\n\nCity <- tm_shape(jkt_village) +\n  tm_polygons(\"City\") +\n  tm_layout(\"City\")\n\n\ntm_view(City)\n\n$tm_layout\n$tm_layout$alpha\n\n\n\n\n\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\"\n\n\nFrom the above output, we can see that there are many small islands (in orange colour) outside of Jakarta (which is not of our interest). In specific, “KEPULAUAN SERIBU” does not belong to our area of interest, thus we can remove it from our data.\n\njkt_village <- filter(jkt_village, City != \"KEPULAUAN SERIBU\")\n\nChecking for the column KAB_KOTA (City) to ensure that the filter has been removed.\n\nunique(jkt_village$\"City\")\n\n[1] \"JAKARTA BARAT\"   \"JAKARTA PUSAT\"   \"JAKARTA UTARA\"   \"JAKARTA TIMUR\"  \n[5] \"JAKARTA SELATAN\"\n\n\nUpdating earlier created city variable to reflect islands that are removed.\n\n#update city variable to reflect changes of removed cities\nCity <- tm_shape(jkt_village) +\n  tm_polygons(\"City\") +\n  tm_layout(\"City of Jarkata\")\n\nPlotting Jarkata using tm_view() to show the output.\n\ntm_view(City)\n\n$tm_layout\n$tm_layout$alpha\n\n\n\n\n\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\"\n\n\n\n\n\n4.2.2 Aspatial Data\n\n4.2.2.1 Importing Aspatial Data\nFor Aspatial data, end of every month was chosen from July 2021 to June 2022 (as mentioned in the requirements). In order to read a xlsx file, readxl library’s read_xlsx() will be used. Together with glimpse, we will be able to see a summary output of each data frame.\nSince there are multiple xlsx files for the vaccination data, there is a need to understand the data inside each xlsx file. The below code chunks will offer us an insight of what is in each file.\nJuly 2021\n\nJul2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Juli 2021).xlsx\")\n\nglimpse(Jul2021)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 4441501, 12333, 13875, 18…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 4499710, 11614, 15506, 10…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 1663218, 4181, 4798, 3658…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 6162928, 15795, 20304, 14…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 502579, 1230, 2012, 865, …\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 440910, 1069, 1729, 701, …\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 943489, 2299, 3741, 1566,…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1052883, 3333, 2586, 2837…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 666009, 2158, 1374, 1761,…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 1718892, 5491, 3960, 4598…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 56660, 78, 122, 174, 71, …\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 38496, 51, 84, 106, 57, 7…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 95156, 129, 206, 280, 128…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 76397, 101, 90, 215, 73, …\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 67484, 91, 82, 192, 67, 3…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 143881, 192, 172, 407, 14…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 2279398, 5506, 9012, 5408…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 446028, 789, 1519, 897, 4…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 2725426, 6295, 10531, 630…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 531793, 1366, 1684, 1261,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 4291, 23, 10, 1, 1, 8, 6,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 536084, 1389, 1694, 1262,…\n\n\nAugust 2021\n\nAug2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Agustus 2021).xlsx\")\n\nglimpse(Aug2021)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 3277484, 9191, 10400, 125…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 5663727, 14756, 18981, 16…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 3412906, 8935, 10470, 776…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 9076633, 23691, 29451, 24…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 535001, 1300, 2104, 1043,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 468678, 1140, 1849, 780, …\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1003679, 2440, 3953, 1823…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1393352, 4194, 3643, 4293…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1007921, 3135, 2519, 2548…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2401273, 7329, 6162, 6841…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 65340, 89, 137, 188, 80, …\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 53995, 77, 119, 163, 71, …\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 119335, 166, 256, 351, 15…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 79502, 106, 92, 229, 78, …\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 72588, 96, 83, 203, 74, 3…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 152090, 202, 175, 432, 15…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 2941837, 7385, 11033, 872…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 1377349, 3277, 4541, 3010…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 4319186, 10662, 15574, 11…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 648695, 1682, 1972, 2090,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 432375, 1210, 1359, 1062,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1081070, 2892, 3331, 3152…\n\n\nSeptember 2021\n\nSep2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 September 2021).xlsx\")\n\nglimpse(Sep2021)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 2235772, 6688, 7581, 8708…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 6705439, 17259, 21800, 20…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 5171697, 13376, 16438, 14…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 11877136, 30635, 38238, 3…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 587215, 1417, 2270, 1263,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 518944, 1263, 2033, 988, …\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1106159, 2680, 4303, 2251…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1468382, 3938, 3883, 4540…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1305200, 3454, 3356, 3903…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2773582, 7392, 7239, 8443…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 84049, 158, 173, 248, 100…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 75657, 148, 157, 229, 91,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 159706, 306, 330, 477, 19…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 112296, 140, 135, 329, 11…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 104381, 124, 125, 300, 11…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 216677, 264, 260, 629, 23…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 3677943, 9564, 12969, 114…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 2548057, 6788, 8944, 7023…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 6226000, 16352, 21913, 18…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 775554, 2042, 2370, 2510,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 619458, 1599, 1823, 1969,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1395012, 3641, 4193, 4479…\n\n\nOctober 2021\n\nOct2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Oktober 2021).xlsx\")\n\nglimpse(Oct2021)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1880524, 5991, 6557, 7586…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7060687, 17956, 22824, 21…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 5729001, 14504, 18185, 16…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 12789688, 32460, 41009, 3…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 608940, 1447, 2336, 1322,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 543483, 1296, 2104, 1104,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1152423, 2743, 4440, 2426…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1484292, 3972, 3917, 4595…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1349105, 3555, 3465, 4072…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2833397, 7527, 7382, 8667…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 86323, 165, 175, 259, 101…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 81721, 160, 168, 245, 96,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 168044, 325, 343, 504, 19…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 113911, 140, 136, 338, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 107383, 128, 128, 310, 12…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 221294, 268, 264, 648, 24…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 3948804, 10101, 13744, 12…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 2949023, 7567, 10266, 849…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 6897827, 17668, 24010, 20…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 818417, 2131, 2516, 2672,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 698286, 1798, 2054, 2220,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1516703, 3929, 4570, 4892…\n\n\nNovember 2021\n\nNov2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 November 2021).xlsx\")\n\nglimpse(Nov2021)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1723821, 5527, 5986, 6802…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7217390, 18420, 23395, 22…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6172636, 15466, 19404, 18…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 13390026, 33886, 42799, 4…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 624751, 1473, 2391, 1385,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 571830, 1351, 2192, 1224,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1196581, 2824, 4583, 2609…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1487961, 3980, 3926, 4614…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1369705, 3601, 3516, 4146…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2857666, 7581, 7442, 8760…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 86710, 169, 176, 259, 101…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 83506, 163, 172, 252, 98,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 170216, 332, 348, 511, 19…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 114292, 140, 135, 341, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 109221, 128, 128, 323, 12…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 223513, 268, 263, 664, 24…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4069550, 10473, 14182, 12…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3304266, 8329, 11215, 978…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 7373816, 18802, 25397, 22…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 834126, 2185, 2585, 2733,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 734108, 1894, 2181, 2355,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1568234, 4079, 4766, 5088…\n\n\nDecember 2021\n\nDec2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Desember 2021).xlsx\")\n\nglimpse(Dec2021)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1623736, 5062, 5626, 6335…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7317475, 18885, 23755, 22…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6370175, 15996, 20026, 18…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 13687650, 34881, 43781, 4…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 634516, 1520, 2427, 1418,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 586624, 1375, 2247, 1294,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1221140, 2895, 4674, 2712…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1485857, 3981, 3922, 4603…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1372180, 3607, 3521, 4153…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2858037, 7588, 7443, 8756…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 86905, 169, 176, 260, 101…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 83995, 164, 174, 253, 99,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 170900, 333, 350, 513, 20…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 114612, 140, 136, 345, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 110119, 128, 129, 327, 12…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 224731, 268, 265, 672, 24…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4150113, 10841, 14450, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3467714, 8782, 11715, 104…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 7617827, 19623, 26165, 23…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 845472, 2234, 2644, 2783,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 749543, 1940, 2240, 2401,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1595015, 4174, 4884, 5184…\n\n\nJanuary 2022\n\nJan2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Januari 2022).xlsx\")\n\nglimpse(Jan2022)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1538221, 4647, 5388, 5967…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7402990, 19300, 23993, 23…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6516678, 16477, 20463, 19…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 13919668, 35777, 44456, 4…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 644280, 1564, 2459, 1446,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 598309, 1399, 2291, 1327,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1242589, 2963, 4750, 2773…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1478564, 3971, 3900, 4592…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1369268, 3604, 3506, 4158…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2847832, 7575, 7406, 8750…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 88073, 177, 178, 262, 102…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 85942, 171, 179, 260, 99,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 174015, 348, 357, 522, 20…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 115123, 140, 135, 348, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 111364, 130, 130, 331, 12…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 226487, 270, 265, 679, 24…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4215232, 11158, 14620, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3579348, 9173, 12024, 109…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 7794580, 20331, 26644, 24…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 861718, 2290, 2701, 2840,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 772447, 2000, 2333, 2488,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1634165, 4290, 5034, 5328…\n\n\nFebruary 2022\n\nFeb2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (27 Februari 2022).xlsx\")\n\nglimpse(Feb2022)\n\nRows: 268\nColumns: 27\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1517196, 4592, 5319, 5903…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7424015, 19355, 24062, 23…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6590380, 16687, 20738, 19…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 14014395, 36042, 44800, 4…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 646481, 1567, 2465, 1451,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 604751, 1418, 2336, 1348,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1251232, 2985, 4801, 2799…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1478545, 3971, 3899, 4590…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1371190, 3614, 3512, 4161…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2849735, 7585, 7411, 8751…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 88088, 178, 178, 262, 102…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 86046, 171, 179, 260, 99,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 174134, 349, 357, 522, 20…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 115186, 140, 135, 348, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 111623, 130, 130, 331, 12…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 226809, 270, 265, 679, 24…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4232389, 11200, 14670, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3638187, 9327, 12227, 111…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 7870576, 20527, 26897, 24…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 863326, 2299, 2715, 2845,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 778583, 2027, 2354, 2512,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1641909, 4326, 5069, 5357…\n\n\nMarch 2022\n\nMar2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Maret 2022).xlsx\")\n\nglimpse(Mar2022)\n\nRows: 268\nColumns: 34\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1482471, 4522, 5186, 5780…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7458740, 19425, 24195, 23…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6682911, 16909, 21000, 20…\n$ `JUMLAH\\r\\nDOSIS 3`                          <dbl> 1836511, 3934, 6122, 4124…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 15978162, 40268, 51317, 4…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 649601, 1574, 2475, 1457,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 610754, 1433, 2350, 1366,…\n$ `LANSIA\\r\\nDOSIS 3`                          <dbl> 610754, 1433, 2350, 1366,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1533150, 3545, 6052, 3283…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1481237, 3980, 3910, 4604…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1375686, 3634, 3523, 4175…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 3`                  <dbl> 200536, 579, 660, 453, 24…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 3057459, 8193, 8093, 9232…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 88150, 178, 178, 262, 102…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 86122, 173, 179, 260, 99,…\n$ `GOTONG ROYONG\\r\\nDOSIS 3`                   <dbl> 19460, 22, 53, 57, 19, 41…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 193732, 373, 410, 579, 22…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 115527, 140, 135, 348, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 112027, 130, 130, 331, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 3`                <dbl> 84640, 103, 94, 239, 83, …\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 312194, 373, 359, 918, 32…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4258776, 11250, 14773, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3715052, 9502, 12436, 114…\n$ `TAHAPAN 3\\r\\nDOSIS 3`                       <dbl> 1248211, 2671, 4048, 2891…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 9222039, 23423, 31257, 28…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 865449, 2303, 2724, 2851,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 783270, 2037, 2382, 2541,…\n$ `REMAJA\\r\\nDOSIS 3`                          <dbl> 10869, 21, 40, 24, 7, 28,…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1659588, 4361, 5146, 5416…\n\n\nApril 2022\n\nApr2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 April 2022).xlsx\")\n\nglimpse(Apr2022)\n\nRows: 268\nColumns: 34\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1453423, 4449, 5101, 5699…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7487788, 19498, 24280, 23…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6727002, 17027, 21134, 20…\n$ `JUMLAH\\r\\nDOSIS 3`                          <dbl> 2720796, 6568, 8915, 6491…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 16935586, 43093, 54329, 5…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 651696, 1579, 2481, 1458,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 613044, 1441, 2360, 1376,…\n$ `LANSIA\\r\\nDOSIS 3`                          <dbl> 613044, 1441, 2360, 1376,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1599248, 3750, 6301, 3425…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1483630, 3983, 3920, 4611…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1378338, 3640, 3529, 4187…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 3`                  <dbl> 366145, 1099, 1096, 941, …\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 3228113, 8722, 8545, 9739…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 88200, 178, 178, 262, 102…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 86184, 173, 179, 260, 99,…\n$ `GOTONG ROYONG\\r\\nDOSIS 3`                   <dbl> 38179, 71, 95, 120, 41, 7…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 212563, 422, 452, 642, 24…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 115623, 140, 135, 348, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 112253, 130, 130, 333, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 3`                <dbl> 89811, 109, 105, 259, 91,…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 317687, 379, 370, 940, 33…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4281576, 11308, 14842, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3750893, 9596, 12545, 116…\n$ `TAHAPAN 3\\r\\nDOSIS 3`                       <dbl> 1866526, 4503, 6084, 4519…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 9898995, 25407, 33471, 29…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 867063, 2310, 2724, 2858,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 786290, 2047, 2391, 2557,…\n$ `REMAJA\\r\\nDOSIS 3`                          <dbl> 25627, 56, 75, 61, 19, 71…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1678980, 4413, 5190, 5476…\n\n\nMay 2022\n\nMay2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Mei 2022).xlsx\")\n\nglimpse(May2022)\n\nRows: 268\nColumns: 34\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1445540, 4440, 5084, 5676…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7495671, 19507, 24297, 23…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6743764, 17077, 21182, 20…\n$ `JUMLAH\\r\\nDOSIS 3`                          <dbl> 2885301, 7022, 9484, 7030…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 17124736, 43606, 54963, 5…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 652411, 1580, 2482, 1461,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 614259, 1442, 2367, 1378,…\n$ `LANSIA\\r\\nDOSIS 3`                          <dbl> 614259, 1442, 2367, 1378,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1615382, 3804, 6385, 3468…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1483896, 3982, 3920, 4612…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1379577, 3645, 3534, 4192…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 3`                  <dbl> 395504, 1185, 1185, 1033,…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 3258977, 8812, 8639, 9837…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 88234, 179, 178, 262, 102…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 86232, 173, 179, 260, 99,…\n$ `GOTONG ROYONG\\r\\nDOSIS 3`                   <dbl> 43402, 100, 111, 132, 53,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 217868, 452, 468, 654, 25…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 115658, 140, 135, 348, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 112327, 130, 131, 333, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 3`                <dbl> 91061, 110, 108, 262, 93,…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 319046, 380, 374, 943, 33…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4287820, 11318, 14850, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3763773, 9632, 12577, 116…\n$ `TAHAPAN 3\\r\\nDOSIS 3`                       <dbl> 1975879, 4777, 6455, 4893…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 10027472, 25727, 33882, 3…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 867652, 2308, 2732, 2858,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 787596, 2055, 2394, 2562,…\n$ `REMAJA\\r\\nDOSIS 3`                          <dbl> 30743, 68, 89, 81, 26, 80…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1685991, 4431, 5215, 5501…\n\n\nJune 2022\n\nJun2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 Juni 2022).xlsx\")\n\nglimpse(Jun2022)\n\nRows: 268\nColumns: 34\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 8941211, 23947, 29381, 29…\n$ `BELUM VAKSIN`                               <dbl> 1431393, 4402, 5041, 5632…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 7509818, 19545, 24340, 23…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 6756584, 17106, 21213, 20…\n$ `JUMLAH\\r\\nDOSIS 3`                          <dbl> 3031594, 7369, 10086, 739…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 17297996, 44020, 55639, 5…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 653401, 1582, 2483, 1466,…\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 615341, 1447, 2368, 1382,…\n$ `LANSIA\\r\\nDOSIS 3`                          <dbl> 615341, 1447, 2368, 1382,…\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 1630553, 3848, 6464, 3495…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 1484892, 3982, 3924, 4613…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 1380501, 3646, 3536, 4195…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 3`                  <dbl> 420795, 1244, 1265, 1104,…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 3286188, 8872, 8725, 9912…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 88277, 180, 178, 262, 102…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 86277, 174, 179, 260, 99,…\n$ `GOTONG ROYONG\\r\\nDOSIS 3`                   <dbl> 45143, 104, 115, 135, 56,…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 219697, 458, 472, 657, 25…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 115697, 140, 135, 348, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 112383, 130, 131, 333, 12…\n$ `TENAGA KESEHATAN\\r\\nDOSIS 3`                <dbl> 91999, 113, 108, 266, 95,…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 320079, 383, 374, 947, 33…\n$ `TAHAPAN 3\\r\\nDOSIS 1`                       <dbl> 4298906, 11352, 14884, 13…\n$ `TAHAPAN 3\\r\\nDOSIS 2`                       <dbl> 3773713, 9652, 12601, 116…\n$ `TAHAPAN 3\\r\\nDOSIS 3`                       <dbl> 2075349, 5009, 6872, 5151…\n$ `TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN`        <dbl> 10147968, 26013, 34357, 3…\n$ `REMAJA\\r\\nDOSIS 1`                          <dbl> 868645, 2309, 2736, 2862,…\n$ `REMAJA\\r\\nDOSIS 2`                          <dbl> 788369, 2057, 2398, 2564,…\n$ `REMAJA\\r\\nDOSIS 3`                          <dbl> 36497, 80, 113, 95, 29, 1…\n$ `REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN`           <dbl> 1693511, 4446, 5247, 5521…\n\n\nFrom the above outputs, we can see that there are 27 Columns for the following range:\n\nJuly ’22 to Feb ’23\n\nWhereas for the following range of months there are 34 Columns:\n\nMar ’23 to Jun ’23\n\nWhat are the takeaways from the above output? In order to calculate vaccination rate at a sub-district level, we need to use SASARAN, BELUM VAKSIN & KELURAHAN Columns. Thanks to Uncle Google once again, the respective translation for the above column words are; Target, Not Yet Vaccinated & Sub-district.\n\n\n4.2.2.2 Aspatial Pre-Processing\nIt is a good practice that the raw dataframe does not get modified in case we need a version to revert to. Also, because there are multiple timestamps (e.g. July ’22 to Jun ’23) we will be needing an additional Date column so that the final dataframe would have the necessary data. Thus, the following code chunk (a created function) will retrieve the filename and create the necessary columns.\n\naspatial_data_process <- function(file){\n  #excluding first row as it is the name of the column.\n  vaccination_jkt <- read_xlsx(file)[-1,]\n  #finding the index for the filename to get the month name\n  start_index <- which(strsplit(file, \"\")[[1]] == \"(\")\n  end_index <- which(strsplit(file, \"\")[[1]] == \")\")\n  #create date column\n  vaccination_jkt$Date <- substr(file, start_index+1, end_index-1)\n \n  vaccination_jkt <- vaccination_jkt %>% \n    select(\"Date\", \n           \"KELURAHAN\", \n           \"SASARAN\", \n           \"BELUM VAKSIN\")\n \n  return(vaccination_jkt)\n}\n\nIt would be more efficient if we could store all the files needed into a single variable and just run the function once. The below code chunk will use list.files() function to store all the related xlsx files into a variable called listfiles and lapply() to apply the earlier written function to all the items in the list.\n\n#reference to https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/list.files\n\n#in the data/aspatial directory, find all the files with the extension of \"xlsx\" and add the files to listfile variable\nlistfiles <-list.files(path = \"data/aspatial\", pattern = \"*.xlsx\", full.names=TRUE)\n\n#for every element in list files, aspatial_data_process function be executed\ndataframelist <- lapply(seq_along(listfiles), function(x) aspatial_data_process(listfiles[x]))\n\nConverting the dataframe into dataframe with ldply() function.\n\njkt_vaccination <- ldply(dataframelist, data.frame)\n\nDisplay summary of the dataframe that we wanted.\n\nglimpse(jkt_vaccination)\n\nRows: 3,204\nColumns: 4\n$ Date         <chr> \"27 Februari 2022\", \"27 Februari 2022\", \"27 Februari 2022…\n$ KELURAHAN    <chr> \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER\", \"BAMBU A…\n$ SASARAN      <dbl> 23947, 29381, 29074, 9752, 26285, 21566, 23886, 47898, 21…\n$ BELUM.VAKSIN <dbl> 4592, 5319, 5903, 1649, 4030, 3950, 3344, 9382, 3772, 753…\n\n\nFrom the above output we can see that the date is in a string format. However, we want the date to be in a date format. The code chunk below will convert it to the date format.\n\nSys.setlocale(\"LC_TIME\", \"id_ID.utf8\")\n\n[1] \"id_ID.utf8\"\n\n\n\njkt_vaccination$Date <- c(jkt_vaccination$Date) %>%\n  as.Date(jkt_vaccination$Date, format = \"%d %B %Y\", locale = \"id_ID.utf8\")\n\nglimpse(jkt_vaccination$Date)\n\n Date[1:3204], format: \"2022-02-27\" \"2022-02-27\" \"2022-02-27\" \"2022-02-27\" \"2022-02-27\" ...\n\n\n\n\n4.2.2.3 Renaming Dataframe Columns to English\nLikewise, it would be easier for us to rename the column names to English as in future if we want to process the data, we would not have to scratch our heads to think of the spelling.\n\ncolnames(jkt_vaccination) <- c(\"Date\", \"Sub_District\", \"Target\", \"Not_Yet_Vaccinated\")\n\nglimpse(jkt_vaccination)\n\nRows: 3,204\nColumns: 4\n$ Date               <date> 2022-02-27, 2022-02-27, 2022-02-27, 2022-02-27, 20…\n$ Sub_District       <chr> \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER\", \"B…\n$ Target             <dbl> 23947, 29381, 29074, 9752, 26285, 21566, 23886, 478…\n$ Not_Yet_Vaccinated <dbl> 4592, 5319, 5903, 1649, 4030, 3950, 3344, 9382, 377…\n\n\nFrom the above output, we can see that the column names have been translated into English.\n\n\n4.2.2.4 Checking for missing values\nUnlike the data pre-processing we did earlier in 4.2.1.1.1, there isn’t a need for us to check for invalid geometries as based on the output for section 4.2.2.3, there isn’t a geometry column. However, there is still a need to check for missing values as missing values can have a significant impact on our data analysis.\n\njkt_vaccination[rowSums(is.na(jkt_vaccination))> 0,]\n\n[1] Date               Sub_District       Target             Not_Yet_Vaccinated\n<0 rows> (or 0-length row.names)\n\n\nThe above output shows that there are no missing values."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#joining-of-geospatial-and-aspatial-dataframe",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#joining-of-geospatial-and-aspatial-dataframe",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "5.1 Joining of Geospatial and Aspatial Dataframe",
    "text": "5.1 Joining of Geospatial and Aspatial Dataframe\nChecking for column names to see which columns we can use to join both dataframes together.\n\ncolnames(jkt_village)\n\n [1] \"Object_ID\"        \"Village_Code\"     \"Village\"          \"Code\"            \n [5] \"Province\"         \"City\"             \"District\"         \"Sub_District\"    \n [9] \"Total_Population\" \"geometry\"        \n\n\n\ncolnames(jkt_vaccination)\n\n[1] \"Date\"               \"Sub_District\"       \"Target\"            \n[4] \"Not_Yet_Vaccinated\"\n\n\nFrom the above output, we can see that the common column is Sub_District. Thus, we can use left_join() to join these two dataframes together.\n\njkt_combined_vaccination <- left_join(jkt_village, jkt_vaccination,\n                              by=c(\"Sub_District\"=\"Sub_District\"))\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order for left_join() to work, there is a need for one or more matching columns between two dataframe."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#exploratory-data-analysis-for-newly-merged-dataframe",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#exploratory-data-analysis-for-newly-merged-dataframe",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "5.2 Exploratory Data Analysis for Newly Merged Dataframe",
    "text": "5.2 Exploratory Data Analysis for Newly Merged Dataframe\n\nTotal_Population = tm_shape(jkt_combined_vaccination)+\n  tm_fill(\"Total_Population\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Total Population in Jakarta\")\n\nNot_Yet_Vaccinated = tm_shape(jkt_combined_vaccination)+\n  tm_fill(\"Not_Yet_Vaccinated\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Not Yet Vaccinated in Jakarta\")\n\nTarget = tm_shape(jkt_combined_vaccination)+\n  tm_fill(\"Target\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Target Count for Jarkata\")\n\ntmap_arrange(Total_Population,Not_Yet_Vaccinated,Target)\n\n\n\n\nFrom the above output we can see that there are missing values for “Not_Yet_Vaccinated” and “Target”."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#checking-for-missing-values-2",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#checking-for-missing-values-2",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "5.3 Checking for Missing Values",
    "text": "5.3 Checking for Missing Values\nEarlier in sections 4.2.2.4 & 4.2.1.1.2, we have already checked and omitted for NA values. This would mean that another factor that is contributing to this “missing” fields is mismatched values during the left_join() process earlier.\nThe below code chunk will check for values that are not in each other dataframes.\n\nunique(jkt_vaccination$Sub_District[!(jkt_vaccination$Sub_District %in% jkt_village$Sub_District)])\n\n [1] \"BALE KAMBANG\"          \"HALIM PERDANA KUSUMAH\" \"JATI PULO\"            \n [4] \"KAMPUNG TENGAH\"        \"KERENDANG\"             \"KRAMAT JATI\"          \n [7] \"PAL MERIAM\"            \"PINANG RANTI\"          \"PULAU HARAPAN\"        \n[10] \"PULAU KELAPA\"          \"PULAU PANGGANG\"        \"PULAU PARI\"           \n[13] \"PULAU TIDUNG\"          \"PULAU UNTUNG JAWA\"     \"RAWA JATI\"            \n\n\n\nunique(jkt_village$Sub_District[!(jkt_village$Sub_District %in% jkt_vaccination$Sub_District)])\n\n[1] \"KRENDANG\"             \"RAWAJATI\"             \"TENGAH\"              \n[4] \"BALEKAMBANG\"          \"PINANGRANTI\"          \"JATIPULO\"            \n[7] \"PALMERIAM\"            \"KRAMATJATI\"           \"HALIM PERDANA KUSUMA\"\n\n\nFrom the above output, we can clearly tell the difference…. In the sub-district columns for jkt_vaccination, the Sub district values have spaces unlike jkt_village where the Sub district values doesnt have spaces. The below code chunk will rename the values.\n\njkt_village$Sub_District[jkt_village$Sub_District == 'KRENDANG'] <- 'KERENDANG'\njkt_village$Sub_District[jkt_village$Sub_District == 'PALMERIAM'] <- 'PAL MERIAM'\njkt_village$Sub_District[jkt_village$Sub_District == 'PINANGRANTI'] <- 'PINANG RANTI'\njkt_village$Sub_District[jkt_village$Sub_District == 'RAWAJATI'] <- 'RAWA JATI'\njkt_village$Sub_District[jkt_village$Sub_District == 'BALEKAMBANG'] <- 'BALE KAMBANG'\njkt_village$Sub_District[jkt_village$Sub_District == 'HALIM PERDANA KUSUMA'] <- 'HALIM PERDANA KUSUMAH'\njkt_village$Sub_District[jkt_village$Sub_District == 'JATIPULO'] <- 'JATI PULO'\njkt_village$Sub_District[jkt_village$Sub_District == 'KALI BARU'] <- 'KALIBARU'\njkt_village$Sub_District[jkt_village$Sub_District == 'TENGAH'] <- 'KAMPUNG TENGAH'\njkt_village$Sub_District[jkt_village$Sub_District == 'KRAMATJATI'] <- 'KRAMAT JATI'\n\nWhen checking for unique values in jkt_vaccination dataframe, we can see that certain islands are still inside. The question is how to tell there are island values in the dataframe? Pulau is a malay word for ‘island’. The below code chunk will remove the remaining islands in the jkt_vaccination dataframe.\n\njkt_vaccination <- jkt_vaccination[!(jkt_vaccination$Sub_District==\"PULAU KELAPA \" | jkt_vaccination$Sub_District==\"PULAU TIDUNG\" | jkt_vaccination$Sub_District==\"PULAU PANGGANG\" | jkt_vaccination$Sub_District==\"PULAU UNTUNG JAWA\" | jkt_vaccination$Sub_District==\"PULAU HARAPAN\" | jkt_vaccination$Sub_District==\"PULAU PARI\"), ]\n\nBecause we have modified jkt_vaccination dataframe, there is a need to perform a left_join() again to update the combined dataframe.\n\njkt_combined_vaccination <- left_join(jkt_village, jkt_vaccination,\n                              by=c(\"Sub_District\"=\"Sub_District\"))\n\nVisualizing the combined dataframe again to ensure that there are no more missing values.\n\nTotal_Population = tm_shape(jkt_combined_vaccination)+\n  tm_fill(\"Total_Population\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Total Population in Jakarta\")\n\nNot_Yet_Vaccinated = tm_shape(jkt_combined_vaccination)+\n  tm_fill(\"Not_Yet_Vaccinated\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Not Yet Vaccinated in Jakarta\")\n\nTarget = tm_shape(jkt_combined_vaccination)+\n  tm_fill(\"Target\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Target Count for Jarkata\")\n\ntmap_arrange(Total_Population,Not_Yet_Vaccinated,Target)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#compute-monthly-vaccination-rate",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#compute-monthly-vaccination-rate",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "6.1 Compute Monthly Vaccination Rate",
    "text": "6.1 Compute Monthly Vaccination Rate\nThe formula for Vaccination Rate will be: ((target - people not yet vaccinated) / target ) * 100\n\nvaccination_rate <- jkt_vaccination %>%\n  inner_join(jkt_village, by=c(\"Sub_District\" = \"Sub_District\")) %>%\n  group_by(Sub_District, Date) %>%\n  dplyr::summarise(`vaccination_rate` = (Target-Not_Yet_Vaccinated)/Target) %>% ungroup() %>% pivot_wider(names_from = Date,\n              values_from = vaccination_rate)\n\nShowing the Output of Vaccination rate across months at a sub-district level\n\nvaccination_rate\n\n# A tibble: 261 × 13\n   Sub_District  2021-…¹ 2021-…² 2021-…³ 2021-…⁴ 2021-…⁵ 2021-…⁶ 2022-…⁷ 2022-…⁸\n   <chr>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ANCOL           0.485   0.616   0.721   0.750   0.769   0.789   0.806   0.808\n 2 ANGKE           0.528   0.646   0.742   0.777   0.796   0.809   0.817   0.819\n 3 BALE KAMBANG    0.370   0.570   0.700   0.739   0.766   0.782   0.795   0.797\n 4 BALI MESTER     0.470   0.620   0.742   0.782   0.803   0.817   0.828   0.831\n 5 BAMBU APUS      0.476   0.642   0.762   0.809   0.825   0.834   0.845   0.847\n 6 BANGKA          0.516   0.613   0.732   0.780   0.798   0.807   0.815   0.817\n 7 BARU            0.579   0.676   0.795   0.829   0.842   0.850   0.858   0.860\n 8 BATU AMPAR      0.398   0.584   0.706   0.745   0.771   0.788   0.801   0.804\n 9 BENDUNGAN HI…   0.536   0.626   0.756   0.791   0.805   0.814   0.823   0.825\n10 BIDARA CINA     0.406   0.576   0.710   0.752   0.770   0.782   0.792   0.795\n# … with 251 more rows, 4 more variables: `2022-03-31` <dbl>,\n#   `2022-04-30` <dbl>, `2022-05-31` <dbl>, `2022-06-30` <dbl>, and abbreviated\n#   variable names ¹​`2021-07-31`, ²​`2021-08-31`, ³​`2021-09-30`, ⁴​`2021-10-31`,\n#   ⁵​`2021-11-30`, ⁶​`2021-12-31`, ⁷​`2022-01-31`, ⁸​`2022-02-27`\n\n\nConverting Vaccination Rate tbl_df (a subclass of dataframe) to SF so that it can be used to plot Choropleth Map\n\nvaccination_rate <- vaccination_rate %>% left_join(jkt_village, by=c(\"Sub_District\"=\"Sub_District\"))\nvaccination_rate <- st_as_sf(vaccination_rate)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#choropleth-map-for-monthly-vaccination-rate",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#choropleth-map-for-monthly-vaccination-rate",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "6.2 Choropleth Map for Monthly Vaccination Rate",
    "text": "6.2 Choropleth Map for Monthly Vaccination Rate\n\n6.2.1 Function for Choropleth\nSince there are 12 months of vaccination data for us to plot, it would be neater and easier for us to write a plot under a function and just execution the function 12 times instead of writing the whole chunk of code\n\njenks_plot <- function(date, dataframe) {\n  tm_shape(vaccination_rate) +\n    tm_polygons() +\n  tm_shape(dataframe) +\n    tm_fill(date, \n          n= 6,\n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Vaccination Rate\") +\n    tm_layout(main.title = date,\n          main.title.position = \"center\",\n          main.title.size = 1.2,\n          legend.height = 0.45, \n          legend.width = 0.35,\n          frame = TRUE) +\n    tm_borders(alpha = 0.5)\n}\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(\"2021-07-31\",vaccination_rate),\n             jenks_plot(\"2021-08-31\",vaccination_rate),\n             jenks_plot(\"2021-09-30\",vaccination_rate),\n             jenks_plot(\"2021-10-31\",vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(\"2021-11-30\",vaccination_rate),\n             jenks_plot(\"2021-12-31\",vaccination_rate),\n             jenks_plot(\"2022-01-31\",vaccination_rate),\n             jenks_plot(\"2022-02-27\",vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(\"2022-03-31\",vaccination_rate),\n             jenks_plot(\"2022-04-30\",vaccination_rate),\n             jenks_plot(\"2022-05-31\",vaccination_rate),\n             jenks_plot(\"2022-06-30\",vaccination_rate)\n)\n\n\n\n\n\n\n6.2.2 Determining Breakpoints\nGetting the values of the breakpoints\n\nsummary(vaccination_rate)\n\n Sub_District         2021-07-31       2021-08-31       2021-09-30    \n Length:261         Min.   :0.3701   Min.   :0.5456   Min.   :0.6697  \n Class :character   1st Qu.:0.4759   1st Qu.:0.6194   1st Qu.:0.7374  \n Mode  :character   Median :0.5134   Median :0.6350   Median :0.7546  \n                    Mean   :0.5107   Mean   :0.6364   Mean   :0.7534  \n                    3rd Qu.:0.5419   3rd Qu.:0.6540   3rd Qu.:0.7688  \n                    Max.   :0.6520   Max.   :0.7299   Max.   :0.8370  \n   2021-10-31       2021-11-30       2021-12-31       2022-01-31    \n Min.   :0.7176   Min.   :0.7385   Min.   :0.7565   Min.   :0.7680  \n 1st Qu.:0.7798   1st Qu.:0.7980   1st Qu.:0.8097   1st Qu.:0.8190  \n Median :0.7937   Median :0.8114   Median :0.8208   Median :0.8296  \n Mean   :0.7925   Mean   :0.8094   Mean   :0.8201   Mean   :0.8294  \n 3rd Qu.:0.8077   3rd Qu.:0.8232   3rd Qu.:0.8320   3rd Qu.:0.8394  \n Max.   :0.8660   Max.   :0.8750   Max.   :0.8834   Max.   :0.8903  \n   2022-02-27       2022-03-31       2022-04-30       2022-05-31    \n Min.   :0.7723   Min.   :0.7766   Min.   :0.7801   Min.   :0.7813  \n 1st Qu.:0.8218   1st Qu.:0.8260   1st Qu.:0.8295   1st Qu.:0.8303  \n Median :0.8317   Median :0.8354   Median :0.8380   Median :0.8385  \n Mean   :0.8316   Mean   :0.8353   Mean   :0.8384   Mean   :0.8393  \n 3rd Qu.:0.8415   3rd Qu.:0.8453   3rd Qu.:0.8489   3rd Qu.:0.8495  \n Max.   :0.8919   Max.   :0.8946   Max.   :0.8969   Max.   :0.8976  \n   2022-06-30       Object_ID     Village_Code         Village         \n Min.   :0.7831   Min.   :25384   Length:261         Length:261        \n 1st Qu.:0.8318   1st Qu.:25449   Class :character   Class :character  \n Median :0.8403   Median :25514   Mode  :character   Mode  :character  \n Mean   :0.8408   Mean   :25514                                        \n 3rd Qu.:0.8505   3rd Qu.:25579                                        \n Max.   :0.8978   Max.   :25644                                        \n      Code          Province             City             District        \n Min.   :317101   Length:261         Length:261         Length:261        \n 1st Qu.:317204   Class :character   Class :character   Class :character  \n Median :317308   Mode  :character   Mode  :character   Mode  :character  \n Mean   :317334                                                           \n 3rd Qu.:317410                                                           \n Max.   :317510                                                           \n Total_Population          geometry  \n Min.   :  3088   MULTIPOLYGON :261  \n 1st Qu.: 26177   epsg:23845   :  0  \n Median : 38845   +proj=tmer...:  0  \n Mean   : 42082                      \n 3rd Qu.: 52424                      \n Max.   :167523                      \n\n\nFrom the above results, we can see that the minimum value is 0.37 and the maximum value is 0.8978. Thus, we will use the range of 0.3 to 0.9 for our breakpoint.\n\nbreakpoints = c(0.37, 0.5, 0.6, 0.7, 0.8, 0.9)\n\n\n\n6.2.3 Function for Plotting Breakpoints\n\nbreakpoint_plot <- function(date, dataframe) {\n  tm_shape(vaccination_rate) +\n    tm_polygons() +\n  tm_shape(dataframe) +\n    tm_fill(date, \n          breaks= breakpoints,\n          palette = \"Blues\",\n          title = \"Vaccination Rate\") +\n    tm_layout(main.title = date) +\n    tm_borders(alpha = 0.5)\n}\n\n\n\n6.2.4 Plotting Breakpoints with Function created\n\ntmap_mode(\"plot\")\ntmap_arrange(breakpoint_plot(\"2021-07-31\", vaccination_rate),\n             breakpoint_plot(\"2021-08-31\", vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(breakpoint_plot(\"2021-09-30\", vaccination_rate),\n             breakpoint_plot(\"2021-10-31\", vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(breakpoint_plot(\"2021-11-30\",vaccination_rate),\n             breakpoint_plot(\"2021-12-31\",vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(breakpoint_plot(\"2022-01-31\",vaccination_rate),\n             breakpoint_plot(\"2022-02-27\",vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(breakpoint_plot(\"2022-03-31\",vaccination_rate),\n             breakpoint_plot(\"2022-04-30\",vaccination_rate)\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(breakpoint_plot(\"2022-05-31\",vaccination_rate),\n             breakpoint_plot(\"2022-06-30\",vaccination_rate)\n)\n\n\n\n\nFor easier observation, I compiled the following output in a GIF.\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nIn July 2021, there is a slightly higher vaccination at the northern, central and southern area as compared to other areas given that it is in darker shade of blue\nFrom August to September 2021 we can an increase in vaccination rate throughout jarkata and the more prominent increases in vaccination area are on the eastern side.\nFrom October to December 2021, the increase in vaccination rate is faster throughout jarkarta, especially in the central, northern & southern\nFrom January to June 2022, some sub-districts in the northern west, northern east and in the central have obvious increase in vaccination rate."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computing-local-gi-values-of-the-monthly-vaccination-rate",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computing-local-gi-values-of-the-monthly-vaccination-rate",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "7.1 Computing local Gi* values of the monthly vaccination rate",
    "text": "7.1 Computing local Gi* values of the monthly vaccination rate\nTo compute the local Gi* values, we need an attribute table that stores the following: date, sub district & vaccination rate.\n\nvaccination_table <- jkt_combined_vaccination %>% select(10, 8, 11, 12) %>% st_drop_geometry()\n\n# adding a new column, Vaccination_Rate which stores the vaccination rate by sub-district and date\nvaccination_table$vaccination_rate <- (vaccination_table$Target - vaccination_table$Not_Yet_Vaccinated) / vaccination_table$Target\n\n# final vaccination attribute table with Date, Sub_District and Vaccination_Rate\nvaccination_table <- tibble(vaccination_table %>% select(1,2,5))\n\nCreating time-series cube with spacetime()\n\nvaccination_rate_st <- spacetime(vaccination_table, jkt_village,\n                          .loc_col = \"Sub_District\",\n                          .time_col = \"Date\")\n\n\nis_spacetime_cube(vaccination_rate_st)\n\n[1] TRUE\n\n\nFrom the above output, we can see that vaccination_rate_st has been converted into a space time cube\nTo compute local Gi* , we first need to derive the spatial weight. The code chunk below will be used to identify neighbours and to derive inverse distance weights.\n\nvaccination_rate_nb <- vaccination_rate_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale=1,\n                                  alpha=1),\n         .before=1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n\nNow this dataset has neighbours and weight for each time slice\n\nhead(vaccination_rate_nb)\n\n# A tibble: 6 × 5\n  Date       Sub_District  vaccination_rate nb        wt       \n  <date>     <chr>                    <dbl> <list>    <list>   \n1 2021-07-31 KEAGUNGAN                0.533 <int [6]> <dbl [6]>\n2 2021-07-31 GLODOK                   0.616 <int [7]> <dbl [7]>\n3 2021-07-31 HARAPAN MULIA            0.497 <int [6]> <dbl [6]>\n4 2021-07-31 CEMPAKA BARU             0.467 <int [7]> <dbl [7]>\n5 2021-07-31 PASAR BARU               0.593 <int [9]> <dbl [9]>\n6 2021-07-31 KARANG ANYAR             0.522 <int [7]> <dbl [7]>\n\n\nSetting seed value so that the computation is reproducible.\n\nset.seed(1234)\n\nWe now can use the new columns to maually calculate the local Gi* for each location and we are grouping it by date using the local_gstar_perm. Afterwhich, we will use the unnest() to unnest gi_star coloumn of the newly created gi_values dataframe.\n\ngi_values <- vaccination_rate_nb %>%\n  group_by(Date) %>%\n  mutate(gi_value = local_gstar_perm(\n    vaccination_rate, nb, wt, nsim = 99)) %>%\n    unnest(gi_value)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualizing-gi-maps-based-on-monthly-vaccination-rate",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualizing-gi-maps-based-on-monthly-vaccination-rate",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "7.2 Visualizing Gi* Maps based on monthly vaccination rate",
    "text": "7.2 Visualizing Gi* Maps based on monthly vaccination rate\nBefore displaying the Gi* map, we need to join both jkt_combined_vaccination and gi_values.\n\ncombined_jkt_gi <- jkt_combined_vaccination %>%\n  left_join(gi_values)\n\nPreviewing combined_jkt_gi\n\ncombined_jkt_gi\n\nSimple feature collection with 3132 features and 23 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -3644275 ymin: 663887.8 xmax: -3606237 ymax: 701380.1\nProjected CRS: DGN95 / Indonesia TM-3 zone 54.1\nFirst 10 features:\n   Object_ID Village_Code   Village   Code    Province          City   District\n1      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n2      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n3      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n4      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n5      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n6      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n7      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n8      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n9      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n10     25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n   Sub_District Total_Population       Date Target Not_Yet_Vaccinated\n1     KEAGUNGAN            21609 2022-02-27  17387               2755\n2     KEAGUNGAN            21609 2022-04-30  17387               2593\n3     KEAGUNGAN            21609 2022-06-30  17387               2553\n4     KEAGUNGAN            21609 2021-11-30  17387               3099\n5     KEAGUNGAN            21609 2021-09-30  17387               4203\n6     KEAGUNGAN            21609 2021-08-31  17387               6054\n7     KEAGUNGAN            21609 2021-12-31  17387               2924\n8     KEAGUNGAN            21609 2022-01-31  17387               2783\n9     KEAGUNGAN            21609 2021-07-31  17387               8126\n10    KEAGUNGAN            21609 2022-03-31  17387               2675\n   vaccination_rate                      nb\n1         0.8415483 1, 2, 39, 152, 158, 166\n2         0.8508656 1, 2, 39, 152, 158, 166\n3         0.8531662 1, 2, 39, 152, 158, 166\n4         0.8217634 1, 2, 39, 152, 158, 166\n5         0.7582677 1, 2, 39, 152, 158, 166\n6         0.6518088 1, 2, 39, 152, 158, 166\n7         0.8318284 1, 2, 39, 152, 158, 166\n8         0.8399379 1, 2, 39, 152, 158, 166\n9         0.5326393 1, 2, 39, 152, 158, 166\n10        0.8461494 1, 2, 39, 152, 158, 166\n                                                                             wt\n1  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n2  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n3  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n4  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n5  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n6  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n7  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n8  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n9  0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n10 0.000000000, 0.001071983, 0.001039284, 0.001417870, 0.001110612, 0.001297268\n    gi_star        e_gi       var_gi     p_value p_sim p_folded_sim    skewness\n1  2.478859 0.003831172 8.419778e-10 0.013180341  0.02         0.01 -0.03194341\n2  2.825027 0.003827108 7.494269e-10 0.004727670  0.04         0.02 -0.06356613\n3  2.856078 0.003828377 6.980492e-10 0.004289104  0.02         0.01  0.09797571\n4  2.400280 0.003831389 1.665572e-09 0.016382514  0.02         0.01 -0.75383323\n5  2.340497 0.003839767 1.969413e-09 0.019258078  0.02         0.01 -0.45706127\n6  2.697283 0.003843766 4.229906e-09 0.006990777  0.02         0.01  0.19649652\n7  2.737341 0.003831004 9.440138e-10 0.006193804  0.02         0.01 -0.13372915\n8  2.601179 0.003833862 7.779184e-10 0.009290410  0.02         0.01 -0.51408533\n9  2.442508 0.003830045 2.133669e-08 0.014585591  0.02         0.01 -0.40723702\n10 2.631489 0.003829259 7.973859e-10 0.008501151  0.04         0.02  0.23980167\n      kurtosis                       geometry\n1  -0.81316154 MULTIPOLYGON (((-3626874 69...\n2   0.55021722 MULTIPOLYGON (((-3626874 69...\n3  -0.50749002 MULTIPOLYGON (((-3626874 69...\n4   0.54499553 MULTIPOLYGON (((-3626874 69...\n5   0.28836755 MULTIPOLYGON (((-3626874 69...\n6   0.03187466 MULTIPOLYGON (((-3626874 69...\n7  -0.02562365 MULTIPOLYGON (((-3626874 69...\n8   0.07882560 MULTIPOLYGON (((-3626874 69...\n9   0.28865884 MULTIPOLYGON (((-3626874 69...\n10 -0.20275849 MULTIPOLYGON (((-3626874 69...\n\n\n\n7.2.1 Function to Plot Gi* Value map\nIn order to not repeat a whole chunk of code for different months, it would be easier to create a function to plot the Gi* value map and call it.\n\ngi_plot <- function(month, date) {\n  map1 = tm_shape(filter(combined_jkt_gi, Date == date)) +\n    tm_fill(\"gi_star\") +\n    tm_borders(alpha = 0.5) +\n    tm_view(set.zoom.limits = c(6, 8)) +\n    tm_layout(main.title = paste(\"Gi* of Vaccination Rate\", month), main.title.size = 0.8)\n  \n  map2 = tm_shape(filter(combined_jkt_gi, Date == date)) +\n    tm_fill(\"p_sim\", breaks = c(0, 0.05, 1)) +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"p-value of Vaccination Rate\", month), main.title.size = 0.8)\n  \n  tmap_arrange(map1, map2)\n}\n\n\n\n7.2.2 Plotting Gi* Value Map\n\ntmap_mode(\"plot\")\ngi_plot(\"July 2021\",\"2021-07-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"August 2021\", \"2021-08-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"September 2021\", \"2021-09-30\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"October 2021\", \"2021-10-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"November 2021\", \"2021-11-30\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"December 2021\",\"2021-12-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"January 2022\", \"2022-01-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"Feburary 2022\", \"2022-02-27\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"March 2022\", \"2022-03-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"April 2022\",\"2022-04-30\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"May 2022\", \"2022-05-31\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"June 2022\",\"2022-06-30\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistical Conclusion\n\n\n\nFor July , August and September 2021, we can see that the areas with significant p values are located in areas at Northern and central side.\nFrom October onwards to June 2022, the areas with significant p-values are mostly at locations i the northern east, northern west, northern and central area.\nFor hot and cold spots, we can see from the output above (right side image) that it is represented in a light yellow shade, representing that it is significant.\nThroughout the time line of July 2021 to June 2022, we can see that the hotspot is gradually moving towards the southern side while for cold spots, it seems like it is randomly distributed with a focus on the central area and the northern east area. Based from the values, the gi* values are inreasing in a negative manner."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-hot-and-cold-spot",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-hot-and-cold-spot",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "7.3 Visualising Hot and Cold Spot",
    "text": "7.3 Visualising Hot and Cold Spot\n\njakarta_sig <- combined_jkt_gi %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(combined_jkt_gi) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(jakarta_sig) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha = 0.4)\n\n\n\n\nFrom the above output, we can see that there are multiple hotspots located at the northern and southern side of Jakarta whereas for cold spots, it can be found in the central and eastern side of Jakarta."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#mann-kendall-test",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#mann-kendall-test",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "8.1 Mann-Kendall Test",
    "text": "8.1 Mann-Kendall Test\nPerforming Mann-Kendall Test using spatio-temporal local Gi* values\n\n8.1.1 Sub-district 1 “ANCOL”\n\nsubdistrict <- gi_values %>%\n  ungroup() %>%\n  filter(Sub_District == \"ANCOL\") %>%\n  select(Sub_District, Date, gi_star)\n\nPlotting results\n\np <- ggplot(data = subdistrict,\n       aes(x = Date,\n           y = gi_star)) + \n  geom_line() + \n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\nsubdistrict %>%\n  summarise(mk = list(\n    unclass(\n      MannKendall(gi_star)))) %>% \n  unnest_wider(mk)\n\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n1 -0.273 0.244   -18  66.0  213.\n\n\n\n\n\n\n\n\nObservation\n\n\n\nFrom the results above, we can see that the p-value is 0.24 which is above 0.05. Thus, this p-value is not significant. Furthermore, it also tells us that it has a steep downward and insignificant trend.\n\n\n\n\n8.1.2 Sub-district 2 “KEAGUNGAN”\n\nsubdistrict <- gi_values %>%\n  ungroup() %>%\n  filter(Sub_District == \"KEAGUNGAN\") %>%\n  select(Sub_District, Date, gi_star)\n\nPlotting Results\n\np <- ggplot(data = subdistrict,\n       aes(x = Date,\n           y = gi_star)) + \n  geom_line() + \n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\nsubdistrict %>%\n  summarise(mk = list(\n    unclass(\n      MannKendall(gi_star)))) %>% \n  unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau     sl     S     D  varS\n  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 0.455 0.0467    30  66.0  213.\n\n\n\n\n\n\n\n\nObservation\n\n\n\nFrom the results above, we can see that the p-value is 0.04 which is below 0.05. This shows that the p-value is significant. It also tells us that it has a slight upward and significant trend.\n\n\n\n\n8.1.3 Sub-district 3 “GLODOK”\n\nsubdistrict <- gi_values %>%\n  ungroup() %>%\n  filter(Sub_District == \"GLODOK\") %>%\n  select(Sub_District, Date, gi_star)\n\nPlotting the results\n\np <- ggplot(data = subdistrict,\n       aes(x = Date,\n           y = gi_star)) + \n  geom_line() + \n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\nsubdistrict %>%\n  summarise(mk = list(\n    unclass(\n      MannKendall(gi_star)))) %>% \n  unnest_wider(mk)\n\n# A tibble: 1 × 5\n     tau     sl     S     D  varS\n   <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 -0.455 0.0467   -30  66.0  213.\n\n\n\n\n\n\n\n\nObservation\n\n\n\nFrom the results above, we can see that the p-value is 0.04 which is below 0.05. This shows that the p-value is significant. It also tells us that it has a steep downward and significant trend."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#ehsa-map-of-the-gi-values-of-vaccination-rate",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#ehsa-map-of-the-gi-values-of-vaccination-rate",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "8.2 EHSA Map of the Gi* values of Vaccination Rate",
    "text": "8.2 EHSA Map of the Gi* values of Vaccination Rate\nwe need to perform mann kendall test for each location to identify the emerging hot/cold spots.\n\nehsa <- gi_values %>%\n  group_by(Sub_District) %>%\n  summarise(mk = list(\n    unclass(\n      MannKendall(gi_star)))) %>%\n  unnest_wider(mk)\n\narrange to show significant emerging hot spots\n\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\nemerging\n\n# A tibble: 5 × 6\n  Sub_District       tau        sl     S     D  varS\n  <chr>            <dbl>     <dbl> <dbl> <dbl> <dbl>\n1 PETOJO UTARA    -0.970 0.0000156   -64  66.0  213.\n2 KAYU MANIS       0.970 0.0000156    64  66.0  213.\n3 JATINEGARA KAUM  0.939 0.0000287    62  66.0  213.\n4 PISANGAN BARU    0.939 0.0000287    62  66.0  213.\n5 PASAR BARU      -0.939 0.0000288   -62  66.0  213.\n\n\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object (vaccination_rate_st), and the quoted name of the variable of interest (vaccination_rate). The k argument is used to specify the number of time lags which is set to 1 by default. Also, nsim for the number of simulations performed.\n\nehsa <- emerging_hotspot_analysis(\n  x = vaccination_rate_st,\n  .var = \"vaccination_rate\",\n  k = 1,\n  nsim = 99\n)\n\nVisualizing the distribution of EHSA classes.\n\nggplot(data = ehsa,\n       aes(x=classification, fill=classification)) + \n  geom_bar()\n\n\n\n\nFrom the above results, we can see that oscilating hotspots contains the highest number of sub districts."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-ehsa",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-ehsa",
    "title": "Take-home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "8.3 Visualising EHSA",
    "text": "8.3 Visualising EHSA\nBefore visualising geographical distribution of EHSA classes, we need to join jkt_combined_vacination and ehsa together.\n\ncombined_jkt_ehsa <- jkt_combined_vaccination %>%\n  left_join(ehsa, by = c(\"Sub_District\" = \"location\"))\n\nNext, we can plot a choropleth map (categorical) for the significant locations using tmap.\n\n# this adds a new column \"NewClassification\" so that we can include a class called \"insignificant\" in our plot\ncombined_jkt_ehsa <- combined_jkt_ehsa %>% mutate(Classification = \n                                                            case_when(p_value < 0.05 ~ classification,\n                                                                      p_value >= 0.05 ~ \"insignificant\"))\n\nPlotting the results\n\ntmap_mode(\"plot\")\ntm_shape(combined_jkt_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(combined_jkt_ehsa) +\n  tm_fill(\"Classification\",\n          palette = c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")) + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n\nAmongst the classification, the number of the oscilating hotspot is the greatest, followed by sporadic coldspot and finally oscilating coldspot.\nWe can also infer that the oscilating hotspot is quite dominantely distributed across as compared to sporadic coldspot where it primarily found in central area. For oscilating coldspot, it is distributed across the southern, central, western and eastern area of jakarta.\nFor no patterns, it can be seen that it is concentrated in the central area with the remaining being located at the southern and western area. Lastly, for insignificant classification, it appears mostly in the central and western area."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/in-class_ex09.html",
    "href": "In-Class_Ex/In-Class_Ex09/in-class_ex09.html",
    "title": "in-class_ex09",
    "section": "",
    "text": "Installing and Load Packages\n\n#spatialML GWRF\npacman::p_load(sf, spdep, GWmodel, SpatialML, tidyverse, \n               tmap, ggpubr, olsrr, devtools, rsample)\n\n\n#reading the input data sets. It is in simple feature (SF) data frame.\n#rds is faster to retrieve\nmdata <- read_rds(\"data/aspatial/mdata.rds\")\n\n\n\nData sampling\n\n#the entire data are split into training and test data sets with \n#65% training data, 35% test data\nset.seed(1234)\nresale_split <- initial_split(mdata,\n                              prop = 6.5/10)\n#renaming data into train data and test data\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n\n\nwrite_rds(train_data, \"data/model/train_data.rds\")\nwrite_rds(test_data, \"data/model/test_data.rds\")\n\nComputing Correlation Matrix\n\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\ncorrplot::corrplot(cor(mdata_nogeo[, 2:17]),\n                   diag = FALSE,\n                   order = \"AOE\")\n\n\n\n\n\ntrain_data <- read_rds(\"data/model/train_data.rds\")\ntest_data <- read_rds(\"data/model/test_data.rds\")\n\n\n#only difference is with data=train_data (predictive model)\n\nprice_mlr <- lm(resale_price ~ floor_area_sqm + storey_order\n                + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, data=train_data)\nsummary(price_mlr)\n\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              107601.073  10601.261  10.150  < 2e-16 ***\nfloor_area_sqm             2780.698     90.579  30.699  < 2e-16 ***\nstorey_order              14299.298    339.115  42.167  < 2e-16 ***\nremaining_lease_mths        344.490      4.592  75.027  < 2e-16 ***\nPROX_CBD                 -16930.196    201.254 -84.124  < 2e-16 ***\nPROX_ELDERLYCARE         -14441.025    994.867 -14.516  < 2e-16 ***\nPROX_HAWKER              -19265.648   1273.597 -15.127  < 2e-16 ***\nPROX_MRT                 -32564.272   1744.232 -18.670  < 2e-16 ***\nPROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\nPROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\nPROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\nWITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  < 2e-16 ***\nWITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\nWITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61650 on 10320 degrees of freedom\nMultiple R-squared:  0.7373,    Adjusted R-squared:  0.737 \nF-statistic:  2069 on 14 and 10320 DF,  p-value: < 2.2e-16\n\n\n\nwrite_rds(price_mlr, \"data/model/price_mlr.rds\")\n\n\n#changing from sf form into sp form\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ... \n\n\n\n#random forest method\n#need take the columns so that the algorithm can work\n#ranger dont understand sf format\n#extract out geometric information and save them in different coordinates file\n#| eval: false\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\n\ncoords_train <- write_rds(coords_train, \"data/model/coords_train.rds\")\ncoords_test <- write_rds(coords_test, \"data/model/coords_test.rds\")\n\n\nDropping Geometry Field\n\ntrain_data <- train_data %>%\n  st_drop_geometry()\n\n\n\nCalibrating Random Forest\n\n#random forest, thus need set seed\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order\n                + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n             data=train_data)\n\n\n#No of trees: 500 subset\n#Target node size: default is 5\n#MSE = Mean squared error\n#If comparing model, square root MSE then compare with RSE (residual standard error in OLS Model)\nprint(rf)\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       728602496 \nR squared (OOB):                  0.9495728 \n\n\n\n\nCalibrating Geographically Weighted Random Forest Model\n\n#need coordinates and specify bandwidth and kernel.\n#55 nearest transaction because kernel is adaptive\n#55 need to be calculated from a function (calculate first before doing this function)\n#if kernel is fixed, is distance\n#first part using it as a explanatory variable\n#second part using it as a predictive modelling\n#aicc , penalise number of observations that i have (if no biasness in sampling)\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order\n                + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n             dframe = train_data,\n             bw=55,\n             kernel=\"adaptive\",\n             coords=coords_train)\n\n\n#how to determine bandwidth\n#1st: borrow bandwidth from GWR \n#2nd: grf.bw function\n\n\n#global model will tell u which variable contribute the most\n#gwRF_adaptive$Global.Model$variable.importance\n#vi_df <- as.data.frame(gwRF_adaptive$Global.Model$variable.importance)\nwrite_rds(gwRF_adaptive, \"data/model/gwrf_adaptive.rds\")\n\n\n#predicting by using test data\n#preparing the test data\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n\n\n#predicting with test data\n#assume projected coordinate system, SVY21\ngwRF_pred <- predict.grf(gwRF_adaptive,\n                         test_data,\n                         x.var.name=\"X\",\n                         y.var.name=\"Y\",\n                         local.w=1,\n                         global.w=0)\n\n\n#output is vector , vector of predictive value\ngwRF_pred_df <- as.data.frame(gwRF_pred)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/data/geospatial/MPSZ-2019.html",
    "href": "In-Class_Ex/In-Class_Ex09/data/geospatial/MPSZ-2019.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/in-class_ex10.html",
    "href": "In-Class_Ex/In-Class_Ex10/in-class_ex10.html",
    "title": "Modelling Geographical Accesibility",
    "section": "",
    "text": "Installing and Loading Packages\n\npacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse)\n\nalso installing the dependency 'dplyr'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n\n\npackage 'dplyr' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'dplyr'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem\ncopying C:\\R-4.2.2\\library\\00LOCK\\dplyr\\libs\\x64\\dplyr.dll to\nC:\\R-4.2.2\\library\\dplyr\\libs\\x64\\dplyr.dll: Permission denied\n\n\nWarning: restored 'dplyr'\n\n\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\User\\AppData\\Local\\Temp\\RtmpMfeQjI\\downloaded_packages\n\n\n\nggstatsplot installed\n\n\nWarning in pacman::p_load(tmap, SpatialAcc, sf, ggstatsplot, reshape2, tidyverse): Failed to install/load:\nggstatsplot\n\n\n\n\nImporting Geospatial Data\n\nhexagon <- st_read(dsn=\"data/geospatial\",\n                   layer = \"hexagons\")\n\nReading layer `hexagons' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\neldercare <- st_read(dsn = \"data/geospatial\",\n                     layer = \"ELDERCARE\")\n\nReading layer `ELDERCARE' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `C:\\HoYongQuan\\IS415-GAA(New)\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nUpdating CRS Information\n\nmpsz <- st_transform(mpsz, 3414)\neldercare <- st_transform(eldercare, 3414)\nhexagon <- st_transform(hexagon, 3414)\n\n\n\nCleaning and updating attribute fields of the geospatial data\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  rename(destination_id = fid,\n         postal_code = ADDRESSPOS) %>%\n  mutate(capacity = 100)\n\n\n#each of hexagon will have the demand of 100\nhexagon <- hexagon %>%\n  select(fid) %>%\n  rename(origin_id = fid) %>%\n  mutate (demand = 100)\n\n\n\nImporting Distance Matrix\n\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\nRows: 375000 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, tot...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n#note: since tidyr version 1.0 a new function called 'pivot_wider' is introduce. You should use pivot-wider instead of spread()\n\n#spread: pivot\n#row: origin, col: num of eldercare (destination)\n\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost) %>%\n  select(c(-c('origin_id')))\n\nConverting to KM.\n\ndistmat_km <- as.matrix(distmat/1000)\n\nComputing Distance Matrix\n\neldercare_coord <- st_coordinates(eldercare)\nhexagon_coord <- st_coordinates(hexagon)\n\n\nEucMatrix <- SpatialAcc::distance(hexagon_coord,\n                                  eldercare_coord,\n                                  type = \"euclidean\"\n                                  )\n\n\nEucMatrix_km <- as.matrix(EucMatrix/1000)\n\nComputing Hansen’s Accessibility\n\n#threshold of 50km.\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\n\ncolnames(acc_Hansen) <- \"accHansen\"\n\n\nacc_Hansen <- as_tibble(acc_Hansen)\n\nJoining the acc_hansen tibble dataframe with the hexagon\n\nhexagon_Hansen <- bind_cols(hexagon, acc_Hansen)\n\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hansen) <- \"accHansen\"\nacc_Hansen <- tbl_df(acc_Hansen)\n\nWarning: `tbl_df()` was deprecated in dplyr 1.0.0.\nℹ Please use `tibble::as_tibble()` instead.\n\nhexagon_Hansen <- bind_cols(hexagon, acc_Hansen)\n\nGetting boundary of hexagon\n\n#mapex : map extend\nmapex <- st_bbox(hexagon)\n\nPlotting map - cartographic quality map\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\nStatistical Graphic Visualization\n\nhexagon_Hansen <- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\nPlotting the distribution\n\nggplot(data=hexagon_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)\n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  }
]